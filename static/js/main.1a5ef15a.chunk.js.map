{"version":3,"sources":["datatypes/Vertex.js","datatypes/Edge.js","networkgeneration/createRandomNetwork.js","datatypes/Force.js","NetworkAlgorithms/springEmbedding.js","NetworkAlgorithms/FruchtermanReingold.js","NetworkAlgorithms/kamadaKawai.js","NetworkAlgorithms/forceAtlas2.js","NetworkAlgorithms/forceAtlasLinLog.js","Spectral/spectralDrawing.js","datatypes/UnionSets.js","MSTAlgorithms/kruskal.js","MSTAlgorithms/prims.js","TSP/opt2.js","TSP/opt2Annealing.js","TSP/opt3.js","Coloring/GreedyColoring.js","Coloring/misraGries.js","Network.js","Settings/GeneralNetworkSettings.js","Settings/AlgorithmAttributes.js","Settings/NetworkAlgorithmSettings.js","Settings/Upload/UploadWindow.js","ConfirmationWindow.js","Settings/NetworkSideDrawer.js","Settings/NetworkNavBar.js","networkgeneration/createRandomNetwork3D.js","NetworkAlgorithms/FruchtermanReingold3D.js","NetworkAlgorithms/springEmbedding3D.js","NetworkAlgorithms/forceAtlasLinLog-3D.js","NetworkAlgorithms/forceAtlas2-3D.js","Network3D.js","NetworkCustom.js","App.js","serviceWorker.js","index.js"],"names":["Vertex","x","y","z","this","undefined","degree","size","color","other","vector","setX","setY","setZ","v","row","toString","Edge","start","end","weight","alpha","e","setColor","setAlpha","createRandomNetwork","maxWidth","maxHeight","numV","numE","conn","randomType","startColors","endColors","resize","minsize","maxsize","connected","seed","maxDegree","maxEdges","Math","floor","vertices","available_vertices","center","radius","i","point","createRandomPos","createRandomPosCircle","push","edges","already_connected","Map","remainingEdges","unvisited","visited","vIndex1","pickRandomVertex","v1","removeFromArray","visited_num","vIndex2","v2","increment_degree","indexTo","indexFrom","set","length","connectRandomVertices","slice","random1","random2","console","log","get","splice","root","initial_path","pick_random_array","remove_from_array","next_node","initial_random_cycle","path","startColor","endColor","max_degree","Infinity","max","find_max_degree","shouldRecolor","colorGradient","rgb_to_hsl","startHue","startSaturation","startLightness","endHue","incrementHue","gradient","hsl_to_rgb","red","green","blue","abs","createColorGradient","assign_size","assign_color","random","randomAngle","PI","cos","sin","array","index","concat","item","indexOf","selection","rgbColor","Cmax","Cmin","min","delta","lightness","calculate_hue","hue","saturation","C","m","X","check_degrees","Force","CREP","CSPRING","lx","ly","frepulse","dist","distance","unitV","unitVector","sqrt","fattract","distanceType","pow","new_x","new_y","K","ITERATIONS","unitvector","distX","distY","cool","t","tempHeuristic","initial_temperature","kamadaKawai","graph_distancex","graph_distancey","iterations","L0","new_vertices","new_edges","j","k","adj","force_list","adj_row","force_list_row","max_dij","maxRow","map","apply","FloydWarshallAlgo","ideal_length","maxdM","partials_list","dM","dx","dy","d2Ed2x","d2Ed2y","d2Edxdy","d2Edydx","dEdx","dEdy","new_dEdx","new_dEdy","kr","kg","tau","ksmax","fgravity","dist_center","randomVector","new_vector","normalize","sum","reduce","a","b","orthogonalize","u","D","numerator","dotProduct","vectorTimesMatrix","denominator","sumNeighborComponents","laplacian_i","getColumn","matrix","UnionSets","contents","representative","el","setRepresentative","getRepresentative","VERTICES","kruskal","dimension","coloring","rgb_to_str","color_animations","make_set","sorted_edges","sort","e1","e2","copy_input","createFrame","current_vertices","current_edges","trees","tree_indices","add","val","dim","copy_vertex","copy_edge","prim","inital_frame","vertexQueue","key","parent","vertex","A","pop","poppedValue","I","opt2","better_solution","selected_color","calculate_distance_path","n","new_path","temp","total_dist","opt2Annealing","temperature","minTemperature","maxTemperature","acceptance","selected_index","new_dist","accepted","opt3","c","values","reverse_segment_if_better","B","E","F","d0","d1","d2","d3","d4","reversed_path","reversed_path_three","GreedyColoring","initial_color","end_color","animations","assigned_colors","createAdjacencyMatrix","colors","color1","color2","num_colors","uniform_factor","new_colors","new_hue","convertHSLtoRGB","new_color","convertColor","getAvailableColors","getNeighbors","construct3DacceptableRGB","neighbors","all_colors","available_colors","colorConvert","checkColorIn","arr","split","parseFloat","color_array","parseInt","misraGries","uncolored_edges","copyEdges","incident_colors","createEmptyColors","incident_vertices","adjacent_vertices","createIncidentVertexList","edge_colors","edge_list","createEdgeColors","edge","getMaxFan","max_fan","fan_colors","u_adjacent_colors","fan_end_adjacent_colors","u_free_color","pickColor","fan_end_free_color","invertPath","w","findFreeColorToRotate","sub_fan","next_vertex","center_vertex","other_vertex","fan_options","other_vertex_index","fan","last_added","maximal","bad_colors","acceptable_color","remove_index","taken_colors","different","current_vertex","last_vertex","is_more_path","switchColor","vertex1","vertex2","R_prime","G_prime","B_prime","is_free","waitAnimateNetwork","that","startIndex","endIndex","func","setState","currentAnimations","currentAnimationIndex","animationIndex","paused","state","group","animateNetwork","animateColoring","animateTSP","NetworkVisualizer","props","canvas","React","createRef","width","height","sorted","maxtimeouts","algoType","layoutType","TSP","offsetX","offsetY","dragging","previousMouseX","previousMouseY","scaleFactor","app","help","tutorial","window","innerHeight","h","startRed","startGreen","startBlue","endRed","endGreen","endBlue","degreesize","mouseX","mouseY","current","ctx","getContext","scale","beginPath","fillStyle","arc","fill","closePath","index1","index2","moveTo","lineTo","globalAlpha","strokeStyle","stroke","cancelAnimation","settings","W","L","areascaling","eps","ka","distType","scaling_factor","f","vert_connected","calcs","addVector","iteration_animation","minX","minY","maxX","maxY","springEmbedding","spring","kIter","coolingtype","cTemp","temperature_list","ncalcs","iter_animations","origin","unitForce","fruchtermanReingold","fruchterman","fr","previous_forces","repulse_force","attractive_force","attractive_force_opp","gravity","center_force","gravity_force","sG","traG","swgG","traN","swgN","sN","forceAtlas2","forceatlas2","forceAtlasLinLog","forceatlaslinlog","DIMENSION","degree_row","laplacian_row","eigenvectors","new_vi_vector","new_vi","spectralDrawing","waitSetEdges","running","timeout","animationSpeed","current_temperature","opt2annealing","max_temperature","min_temperature","generateForceDirectedLayout","generateReingold","generateKamadaKawai","generateForceAtlas2","generateForceAtlasLinLog","generateHall","generateSpectralDrawing","generateRadialFlowDirected","generateKruskal","generatePrim","generate2Opt","generate2OptAnnealing","generate3Opt","generateGreedyVertex","generateMisraGries","setTimeout","setVector","setRandomizedType","waitSetRandomizedType","value","waitSetLayout","innerWidth","id","clearInterval","clearAnimations","sameColor","clientX","clientY","deltaX","deltaY","new_offsetX","new_offsetY","wdith","sign","new_scale_factor","animations_index","waitOpenNetworkSettings","waitOpenAlgorithmSettings","csvContent","toCSV","link","document","createElement","href","download","body","appendChild","click","removeChild","extension","image","toDataURL","className","style","marginTop","ref","onMouseDown","setDrag","onMouseUp","onMouseMove","updateCamera","onWheel","zoomCamera","title","disabled","backgroundSize","onClick","skipToBeginning","skipBackward","rewindFrame","hidden","runAlgorithm","pauseAnimation","skipFrame","skipForward","skipToEnd","resetCamera","resetColoring","onChange","event","setAlgoType","target","label","saveAsCSV","saveAs","openAlgorithmSettings","setLayoutType","resetNetwork","openNetworkSettings","Component","navbar","openSettings","generalsettings","setOpen","algorithmsettings","network","network3d","updateVertexSize","updateColoring","GeneralNetworkSettings","open","convertValuesToRgb","ms","waitSetVertices","waitSetConnected","waitSetDegreeSize","waitSetRed","waitSetGreen","waitSetBlue","waitSetEndRed","waitSetEndGreen","waitSetEndBlue","waitSetMinVertexSize","waitSetMaxVertexSize","isOpen","onRequestClose","overlayClassName","type","setAnimationSpeed","step","name","setVertices","setEdges","setConnected","setScaleDegreeSize","setMinVertexSize","setMaxVertexSize","backgroundColor","setRed","setGreen","setBlue","setEndRed","setEndGreen","setEndBlue","AlgorithmAttributes","layout","parentHelp","crep","cspring","cPercentage","collision","gravityType","overlappingNodes","kruskalred","kruskalgreen","kruskalblue","primred","primgreen","primblue","opt2timeout","opt2red","opt2green","opt2blue","opt2annealingtimeout","opt2annealingacceptance","opt2annealingred","opt2annealinggreen","opt2annealingblue","opt2annealingredEnd","opt2annealinggreenEnd","opt2annealingblueEnd","opt3timeout","opt3red","opt3green","opt3blue","greedyStartRed","greedy","greedyStartGreen","greedyStartBlue","greedyEndRed","greedyEndGreen","greedyEndBlue","filtering","filter","waitsetCREP","waitsetCSPRING","waitsetDelta","waitsetEpsilon","waitsetC","waitsetCTEMP","waitsetKr","waitsetGravity","waitsetGravityType","waitsetGravityStrength","waitsetTau","waitsetKsmax","waitsetOverlappingNodes","waitsetTempHeuristic","waitsetCollision","waitsetDistanceType","waitSetKruskalRed","waitSetKruskalGreen","waitSetKruskalBlue","waitSetPrimRed","waitSetPrimGreen","waitSetPrimBlue","waitSetOpt2Timeout","waitSetOpt2Red","waitSetOpt2Green","waitSetOpt2Blue","waitSetOpt3Timeout","waitSetOpt3Red","waitSetOpt3Green","waitSetOpt3Blue","waitSetGreedyStartRed","waitSetGreedyStartGreen","waitSetGreedyStartBlue","waitSetGreedyEndRed","waitSetGreedyEndGreen","waitSetGreedyEndBlue","toLowerCase","setCSPRING","setCREP","setEpsilon","setDelta","setC","setDistanceType","setCTEMP","setTempHeuristic","setKr","setGravity","setGravityStrength","setTau","setKsmax","setOverlappingNodes","setKruskalRed","setKruskalGreen","setKruskalBlue","setPrimRed","setPrimGreen","setPrimBlue","setOpt2Timeout","setOpt2Red","setOpt2Green","setOpt2Blue","setOpt3Timeout","setOpt3Red","setOpt3Green","setOpt3Blue","fontSize","setGreedyStartRed","setGreedyStartGreen","setGreedyStartBlue","setGreedyEndRed","setGreedyEndGreen","setGreedyEndBlue","waitSetSettings","NetworkAlgorithmSettings","attributes","Modal","setAppElement","UploadWindow","filename","preventDefault","files","onSubmit","checkFile","setFilename","ConfirmationWindow","confirm","msg","trigger","setConfirm","DrawerToggleButton","NetworkSideDrawer","uploadwindow","confirmDimensionWindow","confirmCustomWindow","getElementById","overlay","top","switchDimension","setCustomNetwork","NetworkNavBar","minLength","list","createRandomNetwork3D","maxDepth","createRandomPosSphere","theta","asin","distZ","new_z","NetworkVisualizer3D","depth","scene","camera","renderer","spheres","lines","d","THREE","setSize","pointLight","position","render","geometry","material","sphere","opacity","points","setFromPoints","line","pos","needsUpdate","minZ","maxZ","springEmbedding3D","fruchtermanReingold3D","forceAtlas23D","forceAtlasLinLog3D","cameraChanged","old_size","domElement","startDrag","endDrag","rotateCamera","clearNetwork","gridConstant","edgeStart","box","selected_vertices","vertex_list","operationsBuffer","operationsBufferIndex","x1","x2","y1","y2","NetworkCustomVisualizer","gridX","gridY","edgeStartIndex","mouseLeave","operationType","startBoxVertices","confirmClear","clearRect","lineWidth","setLineDash","prevX","previousX","prevY","previousY","startX","startY","rect","getBoundingClientRect","tryConnectEdge","createBox","xPos","left","yPos","placeVertex","alert","getGrid","vertexX","vertexY","tooClose","details","vertexIndex","grid","gridIndex","addActionToBuffer","edge_startX","edge_startY","addEdge","new_edge_list","startVertexIndex","endVertexIndex","updateSelectedVertices","new_grid","updateVertexGrids","selected_vertex","old_grid","index_value","selectVertices","selected_vertices_copy","new_details","box_select","startBox","isDifferentBox","x0","y0","startGrid","endGrid","res","boxesToCheck","getListGrid","unPackVertexFromGrid","box_array","index_list","buffer","bufferIndex","new_buffer","setOperationType","endBox","clearDragOutcome","processClickOutcome","updateCursorPostion","onMouseLeave","processMouseLeave","processDragOutcome","undoActionFromBuffer","redoActionFromBuffer","App","maxE","minE","customnetwork","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6iBAwEeA,E,WAvEb,WAAYC,EAAGC,EAAGC,GAAG,oBACnBC,KAAKH,EAAIA,EACTG,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,OACKE,IAAXD,KAAKD,IAAiBC,KAAKD,EAAI,MAClCC,KAAKE,OAAS,EACdF,KAAKG,KAAO,EACZH,KAAKI,MAAQ,iB,gDAGXC,GACFL,KAAKH,GAAKQ,EAAMR,EAChBG,KAAKF,GAAKO,EAAMP,EACF,OAAXE,KAAKD,IAAYC,KAAKD,GAAKM,EAAMN,K,2BAKjCF,GACHG,KAAKH,EAAIA,I,2BAGNC,GACHE,KAAKF,EAAIA,I,2BAGNC,GACHC,KAAKD,EAAIA,I,yCAITC,KAAKE,QAAU,I,8BAGTC,GACNH,KAAKG,KAAOA,I,+BAGLC,GACPJ,KAAKI,MAAQA,I,gCAGLE,GACRN,KAAKO,KAAKD,EAAO,IACjBN,KAAKQ,KAAKF,EAAO,SACAL,IAAdK,EAAO,IAA+B,OAAXN,KAAKD,GACjCC,KAAKS,KAAKH,EAAO,M,oCAKnB,IAAMI,EAAI,IAAId,EAAOI,KAAKH,EAAGG,KAAKF,EAAGE,KAAKD,GAI1C,OAHAW,EAAEN,MAAQJ,KAAKI,MACfM,EAAER,OAASF,KAAKE,OAChBQ,EAAEP,KAAOH,KAAKG,KACPO,I,8BAIP,IAAIC,EAAM,UAQV,OAPAA,GAAOX,KAAKH,EAAEe,WAAW,IACzBD,GAAOX,KAAKF,EAAEc,WAAW,IACX,OAAXZ,KAAKD,EAAYY,GAAO,KACrBA,GAAOX,KAAKD,EAAEa,WAAW,IAC/BD,GAAOX,KAAKE,OAAOU,WAAa,IAChCD,GAAMX,KAAKG,KAAKS,WAAa,IAC7BD,GAAOX,KAAKI,MAAQ,S,KC3BTS,E,WApCb,WAAYC,EAAOC,EAAKX,EAAOY,GAAQ,oBACrChB,KAAKc,MAAQA,EACbd,KAAKe,IAAMA,EACXf,KAAKgB,OAASA,OACKf,IAAhBD,KAAKgB,QAAwC,OAAhBhB,KAAKgB,SAAiBhB,KAAKgB,OAAS,GACpEhB,KAAKI,MAAQA,OACKH,IAAfD,KAAKI,OAAgC,OAATA,IAAeJ,KAAKI,MAAQ,cAC3DJ,KAAKiB,MAAQ,G,qDAGNb,GACPJ,KAAKI,MAAQA,I,+BAGNa,GACPjB,KAAKiB,MAAQA,I,kCAIb,IAAMC,EAAI,IAAIL,EAAKb,KAAKc,MAAOd,KAAKe,KAGpC,OAFAG,EAAEC,SAASnB,KAAKI,OAChBc,EAAEE,SAASpB,KAAKiB,OACTC,I,8BAIP,IAAIP,EAAM,QAMV,OALAA,GAAOX,KAAKc,MAAMF,WAAY,IAC9BD,GAAOX,KAAKe,IAAIH,WAAa,IAC7BD,GAAOX,KAAKI,MAAQ,IACpBO,GAAOX,KAAKgB,OAAOJ,WAAY,IAC/BD,GAAOX,KAAKiB,MAAML,WAAa,S,KChCpB,SAASS,EAAoBC,EAAUC,EAAWC,EAAMC,EAAMC,EAAMC,EAAYC,EAAaC,EAAWC,EAAQC,EAASC,GAiBtI,IAhBA,IAAIC,OAAqBhC,IAATyB,EAAoB,QAASA,EACzCQ,OAAsBjC,IAAf0B,EAA0B,SAAUA,EAMzCQ,EAAYX,EAAK,EACnBY,EAAWC,KAAKC,MAAOH,EAAUX,EAAM,GAEvCe,EAAW,GACXC,EAAqB,GACnBC,EAAS,CAACnB,EAAS,EAAGC,EAAU,GAChCmB,EAAUnB,EAAU,EAAG,GAGrBoB,EAAI,EAAGA,EAAInB,EAAMmB,IAAK,CAC5B,IAAIC,EAAQ,CAAC,EAAE,GACH,WAATV,GAA8B,UAATA,IAAkBU,EAAQC,EAAgBvB,EAAUC,IAChE,iBAATW,IAAyBU,EAAQE,EAAsBL,EAAQC,IAClEH,EAASQ,KAAM,IAAInD,EAAOgD,EAAM,GAAIA,EAAM,KAC1CJ,EAAmBO,KAAKJ,GAE1B,IAAIK,EAAQ,GACZ,GAAc,UAATd,EAAkB,CACrB,IAAIe,EAAoB,IAAIC,IACxBC,EAAiB1B,EACrB,GAAiB,SAAdQ,EAAqB,CAEtB,IADA,IAAImB,EAAY,GACRT,EAAI,EAAGA,EAAInB,EAAMmB,IACvBS,EAAUL,KAAKJ,GAEjB,IAAIU,EAAU,GACVC,EAAUC,EAAiBH,GAC3BI,EAAKJ,EAAUE,GACnBD,EAAQN,KAAKS,GACbJ,EAAYK,EAAgBL,EAAWE,GAGvC,IADA,IAAII,EAAc,EACZA,EAAclC,GAAK,CACvB,IAAImC,EAAUJ,EAAiBH,GAC3BQ,EAAKR,EAAUO,GACnBN,EAAQN,KAAKa,GACbZ,EAAMD,KAAM,IAAIlC,EAAK2C,EAAGI,IACxBrB,EAASiB,GAAIK,mBACbtB,EAASqB,GAAIC,mBACbV,IACAf,IACA,IAAM0B,EAAUN,EAAK,IAAMI,EACrBG,EAAYH,EAAI,IAAKJ,EAC3BP,EAAkBe,IAAIF,GAAS,GAC/Bb,EAAkBe,IAAID,GAAW,GAEjCX,EAAYK,EAAgBL,EAAWO,GAGvCH,EAAKH,EADLC,EAAUC,EAAiBF,IAE3BK,KAGJ,KAAMP,EAAiB,GAAKf,EAAW,GAAKI,EAAmByB,OAAS,GAAE,CAAC,IAAD,EAC7CC,EAAsB1B,EAAmB2B,SADI,mBACjEC,EADiE,KACxDC,EADwD,KAErED,IAAYC,GAASC,QAAQC,IAAI,mBACrBtE,IAAZmE,GAAuBE,QAAQC,IAAI,+BACvBtE,IAAZoE,GAAuBC,QAAQC,IAAI,0BAEtC,IAAMT,EAAUM,EAAQ,IAAKC,EACvBN,EAAYM,EAAQ,IAAKD,OACOnE,IAAnCgD,EAAkBuB,IAAIV,KACvBd,EAAMD,KAAK,IAAIlC,EAAKuD,EAASC,IAC7B9B,EAAS6B,GAASP,mBAClBtB,EAAS8B,GAASR,mBACftB,EAAS6B,GAASlE,OAASiC,GAAWK,EAAmBiC,OAAOL,EAAS,GACzE7B,EAAS8B,GAASnE,OAASiC,GAAWK,EAAmBiC,OAAOJ,EAAS,GAC5EpB,EAAkBe,IAAIF,GAAS,GAC/Bb,EAAkBe,IAAID,GAAW,GACjCZ,IACAf,UAIF,CAGF,IAHE,OA0DN,SAA8BG,GAQ5B,IANA,IAAImC,EACAC,EAAe,GAIfnC,EAAqB,GACjBG,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCH,EAAmBO,KAAKJ,GAK1B+B,EAAOE,EAAkBpC,GACzBA,EAAqBqC,EAAkBrC,EAAoBkC,GAE3DC,EAAa5B,KAAK2B,GAClB,IAAI,IAAI/B,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQ,EAAGtB,IAAI,CACzC,IAAMmC,EAAYF,EAAkBpC,GACpCA,EAAqBqC,EAAkBrC,EAAoBsC,GAC3DH,EAAa5B,KAAK+B,GAIpB,OAFAH,EAAa5B,KAAK2B,GAEX,CAACC,EAAcD,GAjFFK,CAAqBxC,GAFrC,qBAEGyC,GAFH,MAGMrC,IAHN,MAGU,GAAGA,GAAIqC,GAAKf,OAAO,EAAGtB,KAAI,CACpC,IAAMzB,GAAI,IAAIL,EAAKmE,GAAKrC,IAAIqC,GAAKrC,GAAE,IACnCzB,GAAEE,SAAS,IACX4B,EAAMD,KAAK7B,IAEb,IAAI,IAAIyB,GAAI,EAAGA,GAAIJ,EAAS0B,OAAQtB,KAClCJ,EAASI,IAAGzC,OAAS,EAKzB,IAgKiB+E,GAAYC,GAhKzBC,GAiFN,SAAyB5C,GAEvB,IADA,IAAI4C,GAAcC,IACVzC,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCwC,EAAa9C,KAAKgD,IAAI9C,EAASI,GAAGzC,OAAQiF,GAE5C,OAAOA,EAtFUG,CAAgB/C,GAE7BgD,IA8JyBL,GA9JgBrD,KA8J5BoD,GA9JerD,GA+JlB,KAAOsD,GAAS,IAAMD,GAAW,KAAOC,GAAS,IAAMD,GAAW,KAAOC,GAAS,KA5JhG,IAAqB,IAAlBK,GAAwB,IAAIC,GAgGjC,SAA6BP,EAAYC,EAAU/C,GAWjD,IAX2D,MAETsD,EAAWR,GAFF,mBAEtDS,EAFsD,KAE5CC,EAF4C,KAE3BC,EAF2B,OAGfH,EAAWP,GAHI,mBAGtDW,EAHsD,KAOvDC,GAPuD,WAOvCD,EAAOH,GAAUvD,GAE/B4D,EAAW,GAETpD,EAAI,EAAGA,EAAIR,EAAWQ,IAAI,CAChC,IADgC,EAEPqD,GAAYN,EAASI,EAAanD,GAAG,IAAKgD,EAC3BC,GAHR,mBAEzBK,EAFyB,KAErBC,EAFqB,KAEfC,EAFe,KAIhCJ,EAAShD,KAAK,CAACV,KAAK+D,IAAIH,EAAI,KAAM5D,KAAK+D,IAAIF,EAAM,KAAM7D,KAAK+D,IAAID,EAAK,OAGvE,OAAOJ,EAlHwCM,CAAoBzE,EAAaC,EAAWsD,IAE3F,IAAc,IAAXrD,IAAqC,IAAlByD,GACtB,IAAI,IAAI5C,GAAI,EAAGA,GAAIJ,EAAS0B,OAAQtB,MAClB,IAAXb,IAAiBS,EAASI,IAAGxC,KAAOmG,EAAY/D,EAASI,IAAGzC,OAAQiF,GAAYpD,EAASC,KACvE,IAAlBuD,KAAwBhD,EAASI,IAAGvC,MAAQmG,EAAahE,EAASI,IAAGzC,OAAQiF,GAAYK,KAMhG,MAAO,CAACjD,EAASS,GAGnB,SAASH,EAAgBvB,EAAUC,GACjC,MAAO,CAACc,KAAKmE,UAAUlF,EAAS,EAAE,GAAIe,KAAKmE,UAAUjF,EAAU,EAAE,IAGnE,SAASuB,EAAsBL,EAAOC,GACpC,IAAM+D,EAAcpE,KAAKmE,UAAU,EAAEnE,KAAKqE,IAC1C,MAAO,CAACjE,EAAO,GAAKC,EAAOL,KAAKsE,IAAIF,GAAchE,EAAO,GAAGC,EAAOL,KAAKuE,IAAIH,IAG9E,SAASvC,EAAsB3B,GAC7B,IAAI6B,EAAU7B,EAASF,KAAKC,MAAMD,KAAKmE,SAASjE,EAAS0B,SAIzD,OAHA1B,EAASkC,OAAOL,EAAQ,GAGjB,CAACA,EAFM7B,EAASF,KAAKC,MAAMD,KAAKmE,SAASjE,EAAS0B,UAK3D,SAASV,EAAiBsD,GACxB,OAAOxE,KAAKC,MAAMD,KAAKmE,SAASK,EAAM5C,QAGxC,SAASR,EAAgBoD,EAAOC,GAC9B,OAAOD,EAAM1C,MAAM,EAAE2C,GAAOC,OAAOF,EAAM1C,MAAM2C,EAAM,IA+BvD,SAASjC,EAAkBgC,EAAOG,GAChC,IAAIF,EAASD,EAAMI,QAAQD,GAC3B,OAAOH,EAAM1C,MAAM,EAAE2C,GAAOC,OAAOF,EAAM1C,MAAM2C,EAAM,IAGvD,SAASlC,EAAkBiC,GACzB,OAAOA,EAAMxE,KAAKC,MAAMD,KAAKmE,SAASK,EAAM5C,SAW9C,SAASqC,EAAYpG,EAAQiF,EAAYpD,EAASC,GAEhD,OAAOD,EAA8B7B,EAAOiF,GAA3BnD,EAAUD,GAG7B,SAASwE,EAAarG,EAAQiF,EAAYY,GAExC,IAyDkB3F,EAzDd8G,EAAYnB,EAAS1D,KAAKC,MAAOpC,EAAOiF,GAAeY,EAAS9B,OAAO,KAE3E,MAwDO,QADW7D,EAvDA8G,GAwDI,GAAK,IAAM9G,EAAM,GAAK,IAAMA,EAAM,GAAG,IAhC7D,SAASqF,EAAW0B,GAClB,IAAIlB,EAAMkB,EAAS,GAAG,IAClBjB,EAAQiB,EAAS,GAAG,IACpBhB,EAAOgB,EAAS,GAAG,IACnBC,EAAO/E,KAAKgD,IAAL,MAAAhD,KAAY,CAAC4D,EAAIC,EAAMC,IAC9BkB,EAAOhF,KAAKiF,IAAL,MAAAjF,KAAY,CAAC4D,EAAIC,EAAMC,IAC9BoB,EAAQH,EAAKC,EAIbG,GAAaJ,EAAKC,GAAM,EAG5B,MAAO,CAWT,SAAuBE,EAAOH,EAAMnB,EAAKC,EAAOC,GAC9C,GAAa,IAAVoB,EAAa,OAAO,EACvB,GAAGH,IAASnB,EAAK,OAAaC,EAAMC,GAAMoB,EAAO,EAAzB,GACxB,GAAGH,IAASlB,EAAO,OAAO,KAAKC,EAAKF,GAAKsB,EAAM,GAC/C,GAAGH,IAASjB,EAAM,OAAO,KAAKF,EAAKC,GAAOqB,EAAQ,GAnBxCE,CAAcF,EAAOH,EAAMnB,EAAKC,EAAOC,GAAM,IAE5B,IAAVoB,EAAa,EAAGA,GAAO,EAAElF,KAAK+D,IAAI,EAAEoB,EAAU,IAEtCA,GAG3B,SAASxB,EAAW0B,EAAKC,EAAYH,GACnC,IAAMI,GAAK,EAAIvF,KAAK+D,IAAI,EAAEoB,EAAU,IAAIG,EAElCE,EAAIL,EAAYI,EAAE,EAHqB,EA2B/C,SAAuBF,EAAKE,EAAGE,GAC7B,OAAIJ,GAAO,GAAKA,EAAM,IAAc,KAAPA,EAAmB,CAACE,EAAEE,EAAE,GAClDJ,GAAO,IAAMA,EAAM,IAAa,CAACI,EAAEF,EAAE,GACrCF,GAAO,KAAOA,EAAM,IAAa,CAAC,EAAGE,EAAGE,GACxCJ,GAAO,KAAOA,EAAM,IAAa,CAAC,EAAGI,EAAGF,GACxCF,GAAO,KAAOA,EAAM,IAAa,CAACI,EAAG,EAAGF,GACxCF,GAAO,KAAOA,EAAM,IAAa,CAACE,EAAG,EAAGE,GACpC,CAAC,EAAE,EAAE,GA9BwBC,CAAcL,EAAKE,EAF7CA,GAAK,EAAIvF,KAAK+D,IAAIsB,EAAI,IAAI,EAAG,IAFM,mBAK7C,MAAO,CAAc,KALwB,KAK3BG,GAAQ,IAAqB,KALF,KAKFA,GAAS,IAAoB,KAL3B,KAKsBA,GAAU,K,IC5MhEG,E,WArCb,WAAYnI,EAAEC,EAAEC,GAAG,oBACjBC,KAAKH,EAAIA,EACTG,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,OACKE,IAAXD,KAAKD,IAAiBC,KAAKD,EAAI,M,iDAG/BF,GACHG,KAAKH,EAAIA,I,2BAGNC,GACHE,KAAKF,EAAIA,I,2BAGNC,GACHC,KAAKD,EAAIA,I,gCAGDO,GACRN,KAAKH,GAAKS,EAAO,GACjBN,KAAKF,GAAKQ,EAAO,QACDL,IAAbK,EAAO,IAA8B,OAAXN,KAAKD,IAChCC,KAAKD,GAAKO,EAAO,M,4BAIfiH,GACJvH,KAAKO,KAAKP,KAAKH,EAAE0H,GACjBvH,KAAKQ,KAAKR,KAAKF,EAAEyH,GACH,OAAXvH,KAAKD,GACNC,KAAKS,KAAKT,KAAKD,EAAEwH,O,KC9BnBU,EAAO,GACPC,EAAU,GACVC,EAAK,EACLC,EAAK,EAkHT,SAASC,EAAS7E,EAAGI,GACnB,IAAI0E,EAAOC,EAAS3E,EAAGJ,GACjBgF,EAAQC,EAAW7E,EAAGJ,GAC5B,MAAO,CAAEyE,EAAKO,EAAM,GAAInG,KAAKqG,KAAKJ,GAASL,EAAKO,EAAM,GAAInG,KAAKqG,KAAKJ,IAItE,SAASK,EAASnF,EAAGI,EAAIgF,GACvB,IAAIN,EAAOC,EAAS/E,EAAGI,GACjB4E,EAAQC,EAAWjF,EAAGI,GAE5B,MAAO,CAACsE,EAAS7F,KAAKkC,IAAI+D,EAAMH,GAAOK,EAAM,GACrCN,EAAS7F,KAAKkC,IAAI+D,EAAMF,GAAOI,EAAM,IAG/C,SAASD,EAAS/E,EAAGI,GACnB,IAAM0E,EAAOjG,KAAKqG,KAAKrG,KAAKwG,IAAKrF,EAAG3D,EAAI+D,EAAG/D,EAAI,GAAKwC,KAAKwG,IAAKrF,EAAG1D,EAAI8D,EAAG9D,EAAI,IAC5E,OAAgB,IAATwI,EAAY,MAAwBA,EAM7C,SAASG,EAAWjF,EAAGI,GACrB,IAAMkF,EAAQlF,EAAG/D,EAAI2D,EAAG3D,EAClBkJ,EAAQnF,EAAG9D,EAAI0D,EAAG1D,EAClBwI,EAAOC,EAAS/E,EAAGI,GACzB,MAAO,CAACkF,EAAMR,EAAMS,EAAMT,GChJ5B,IACIU,EAAI,IACJC,EAAa,IA6HjB,SAASZ,EAAS7E,EAAGI,EAAI2D,GACvB,IAAM2B,EAAaT,EAAWjF,EAAGI,GAEjC,MAAO,CAAGvB,KAAKwG,IAAIG,EAAE,GAAIzB,EAAO2B,EAAW,GAAM7G,KAAKwG,IAAIG,EAAE,GAAIzB,EAAO2B,EAAW,IAGpF,SAASP,EAASnF,EAAGI,EAAG2D,GACtB,IAAM2B,EAAaT,EAAWjF,EAAGI,GAEjC,MAAO,CAACsF,EAAW,GAAI7G,KAAKwG,IAAItB,EAAM,GAAIyB,EAAGE,EAAW,GAAI7G,KAAKwG,IAAItB,EAAM,GAAIyB,GAGjF,SAAST,EAAS/E,EAAGI,GAEnB,IAAIuF,EAAQ9G,KAAKwG,IAAKrF,EAAG3D,EAAI+D,EAAG/D,EAAI,GAChCuJ,EAAQ/G,KAAKwG,IAAKrF,EAAG1D,EAAI8D,EAAG9D,EAAI,GAGpC,OAFGqJ,EAAQC,IAAU,IAAGD,EAAQ,OAExB9G,KAAKqG,KAAMS,EAAQC,GAK7B,SAASX,EAAWjF,EAAGI,GACrB,IAAMkF,EAAQlF,EAAG/D,EAAI2D,EAAG3D,EAClBkJ,EAAQnF,EAAG9D,EAAI0D,EAAG1D,EAClBwI,EAAOC,EAAS/E,EAAGI,GACzB,MAAO,CAACkF,EAAMR,EAAMS,EAAMT,GAG5B,SAASe,EAAKC,EAAGC,EAAeC,GAC9B,MAAqB,WAAlBD,EACMD,EAAIE,EAAoBP,EAEZ,gBAAlBM,EACM,GAAKD,EAGLA,ECvKJ,SAASG,EAAYlH,EAASS,EAAO0G,EAAiBC,EAAiBC,GAS5E,IANA,IAAMC,GAAMH,EAAgBC,GAAiB,EAKzCG,EAAe,GACXnH,EAAG,EAAGA,EAAIJ,EAAS0B,OAAQtB,IACjCmH,EAAa/G,KAAKR,EAASI,GAAGwB,SAIhC,IAFA,IAAI4F,EAAY,GAERpH,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClC,IAAI,IAAIqH,EAAI,EAAGA,EAAIzH,EAAS0B,OAAQ+F,IAClC,IAAI,IAAIC,EAAG,EAAGA,EAAIjH,EAAMiB,OAAQgG,IAC3BtH,IAAMK,EAAMiH,GAAG,IAAMD,IAAMhH,EAAMiH,GAAG,IACrCF,EAAUhH,KAAK,CAACJ,EAAEqH,IAS1B,IAHA,IAAME,EAAM,GAENC,EAAa,GACXxH,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAI,CAItC,IAHA,IAAMyH,EAAU,GAEVC,EAAiB,GACfL,EAAI,EAAGA,EAAIzH,EAAS0B,OAAQ+F,IAC/BrH,GAAKqH,GAAGI,EAAQrH,KAAK,GACrBJ,IAAKqH,GAAGI,EAAQrH,KAAKqC,KAExBiF,EAAetH,KAAK,GAGtBoH,EAAWpH,KAAKsH,GAChBH,EAAInH,KAAKqH,GAEX,IAAI,IAAIzH,EAAI,EAAGA,EAAGK,EAAMiB,OAAQtB,IAC9BuH,EAAIH,EAAUpH,GAAG,IAAIoH,EAAUpH,GAAG,IAAM,EACxCuH,EAAIH,EAAUpH,GAAG,IAAIoH,EAAUpH,GAAG,IAAM,EAE1C,IAAM2H,EA2ER,SAA2BJ,GACzB,IAAI,IAAID,EAAI,EAAGA,EAAIC,EAAIjG,OAAQgG,IAC7B,IAAI,IAAItH,EAAI,EAAGA,EAAGuH,EAAIjG,OAAQtB,IAC5B,IAAI,IAAIqH,EAAI,EAAGA,EAAIE,EAAIjG,OAAQ+F,IAC1BE,EAAIvH,GAAGqH,GAAKE,EAAIvH,GAAGsH,GAAKC,EAAID,GAAGD,KAChCE,EAAIvH,GAAGqH,GAAKE,EAAIvH,GAAGsH,GAAKC,EAAID,GAAGD,GAC/BE,EAAIF,GAAGrH,GAAKuH,EAAIvH,GAAGsH,GAAKC,EAAID,GAAGD,IAKvC,IAAIO,EAASL,EAAIM,KAAI,SAAS7J,GAAK,OAAO0B,KAAKgD,IAAIoF,MAAMpI,KAAK1B,MAG9D,OAFY0B,KAAKgD,IAAIoF,MAAM,KAAMF,GAvFjBG,CAAkBR,GAClC5F,QAAQC,IAAI2F,GAGZ,IAAMS,EA7CI,EA6Cad,EAAGS,EAC1BhG,QAAQC,IAAIoG,GAGZ,IAAI,IAAIhI,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClC,IAAI,IAAIqH,EAAI,EAAGA,EAAIzH,EAAS0B,OAAQ+F,IAC/BrH,IAAMqH,IAAGG,EAAWxH,GAAGqH,GAlDpB,EAkD4B3H,KAAKwG,IAAIqB,EAAIvH,GAAGqH,GAAG,IAMzD,IAFA,IAAIY,EAAQxF,IACNyF,EAAgB,GACdlI,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCkI,EAAc9H,KAAK,CAAC,EAAE,IAGxB,KAAM6H,EA3DU,GA2DM,CACpB,IAAI,IAAIjI,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClC,IAAI,IAAIqH,EAAI,EAAGA,EAAIzH,EAAS0B,OAAQ+F,IAC/BrH,IAAMqH,IACPa,EAAclI,GAAG,IAAMuH,EAAIvH,GAAGqH,IAAMF,EAAanH,GAAG,GAAKmH,EAAaE,GAAG,GAAMW,GAAcb,EAAanH,GAAG,GAAKmH,EAAaE,GAAG,IAAKzB,EAASuB,EAAanH,GAAGmH,EAAaE,KAC7Ka,EAAclI,GAAG,IAAMuH,EAAIvH,GAAGqH,IAAMF,EAAanH,GAAG,GAAKmH,EAAaE,GAAG,GAAMW,GAAcb,EAAanH,GAAG,GAAKmH,EAAaE,GAAG,IAAKzB,EAASuB,EAAanH,GAAGmH,EAAaE,MAKnL,IADA,IAAMc,EAAK,GACHnI,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAK,CACvC,IAAM2F,EAAOC,EAASsC,EAAclI,GAAI,CAAC,EAAE,IAC3CmI,EAAG/H,KAAKuF,GAEVsC,EAAQvI,KAAKgD,IAAL,MAAAhD,KAAYyI,GAEpB,IADA,IAAMhE,EAAQgE,EAAG7D,QAAQ2D,GACnBA,EA3EQ,GA2EQ,CASpB,IARA,IAMIG,EACAC,EAPAC,EAAS,EACTC,EAAS,EACTC,EAAU,EACVC,EAAU,EACVC,EAAO,EACPC,EAAO,EAGH3I,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAC/BA,IAAMmE,IACPmE,GAAUf,EAAIpD,GAAOnE,IAAMmH,EAAahD,GAAO,GAAKgD,EAAanH,GAAG,GAAMgI,EAAatI,KAAKwG,IAAIiB,EAAahD,GAAO,GAAKgD,EAAanH,GAAG,GAAG,GAAIN,KAAKwG,IAAIN,EAASuB,EAAahD,GAAOgD,EAAanH,IAAK,IACxMuI,GAAUhB,EAAIpD,GAAOnE,IAAMmH,EAAahD,GAAO,GAAKgD,EAAanH,GAAG,GAAMgI,EAAatI,KAAKwG,IAAIiB,EAAahD,GAAO,GAAKgD,EAAanH,GAAG,GAAG,GAAIN,KAAKwG,IAAIN,EAASuB,EAAahD,GAAOgD,EAAanH,IAAI,IACvMwI,GAAWjB,EAAIpD,GAAOnE,IAAMgI,GAAcb,EAAahD,GAAO,GAAGgD,EAAanH,GAAG,KAAKmH,EAAahD,GAAO,GAAKgD,EAAanH,GAAG,KAAMN,KAAKwG,IAAIN,EAASuB,EAAahD,GAAQgD,EAAanH,IAAI,GAC7LyI,GAAWlB,EAAIpD,GAAOnE,IAAMgI,GAAcb,EAAahD,GAAO,GAAGgD,EAAanH,GAAG,KAAKmH,EAAahD,GAAO,GAAKgD,EAAanH,GAAG,KAAMN,KAAKwG,IAAIN,EAASuB,EAAahD,GAAQgD,EAAanH,IAAI,GAC7L0I,GAAQnB,EAAIpD,GAAOnE,IAAMmH,EAAahD,GAAO,GAAKgD,EAAanH,GAAG,GAAMgI,GAAcb,EAAahD,GAAO,GAAKgD,EAAanH,GAAG,IAAK4F,EAASuB,EAAahD,GAAOgD,EAAanH,KAC9K2I,GAAQpB,EAAIpD,GAAOnE,IAAMmH,EAAahD,GAAO,GAAKgD,EAAanH,GAAG,GAAMgI,GAAcb,EAAahD,GAAO,GAAKgD,EAAanH,GAAG,IAAK4F,EAASuB,EAAahD,GAAOgD,EAAanH,MAIlLqI,IAAOE,GADPH,IAAOM,EAAMF,IAAUG,EAAKF,KAAWH,EAAUE,EAAQD,EAAQE,IAC9CE,GAAOF,EAC1BtB,EAAahD,GAAO,GAAKgD,EAAahD,GAAO,GAAKiE,EAClDjB,EAAahD,GAAO,GAAKgD,EAAahD,GAAO,GAAKkE,EAGlD,IAFA,IAAIO,EAAW,EACXC,EAAW,EACP7I,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAC/BA,IAAMmE,IACPyE,GAAYrB,EAAIpD,GAAOnE,IAAMmH,EAAahD,GAAO,GAAKgD,EAAanH,GAAG,GAAMgI,GAAcb,EAAahD,GAAO,GAAKgD,EAAanH,GAAG,IAAK4F,EAASuB,EAAahD,GAAOgD,EAAanH,KAClL6I,GAAYtB,EAAIpD,GAAOnE,IAAMmH,EAAahD,GAAO,GAAKgD,EAAanH,GAAG,GAAMgI,GAAcb,EAAahD,GAAO,GAAKgD,EAAanH,GAAG,IAAK4F,EAASuB,EAAahD,GAAOgD,EAAanH,MAGtLiI,EAAQrC,EAAS,CAACgD,EAAUC,GAAW,CAAC,EAAE,IAC1CV,EAAGhE,GAASyB,EAAS,CAACgD,EAASC,GAAW,CAAC,EAAE,IAC7C,OAGJ,OAAO1B,EAoBT,SAASvB,EAAS1I,EAAEC,GAClB,OAAQuC,KAAKqG,KAAKrG,KAAKwG,IAAKhJ,EAAE,GAAKC,EAAE,GAAK,GAAKuC,KAAKwG,IAAKhJ,EAAE,GAAKC,EAAE,GAAK,ICzIzE,IACI2L,EAAK,EACLC,EAAK,GAELC,EAAM,GACNC,EAAQ,GAkJZ,SAASvD,EAASxI,EAAEC,GAClB,IAAIwI,EAAOC,GAAS1I,EAAEC,GAChBoJ,EAAaT,GAAW3I,EAAED,GAChC,MAAO,CAACqJ,EAAW,GAAGuC,IAAM5L,EAAEK,OAAO,IAAIJ,EAAEI,OAAO,GAAIoI,GAC5CY,EAAW,GAAGuC,IAAM5L,EAAEK,OAAO,IAAIJ,EAAEI,OAAO,GAAIoI,IAI1D,SAASK,EAAS9I,EAAEC,GAClB,IAAIwI,EAAOC,GAAS1I,EAAEC,GAChBoJ,EAAaT,GAAW5I,EAAEC,GAChC,MAAO,CAACoJ,EAAW,GAAIZ,EAAMY,EAAW,GAAGZ,GAW7C,SAASuD,EAASnL,EAAG+B,GACnB,IAAIqJ,EAAcvD,GAAS7H,EAAE+B,GACzByG,EAAaT,GAAW/H,EAAE+B,GAC9B,MAAO,CAACyG,EAAW,GAAGwC,GAAIhL,EAAER,OAAO,GAAG4L,EAAa5C,EAAW,GAAGwC,GAAIhL,EAAER,OAAO,GAAG4L,GAGnF,SAASvD,GAAS/E,EAAGI,GACnB,IAAI0E,EAAOjG,KAAKwG,IAAIrF,EAAG3D,EAAE+D,EAAG/D,EAAE,GAAKwC,KAAKwG,IAAKrF,EAAG1D,EAAE8D,EAAG9D,EAAG,GAExD,OADY,IAATwI,IAAYA,EAAO,OACdjG,KAAKqG,KAAKJ,GAMpB,SAASG,GAAWjF,EAAGI,GACrB,IAAMkF,EAAQlF,EAAG/D,EAAI2D,EAAG3D,EAClBkJ,EAAQnF,EAAG9D,EAAI0D,EAAG1D,EACpBwI,EAAOC,GAAS/E,EAAGI,GACvB,MAAO,CAACkF,EAAMR,EAAMS,EAAMT,GChM5B,IACImD,GAAK,EACLC,GAAK,GAELC,GAAM,GACNC,GAAQ,GAgJZ,SAASvD,GAASxI,EAAEC,GAClB,IAAIwI,EAAOC,GAAS1I,EAAEC,GAChBoJ,EAAaT,GAAW3I,EAAED,GAChC,MAAO,CAACqJ,EAAW,GAAGuC,KAAM5L,EAAEK,OAAO,IAAIJ,EAAEI,OAAO,GAAIoI,GAC5CY,EAAW,GAAGuC,KAAM5L,EAAEK,OAAO,IAAIJ,EAAEI,OAAO,GAAIoI,IAI1D,SAASK,GAAS9I,EAAEC,GAClB,IAAIwI,EAAOC,GAAS1I,EAAEC,GAChBoJ,EAAaT,GAAW5I,EAAEC,GAChC,MAAO,CAACoJ,EAAW,GAAI7G,KAAKkC,IAAI,EAAE+D,GAAOY,EAAW,GAAG7G,KAAKkC,IAAI,EAAE+D,IAWpE,SAASuD,GAASnL,EAAG+B,GACnB,IAAIqJ,EAAcvD,GAAS7H,EAAE+B,GACzByG,EAAaT,GAAW/H,EAAE+B,GAC9B,MAAO,CAACyG,EAAW,GAAGwC,IAAIhL,EAAER,OAAO,GAAG4L,EAAa5C,EAAW,GAAGwC,IAAIhL,EAAER,OAAO,GAAG4L,GAGnF,SAASvD,GAAS/E,EAAGI,GACnB,IAAI0E,EAAOjG,KAAKwG,IAAIrF,EAAG3D,EAAE+D,EAAG/D,EAAE,GAAKwC,KAAKwG,IAAKrF,EAAG1D,EAAE8D,EAAG9D,EAAG,GAExD,OADY,IAATwI,IAAYA,EAAO,OACdjG,KAAKqG,KAAKJ,GAMpB,SAASG,GAAWjF,EAAGI,GACrB,IAAMkF,EAAQlF,EAAG/D,EAAI2D,EAAG3D,EAClBkJ,EAAQnF,EAAG9D,EAAI0D,EAAG1D,EACpBwI,EAAOC,GAAS/E,EAAGI,GACvB,MAAO,CAACkF,EAAMR,EAAMS,EAAMT,G,aCpH5B,SAASyD,GAAa5L,GAEpB,IADA,IAAM6L,EAAa,GACXrJ,EAAI,EAAGA,EAAIxC,EAAMwC,IACvBqJ,EAAWjJ,KAAKV,KAAKmE,UAEvB,OAAOwF,EAGT,SAASC,GAAU3L,GAEjB,IADA,IAAM4L,EAAM5L,EAAO6L,QAAO,SAASC,EAAEC,GAAG,OAAOD,EAAGC,KAC1C1J,EAAI,EAAGA,EAAIrC,EAAO2D,OAAQtB,IAChCrC,EAAOqC,GAAKrC,EAAOqC,GAAGuJ,EAI1B,SAASI,GAAcC,EAAG7L,EAAG8L,GAC3BlI,QAAQC,IAAI,uBAAuBgI,EAAE7L,EAAE8L,GACvC,IAAMC,EAAYC,GAAWC,GAAkBJ,EAAEC,GAAI9L,GAC/CkM,EAAcF,GAAWC,GAAkBjM,EAAE8L,GAAID,GACvDjI,QAAQC,IAAI,YAAakI,EAAWG,GACpC,IAAI,IAAIjK,EAAI,EAAGA,EAAI4J,EAAEtI,OAAQtB,IAC3B4J,EAAE5J,GAAK4J,EAAE5J,GAAK4J,EAAE5J,IAAI8J,EAAUG,GAIlC,SAASC,GAAsBvM,EAAQwM,GAErC,IADA,IAAMZ,EAAM,EACJjC,EAAI,EAAGA,EAAI3J,EAAO2D,OAAQgG,KACT,IAApB6C,EAAY7C,KAAWiC,IAAG,oBAAI5L,EAAO2J,KAE1C,OAAOiC,EAGT,SAASS,GAAkBjM,EAAGmH,GAC5BvD,QAAQC,IAAI,2BAA4B7D,EAAGmH,GAE3C,IADA,IAAMmE,EAAa,GACVrJ,EAAI,EAAGA,EAAIkF,EAAE5D,OAAQtB,IAC5BqJ,EAAWjJ,KAAK2J,GAAWhM,EAAEqM,GAAUlF,EAAElF,KAE3C,OAAOqJ,EAaT,SAASU,GAAWlJ,EAAGI,GACrBU,QAAQC,IAAI,qBAAsBf,EAAGI,GACrC,IAAIsI,EAAM,EACV5H,QAAQC,IAAI,gCAAgCf,EAAGS,SAAWL,EAAGK,QAC7D,IAAI,IAAItB,EAAI,EAAGA,EAAIa,EAAGS,OAAQtB,IAC5BuJ,GAAO1I,EAAGb,GAAGiB,EAAGjB,GAElB,OAAOuJ,EAGT,SAASa,GAAUC,EAAQlG,GAGzB,IAFA,IAAMkF,EAAa,GAEXrJ,EAAI,EAAGA,EAAIqK,EAAO/I,OAAQtB,IAChCqJ,EAAWjJ,KAAKiK,EAAOrK,GAAGmE,IAG5B,OAAOkF,E,IChHMiB,G,WA/Bb,aAAc,oBACZjN,KAAKkN,SAAW,GAChBlN,KAAKmN,eAAiB,K,gDAGpBC,GAC0B,IAAzBpN,KAAKkN,SAASjJ,SAAcjE,KAAKmN,eAAiBC,GACrDpN,KAAKkN,SAASnK,KAAKqK,K,2BAIhBF,GACH,IAAI,IAAIvK,EAAI,EAAGA,EAAIuK,EAASjJ,OAAQtB,IAClC3C,KAAKkN,SAASnK,KAAKmK,EAASvK,M,wCAIdjC,GAChBV,KAAKmN,eAAiBzM,I,0CAItB,OAAOV,KAAKmN,iB,4BAGR9M,GACJL,KAAKqN,kBAAkBhN,EAAMiN,uB,KCvB7BC,GAAW,GAER,SAASC,GAAQjL,EAAUS,EAAOyK,EAAWrN,GAElDmN,GAAWhL,EAMX,IALA,IACMmL,EA0DR,SAAoBtN,GAClB,MAAO,OAASA,EAAM,GAAG,IAAIA,EAAM,GAAG,IAAIA,EAAM,GAAG,IA3DlCuN,CAAWvN,GACtBwN,EAAmB,GAEnBC,EAAW,GACTlL,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCkL,EAAS9K,KAAKJ,GAGhB,IAAImL,EAAe9K,EAAM+K,MAAK,SAASC,EAAGC,GACxC,OAAO1F,GAASgF,GAASS,EAAGlN,OAAOyM,GAASS,EAAGjN,KAAK0M,GAAalF,GAASgF,GAASU,EAAGnN,OAAQyM,GAASU,EAAGlN,KAAK0M,MAG3GS,EAAaC,GAAY5L,EAAUuL,GACnCM,EAAmBF,EAAW3L,SAC9B8L,EAAgBH,EAAWlL,MACjC4K,EAAiB7K,KAAKoL,GAAYC,EAAkBC,IAIpD,IAFA,IAAMC,EAAQ,GACRC,EAAe,GACb5L,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAI,CACtC,IAAM4J,EAAK,IAAIU,GACfV,EAAEiC,IAAI7L,GACN2L,EAAMvL,KAAKwJ,GACXgC,EAAaxL,KAAKJ,GAGpB,IAAI,IAAIzB,EAAG,EAAGA,EAAG4M,EAAa7J,OAAQ/C,IAAI,CACxC,IAAMqL,EAAIuB,EAAa5M,GAAGJ,MACpBJ,EAAIoN,EAAa5M,GAAGH,IAG1B,GAAGwN,EAAahC,KAAOgC,EAAa7N,GAAG,CACrC4N,EAAMC,EAAahC,IAAIxJ,KAAKuL,EAAMC,EAAa7N,IAAIwM,UAEnD,IADA,IAAMuB,EAAMF,EAAa7N,GACjBiC,EAAI,EAAGA,EAAI4L,EAAatK,OAAQtB,IACnC4L,EAAa5L,KAAO8L,IACrBF,EAAa5L,GAAK4L,EAAahC,GAC/B+B,EAAMC,EAAa5L,IAAIuK,SAAW,IAGtCkB,EAAiB7B,GAAGnM,MAAQsN,EAC5BW,EAAcnN,GAAGd,MAAQsN,EACzBW,EAAcnN,GAAGD,MAAQ,GACzBmN,EAAiB1N,GAAGN,MAAQsN,EAE5BE,EAAiB7K,KAAKoL,GAAYC,EAAkBC,KAGxD,MAAO,CAACT,EAAkBE,GAG5B,SAASvF,GAAS/E,EAAGI,EAAG8K,GACtB,IAAIpG,EAAO,KAGX,OAFW,IAARoG,IAAWpG,EAAOjG,KAAKqG,KAAKrG,KAAKwG,IAAIrF,EAAG3D,EAAE+D,EAAG/D,EAAG,GAAKwC,KAAKwG,IAAIrF,EAAG1D,EAAE8D,EAAG9D,EAAE,KAChE,IAAR4O,IAAWpG,EAAOjG,KAAKqG,KAAKrG,KAAKwG,IAAIrF,EAAG3D,EAAE+D,EAAG/D,EAAE,GAAKwC,KAAKwG,IAAIrF,EAAG1D,EAAE8D,EAAG9D,EAAG,GAAKuC,KAAKwG,IAAIrF,EAAGzD,EAAE6D,EAAG7D,EAAG,KACpF,IAATuI,EAAY,MAAwBA,EAO7C,SAAS6F,GAAY5L,EAAUS,GAE7B,IADA,IAAM8G,EAAe,GACbnH,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCmH,EAAa/G,KAAKR,EAASI,GAAGgM,eAGhC,IADA,IAAM5E,EAAY,GACVC,EAAI,EAAGA,EAAIhH,EAAMiB,OAAQ+F,IAC/BD,EAAUhH,KAAKC,EAAMgH,GAAG4E,aAE1B,MAAO,CAACrM,SAAUuH,EAAc9G,MAAO+G,GC9ElC,SAAS8E,GAAKtM,EAAUS,EAAOyK,EAAWrN,GAE/C,IAAIsN,EAoFN,SAAoBtN,GAClB,MAAO,OAAOA,EAAM,GAAG,IAAIA,EAAM,GAAG,IAAIA,EAAM,GAAG,IArFlCuN,CAAWvN,GACV,OAAbsN,QAAkCzN,IAAbyN,IAAwBA,EAAW,gBAC3D,IAAME,EAAmB,GAGnBM,EAAaC,GAAY5L,EAAUS,GACnCoL,EAAmBF,EAAW3L,SAC9B8L,EAAgBH,EAAWlL,MAE3B8L,EAAeX,GAAYC,EAAkBC,GACnDT,EAAiB7K,KAAK+L,GAItB,IADA,IAAM5E,EAAM,GACJvH,EAAI,EAAGA,EAAGJ,EAAS0B,OAAQtB,IAAK,CAEtC,IADA,IAAMyH,EAAU,GACRJ,EAAI,EAAGA,EAAIzH,EAAS0B,OAAQ+F,IAClCI,EAAQrH,KAAK,GAEfmH,EAAInH,KAAKqH,GAGX,IAAI,IAAIlJ,EAAG,EAAGA,EAAI8B,EAAMiB,OAAQ/C,IAC9BgJ,EAAIlH,EAAM9B,GAAGJ,OAAOkC,EAAM9B,GAAGH,KAAOG,EACpCgJ,EAAIlH,EAAM9B,GAAGH,KAAKiC,EAAM9B,GAAGJ,OAASI,EAItC,IADA,IAAI6N,EAAc,GACVpM,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCoM,EAAYhM,KAAK,CAACiM,IAAK5J,IAAU6J,OAAQ,KAAMC,OAAQvM,IAKzD,IAFA,IAAMwM,EAAI,GAEmB,IAAvBJ,EAAY9K,QAAa,CAC7B,IAAIsI,EADyB,EAEX6C,GAAIL,GAFO,mBAE5BxC,EAF4B,KAE1BwC,EAF0B,KAGxBxC,EAAE2C,UAAUC,IACff,EAAiB7B,EAAE2C,QAAQ9O,MAAQsN,EACnCE,EAAiB7K,KAAKoL,GAAYC,EAAkBC,IAEpC,OAAb9B,EAAE0C,SACHZ,EAAcnE,EAAIqC,EAAE2C,QAAQ3C,EAAE0C,SAAS7O,MAAQsN,EAC/CW,EAAcnE,EAAIqC,EAAE2C,QAAQ3C,EAAE0C,SAAShO,MAAQ,GAC/C2M,EAAiB7K,KAAKoL,GAAYC,EAAkBC,MAKxD,IAAI,IAAI1L,EAAI,EAAGA,EAAIuH,EAAIqC,EAAE2C,QAAQjL,OAAQtB,IACvC,GAAwB,IAArBuH,EAAIqC,EAAE2C,QAAQvM,GACb,IAAI,IAAIsH,EAAI,EAAGA,EAAI8E,EAAY9K,OAAQgG,IAClC8E,EAAY9E,GAAGiF,SAAWvM,GAAK4F,GAAShG,EAASgK,EAAE2C,QAChC3M,EAASwM,EAAY9E,GAAGiF,QAASzB,GAAasB,EAAY9E,GAAG+E,MAC/ED,EAAY9E,GAAG+E,IAAMzG,GAAShG,EAASgK,EAAE2C,QACrB3M,EAASwM,EAAY9E,GAAGiF,QAASzB,GACrDsB,EAAY9E,GAAGgF,OAAS1C,EAAE2C,QAMZ,IAAvBH,EAAY9K,QAAc8K,EAAYhB,MAAK,SAASvK,EAAGI,GAAK,OAAOJ,EAAGwL,IAAMpL,EAAGoL,OAIpF,OAAOpB,EAGT,SAASwB,GAAIvI,GACX,IAAMwI,EAAcxI,EAAM,GAG1B,OAFGA,EAAM5C,OAAS,EAAE4C,EAAQA,EAAM1C,MAAM,GACf,IAAjB0C,EAAM5C,SAAc4C,EAAQ,IAC7B,CAACwI,EAAYxI,GAGtB,SAAS0B,GAAS/E,EAAGI,EAAI6J,GACvB,IAAInF,EAIJ,OAHiB,IAAdmF,IAAiBnF,EAAOjG,KAAKwG,IAAKrF,EAAG3D,EAAE+D,EAAG/D,EAAG,GAAKwC,KAAKwG,IAAKrF,EAAG1D,EAAE8D,EAAG9D,EAAG,IACzD,IAAd2N,IAAiBnF,EAAQjG,KAAKwG,IAAKrF,EAAG3D,EAAE+D,EAAG/D,EAAG,GAAKwC,KAAKwG,IAAKrF,EAAG1D,EAAE8D,EAAG9D,EAAG,GAAIuC,KAAKwG,IAAKrF,EAAGzD,EAAE6D,EAAG7D,EAAG,IACxF,IAATuI,IAAYA,EAAO,OACfjG,KAAKqG,KAAKJ,GAOnB,SAAS6F,GAAY5L,EAAUS,GAE7B,IADA,IAAM8G,EAAe,GACbnH,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCmH,EAAa/G,KAAKR,EAASI,GAAGgM,eAGhC,IADA,IAAM5E,EAAY,GACVC,EAAI,EAAGA,EAAIhH,EAAMiB,OAAQ+F,IAC/BD,EAAUhH,KAAKC,EAAMgH,GAAG4E,aAE1B,MAAO,CAACrM,SAAUuH,EAAc9G,MAAO+G,GCrGzC,IACIuF,IAAK,EACLtG,IAAK,EAEF,SAASuG,GAAKhN,EAAUS,EAAOyK,EAAWrN,GAC/C,IAAM4E,EAAO,GACTwK,GAAkB,EAChBC,EAsGR,SAAoBrP,GAClB,MAAO,OAAOA,EAAM,GAAG,IAAIA,EAAM,GAAG,IAAIA,EAAM,GAAG,IAvG1BuN,CAAWvN,GAC9BsE,EAAO1B,EAAM,GAAGlC,MACpBkE,EAAKjC,KAAK2B,GAEV,IAAI,IAAI/B,EAAI,EAAGA,EAAGK,EAAMiB,OAAQtB,IAC9BqC,EAAKjC,KAAKC,EAAML,GAAG7B,OAErBkE,EAAKjC,KAAK2B,GAGV,IADA,IAAM4D,EAAOoH,GAAwB1K,EAAMzC,EAAUkL,GAC7CkC,EAAI,EAAGA,EAjBO,IAiBaA,IAAI,CACrC,IAAIC,EAAW,GACfA,EAAS7M,KAAK2B,GACd,IAAI/B,EAAIN,KAAKC,MAAMD,KAAKmE,UAAUxB,EAAKf,OAAO,IAAI,EAC9CgG,EAAI5H,KAAKC,MAAMD,KAAKmE,UAAUxB,EAAKf,OAAO,IAAI,EAClD,GAAGtB,EAAIsH,EAAE,CACP,IAAI4F,EAAOlN,EACXA,EAAIsH,EACJA,EAAI4F,EAEN,IAAI,IAAIhI,EAAI,EAAGA,EAAIlF,EAAGkF,IACpB+H,EAAS7M,KAAKiC,EAAK6C,EAAE,IAIvB,IAAI,IAAIA,EAAIoC,EAAE,EAAGpC,EAAElF,EAAE,EAAGkF,IACtB+H,EAAS7M,KAAKiC,EAAK6C,EAAE,IAGvB,IAAI,IAAIA,EAAIoC,EAAGpC,EAAI7C,EAAKf,OAAO,EAAG4D,IAChC+H,EAAS7M,KAAKiC,EAAK6C,EAAE,IAIvB,GAFe6H,GAAwBE,EAAUrN,EAAUkL,GAC7CnF,IAAMkH,GAAkB,IACf,IAApBA,EAA0B,CAC3BF,GAAI3M,EACJqG,GAAIiB,EACJ,QAImB,IAApBuF,IAA2BI,EAAW5K,GAEzC,IADA,IAAI+E,EAAY,GACRpH,EAAI,EAAGA,EAAIqC,EAAKf,OAAO,EAAGtB,IAAI,CACpC,IAAMzB,EAAI8B,EAAML,GAAGiM,YACnB1N,EAAEJ,MAAQ8O,EAASjN,GACnBzB,EAAEH,IAAM6O,EAASjN,EAAE,GACnBoH,EAAUhH,KAAK7B,GACZyB,IAAM2M,IAAK3M,IAAMqG,IAClBe,EAAUpH,GAAGxB,SAASsO,GACtB1F,EAAUpH,GAAGvB,SAAS,MAGL,IAAdqM,GAAiB1D,EAAUpH,GAAGxB,SAAS,cACzB,IAAdsM,GAAiB1D,EAAUpH,GAAGxB,SAAS,oBAC1C4I,EAAUpH,GAAGvB,SAAS,KAG1B,MAAO,CAAC2I,EAAWyF,GAKrB,SAASE,GAAwB1K,EAAMzC,EAAUkL,GAE/C,IADA,IAAIqC,EAAa,EACTnN,EAAI,EAAGA,EAAIqC,EAAKf,OAAO,EAAGtB,IAChCmN,GAAcvH,GAAShG,EAASyC,EAAKrC,IAAKJ,EAASyC,EAAKrC,EAAE,IAAK8K,GAEjE,OAAOqC,EAGT,SAASvH,GAAS/E,EAAII,EAAI6J,GACxB,IAAInF,EAIJ,OAHiB,IAAdmF,IAAiBnF,EAAOjG,KAAKwG,IAAIrF,EAAG3D,EAAE+D,EAAG/D,EAAE,GAAKwC,KAAKwG,IAAIrF,EAAG1D,EAAE8D,EAAG9D,EAAG,IACtD,IAAd2N,IAAiBnF,EAAOjG,KAAKwG,IAAIrF,EAAG3D,EAAE+D,EAAG/D,EAAE,GAAKwC,KAAKwG,IAAIrF,EAAG1D,EAAE8D,EAAG9D,EAAG,GAAKuC,KAAKwG,IAAIrF,EAAGzD,EAAE6D,EAAG7D,EAAE,IACnF,IAATuI,IAAYA,EAAO,OACfjG,KAAKqG,KAAKJ,GCnFnB,IACIgH,IAAK,EACLtG,IAAK,EAEF,SAAS+G,GAAcxN,EAAUS,EAAOyK,EAAWxI,EAAYC,EAAU8K,EAAaC,EAAgBC,EAAgBC,GAC3H,IAAMnL,EAAO,GACTwK,GAAkB,EAChBzJ,EA2GR,SAA6Bd,EAAYC,EAAU/C,GAWjD,IAX2D,MAETsD,GAAWR,GAFF,mBAEtDS,EAFsD,KAE5CC,EAF4C,KAE3BC,EAF2B,OAGfH,GAAWP,GAHI,mBAGtDW,EAHsD,KAOvDC,GAPuD,WAOvCD,EAAOH,GAAUvD,GAE/B4D,EAAW,GAETpD,EAAI,EAAGA,EAAIR,EAAWQ,IAAI,CAChC,IADgC,EAEPqD,IAAYN,EAASI,EAAanD,GAAG,IAAKgD,EAC3BC,GAHR,mBAEzBK,EAFyB,KAErBC,EAFqB,KAEfC,EAFe,KAIhCJ,EAAShD,KAAK,CAACV,KAAK+D,IAAIH,EAAI,KAAM5D,KAAK+D,IAAIF,EAAM,KAAM7D,KAAK+D,IAAID,EAAK,OAGvE,OAAOJ,EA7HUM,CAAoBnB,EAAUD,EAAY,IACvDmL,EAAkBJ,EAAYE,GAAiBnK,EAAS9B,OAAO,GACnEmM,EAAiB/N,KAAKC,MAAM8N,GAC5B,IAoGkBhQ,EApGZqP,EAqGC,QADWrP,EApGgB2F,EAASqK,IAqGvB,GAAG,IAAIhQ,EAAM,GAAG,IAAIA,EAAM,GAAG,IAlG7CsE,EAAO1B,EAAM,GAAGlC,MACpBkE,EAAKjC,KAAK2B,GAEV,IAAI,IAAI/B,EAAI,EAAGA,EAAGK,EAAMiB,OAAQtB,IAC9BqC,EAAKjC,KAAKC,EAAML,GAAG7B,OAErBkE,EAAKjC,KAAK2B,GAGV,IADA,IAAM4D,EAAOoH,GAAwB1K,EAAMzC,EAAUkL,GAC7CkC,EAAI,EAAGA,EAtBO,IAsBaA,IAAI,CACrC,IAAIC,EAAW,GACfA,EAAS7M,KAAK2B,GACd,IAAI/B,EAAIN,KAAKC,MAAMD,KAAKmE,UAAUxB,EAAKf,OAAO,IAAI,EAC9CgG,EAAI5H,KAAKC,MAAMD,KAAKmE,UAAUxB,EAAKf,OAAO,IAAI,EAClD,GAAGtB,EAAIsH,EAAE,CACP,IAAI4F,EAAOlN,EACXA,EAAIsH,EACJA,EAAI4F,EAEN,IAAI,IAAIhI,EAAI,EAAGA,EAAIlF,EAAGkF,IACpB+H,EAAS7M,KAAKiC,EAAK6C,EAAE,IAGvB,IAAI,IAAIA,EAAIoC,EAAE,EAAGpC,EAAElF,EAAE,EAAGkF,IACtB+H,EAAS7M,KAAKiC,EAAK6C,EAAE,IAGvB,IAAI,IAAIA,EAAIoC,EAAGpC,EAAI7C,EAAKf,OAAO,EAAG4D,IAChC+H,EAAS7M,KAAKiC,EAAK6C,EAAE,IAEvB,IAAIwI,EAAWX,GAAwBE,EAAUrN,EAAUkL,GACrD6C,EAAWjO,KAAKmE,SAEtB,IADG6J,EAAW/H,GAAQgI,EAAWN,EAAYG,KAAYX,GAAkB,IACpD,IAApBA,EAA0B,CAC3BF,GAAI3M,EACJqG,GAAIiB,EACJ,QAImB,IAApBuF,IAA2BI,EAAW5K,GAEzC,IADA,IAAI+E,EAAY,GACRpH,EAAI,EAAGA,EAAIqC,EAAKf,OAAO,EAAGtB,IAAI,CACpC,IAAMzB,EAAI8B,EAAML,GAAGiM,YACnB1N,EAAEJ,MAAQ8O,EAASjN,GACnBzB,EAAEH,IAAM6O,EAASjN,EAAE,GACnBoH,EAAUhH,KAAK7B,GACZyB,IAAM2M,IAAK3M,IAAMqG,KAClBe,EAAUpH,GAAGxB,SAASsO,GACtB1F,EAAUpH,GAAGvB,SAAS,KAG1B,MAAO,CAAC2I,EAAWyF,GAKrB,SAASE,GAAwB1K,EAAMzC,EAAUkL,GAE/C,IADA,IAAIqC,EAAa,EACTnN,EAAI,EAAGA,EAAIqC,EAAKf,OAAO,EAAGtB,IAChCmN,GAAcvH,GAAShG,EAASyC,EAAKrC,IAAKJ,EAASyC,EAAKrC,EAAE,IAAK8K,GAEjE,OAAOqC,EAGT,SAASvH,GAAS/E,EAAII,EAAI6J,GACxB,IAAInF,EAIJ,OAHiB,IAAdmF,IAAiBnF,EAAOjG,KAAKwG,IAAIrF,EAAG3D,EAAE+D,EAAG/D,EAAE,GAAKwC,KAAKwG,IAAIrF,EAAG1D,EAAE8D,EAAG9D,EAAG,IACtD,IAAd2N,IAAiBnF,EAAOjG,KAAKwG,IAAIrF,EAAG3D,EAAE+D,EAAG/D,EAAE,GAAKwC,KAAKwG,IAAIrF,EAAG1D,EAAE8D,EAAG9D,EAAG,GAAKuC,KAAKwG,IAAIrF,EAAGzD,EAAE6D,EAAG7D,EAAE,IACnF,IAATuI,IAAYA,EAAO,OACfjG,KAAKqG,KAAKJ,GAoDnB,SAAS7C,GAAW0B,GAClB,IAAIlB,EAAMkB,EAAS,GAAG,IAClBjB,EAAQiB,EAAS,GAAG,IACpBhB,EAAOgB,EAAS,GAAG,IACnBC,EAAO/E,KAAKgD,IAAL,MAAAhD,KAAY,CAAC4D,EAAIC,EAAMC,IAC9BkB,EAAOhF,KAAKiF,IAAL,MAAAjF,KAAY,CAAC4D,EAAIC,EAAMC,IAC9BoB,EAAQH,EAAKC,EAIbG,GAAaJ,EAAKC,GAAM,EAG5B,MAAO,CAsBT,SAAuBE,EAAOH,EAAMnB,EAAKC,EAAOC,GAC9C,GAAa,IAAVoB,EAAa,OAAO,EACvB,GAAGH,IAASnB,EAAK,OAAaC,EAAMC,GAAMoB,EAAO,EAAzB,GACxB,GAAGH,IAASlB,EAAO,OAAO,KAAKC,EAAKF,GAAKsB,EAAM,GAC/C,GAAGH,IAASjB,EAAM,OAAO,KAAKF,EAAKC,GAAOqB,EAAQ,GA9BxCE,CAAcF,EAAOH,EAAMnB,EAAKC,EAAOC,GAAM,IAE5B,IAAVoB,EAAa,EAAGA,GAAO,EAAElF,KAAK+D,IAAI,EAAEoB,EAAU,IAEtCA,GAG3B,SAASxB,GAAW0B,EAAKC,EAAYH,GACnC,IAAMI,GAAK,EAAIvF,KAAK+D,IAAI,EAAEoB,EAAU,IAAIG,EAElCE,EAAIL,EAAYI,EAAE,EAHqB,EAQ/C,SAAuBF,EAAKE,EAAGE,GAC7B,OAAIJ,GAAO,GAAKA,EAAM,IAAc,KAAPA,EAAmB,CAACE,EAAEE,EAAE,GAClDJ,GAAO,IAAMA,EAAM,IAAa,CAACI,EAAEF,EAAE,GACrCF,GAAO,KAAOA,EAAM,IAAa,CAAC,EAAGE,EAAGE,GACxCJ,GAAO,KAAOA,EAAM,IAAa,CAAC,EAAGI,EAAGF,GACxCF,GAAO,KAAOA,EAAM,IAAa,CAACI,EAAG,EAAGF,GACxCF,GAAO,KAAOA,EAAM,IAAa,CAACE,EAAG,EAAGE,GACpC,CAAC,EAAE,EAAE,GAXwBC,CAAcL,EAAKE,EAF7CA,GAAK,EAAIvF,KAAK+D,IAAIsB,EAAI,IAAI,EAAG,IAFM,mBAK7C,MAAO,CAAc,KALwB,KAK3BG,GAAQ,IAAqB,KALF,KAKFA,GAAS,IAAoB,KAL3B,KAKsBA,GAAU,KCzJxE,SAAS0I,GAAKhO,EAAUS,EAAOyK,EAAWrN,GAC/C,IAAMqP,EAuJR,SAAoBrP,GAClB,MAAO,OAAOA,EAAM,GAAG,IAAIA,EAAM,GAAG,IAAIA,EAAM,GAAG,IAxJ1BuN,CAAWvN,GAC5B4E,EAAO,GACTN,EAAO1B,EAAM,GAAGlC,MACpBkE,EAAKjC,KAAK2B,GACV,IAAI,IAAI/B,EAAI,EAAGA,EAAIK,EAAMiB,OAAQtB,IAC/BqC,EAAKjC,KAAKC,EAAML,GAAG7B,OAErBkE,EAAKjC,KAAK2B,GAMV,IAJA,IACI0H,EACAC,EACAmE,EAHAZ,EAAW,GAIPD,EAAI,EAAGA,EAhBK,IAgBgBA,IAAI,CACtC,IAAIH,EAMA3I,EAAQ,CALZuF,EAAI/J,KAAKC,MAAMD,KAAKmE,UAAUxB,EAAKf,OAAO,IAAI,EAC9CoI,EAAIhK,KAAKC,MAAMD,KAAKmE,UAAUxB,EAAKf,OAAO,IAAI,EAC9CuM,EAAInO,KAAKC,MAAMD,KAAKmE,UAAUxB,EAAKf,OAAO,IAAI,GAI9C4C,EAAMkH,MAAK,SAAS3B,EAAEC,GAAI,OAAOD,EAAEC,KAMnC,IAAMoE,EAASC,GAA0B1L,EALzCoH,EAAIvF,EAAM,GACVwF,EAAIxF,EAAM,GACV2J,EAAI3J,EAAM,GAG8C4G,EAAWlL,GAInE,GAHAiN,EAAkBiB,EAAO,GACzBb,EAAWa,EAAO,IAEK,IAApBjB,EAA0B,MAM/B,IAFA,IAAMzF,EAAY,GAEVpH,EAAI,EAAGA,EAAIiN,EAAS3L,OAAO,EAAGtB,IAAI,CACxC,IAAMzB,EAAI8B,EAAML,GAAGiM,YACnB1N,EAAEJ,MAAQ8O,EAASjN,GACnBzB,EAAEH,IAAM6O,EAASjN,EAAE,GACnBoH,EAAUhH,KAAK7B,GACZyB,IAAMyJ,GAAKzJ,IAAM0J,GAAK1J,IAAM6N,GAC7BzG,EAAUpH,GAAGxB,SAASsO,GACtB1F,EAAUpH,GAAGvB,SAAS,MAGL,IAAdqM,GAAiB1D,EAAUpH,GAAGxB,SAAS,cACzB,IAAdsM,GAAiB1D,EAAUpH,GAAGxB,SAAS,oBAC1C4I,EAAUpH,GAAGvB,SAAS,KAK1B,MAAO,CAAC2I,EAAWyF,GAGrB,SAASkB,GAA0B1L,EAAMrC,EAAGqH,EAAGC,EAAGwD,EAAWlL,GAC3D,IADoE,EAE9C,CAACyC,EAAKrC,EAAE,GAAIqC,EAAKrC,GAAIqC,EAAKgF,EAAE,GAAIhF,EAAKgF,GAAIhF,EAAKiF,EAAE,GAAIjF,EAAKiF,IAAxEkF,EAF6D,KAE3DwB,EAF2D,KAEzD/I,EAFyD,KAEvD4E,EAFuD,KAErDoE,EAFqD,KAEnDC,EAFmD,KAI9DC,EAAKvI,GAAShG,EAAS4M,GAAI5M,EAASoO,GAAIlD,GAAalF,GAAShG,EAASqF,GAAIrF,EAASiK,GAAIiB,GAAalF,GAAShG,EAASqO,GAAIrO,EAASsO,GAAIpD,GACxIsD,EAAKxI,GAAShG,EAAS4M,GAAI5M,EAASqF,GAAI6F,GAAalF,GAAShG,EAASoO,GAAIpO,EAASiK,GAAIiB,GAAalF,GAAShG,EAASqO,GAAIrO,EAASsO,GAAIpD,GACxIuD,EAAKzI,GAAShG,EAAS4M,GAAI5M,EAASoO,GAAIlD,GAAalF,GAAShG,EAASqF,GAAIrF,EAASqO,GAAInD,GAAalF,GAAShG,EAASiK,GAAIjK,EAASsO,GAAIpD,GACxIwD,EAAK1I,GAAShG,EAAS4M,GAAI5M,EAASiK,GAAIiB,GAAalF,GAAShG,EAASqO,GAAIrO,EAASoO,GAAIlD,GAAalF,GAAShG,EAASqF,GAAIrF,EAASsO,GAAIpD,GACxIyD,EAAK3I,GAAShG,EAASsO,GAAItO,EAASoO,GAAIlD,GAAalF,GAAShG,EAASqF,GAAIrF,EAASiK,GAAIiB,GAAalF,GAAShG,EAASqO,GAAIrO,EAAS4M,GAAI1B,GAC9I,OAAGqD,EAAKC,EAIC,CAFKI,GAAcnM,EAAMrC,EAAE,EAAGqH,EAAE,IAErB,GAEZ8G,EAAKE,EAIJ,CAFKG,GAAcnM,EAAMgF,EAAE,EAAGC,EAAE,IAErB,GAEZ6G,EAAKI,EAIJ,CAFKC,GAAcnM,EAAMrC,EAAE,EAAGsH,EAAE,IAEtB,GAEX6G,EAAKG,EAIH,CAgCZ,SAA6BjM,EAAMrC,EAAGqH,EAAGC,GACvC,IAAM2F,EAAW,GACblL,EAAOM,EAAK,GAChB4K,EAAS7M,KAAK2B,GACd,IAAI,IAAIiL,EAAI,EAAGA,EAAIhN,EAAGgN,IACpBC,EAAS7M,KAAKiC,EAAK2K,IAGrB,IAAI,IAAIA,EAAI3F,EAAG2F,EAAI1F,EAAG0F,IACpBC,EAAS7M,KAAKiC,EAAK2K,IAGrB,IAAI,IAAIA,EAAIhN,EAAGgN,EAAG3F,EAAG2F,IACnBC,EAAS7M,KAAKiC,EAAK2K,IAGrB,IAAI,IAAIA,EAAI1F,EAAG0F,EAAI3K,EAAKf,OAAQ0L,IAC9BC,EAAS7M,KAAKiC,EAAK2K,IAGrB,OAAOC,EAtDOwB,CAAoBpM,EAAMrC,EAAGqH,EAAGC,IAEzB,GAEb,CAACjF,GAAK,GAIhB,SAASuD,GAAS/E,EAAGI,EAAI6J,GACvB,IAAInF,EAIJ,OAHiB,IAAdmF,IAAiBnF,EAAOjG,KAAKwG,IAAIrF,EAAG3D,EAAE+D,EAAG/D,EAAE,GAAKwC,KAAKwG,IAAIrF,EAAG1D,EAAE8D,EAAG9D,EAAE,IACrD,IAAd2N,IAAiBnF,EAAQjG,KAAKwG,IAAIrF,EAAG3D,EAAE+D,EAAG/D,EAAE,GAAKwC,KAAKwG,IAAIrF,EAAG1D,EAAE8D,EAAG9D,EAAE,GAAKuC,KAAKwG,IAAIrF,EAAGzD,EAAE6D,EAAG7D,EAAG,IACpF,IAATuI,IAAYA,EAAO,OACfjG,KAAKqG,KAAKJ,GAGnB,SAAS6I,GAAcnM,EAAMoH,EAAGC,GAC9B,IAAMuD,EAAW,GAEblL,EAAOM,EAAK,GAChB4K,EAAS7M,KAAK2B,GACd,IAAI,IAAI/B,EAAI,EAAGA,EAAGyJ,EAAGzJ,IACnBiN,EAAS7M,KAAKiC,EAAKrC,EAAE,IAEvB,IAAI,IAAIA,EAAI0J,EAAE,EAAG1J,EAAIyJ,EAAE,EAAGzJ,IACxBiN,EAAS7M,KAAKiC,EAAKrC,EAAE,IAEvB,IAAI,IAAIA,EAAI0J,EAAG1J,EAAIqC,EAAKf,OAAO,EAAGtB,IAChCiN,EAAS7M,KAAKiC,EAAKrC,EAAE,IAGvB,OAAOiN,ECxHF,SAASyB,GAAe9O,EAAUS,EAAOyK,EAAW6D,EAAeC,GAExE,IAAMC,EAAa,GAGbtD,EAAaC,GAAY5L,EAAUS,GACnCoL,EAAmBF,EAAW3L,SAC9B8L,EAAgBH,EAAWlL,MACjCwO,EAAWzO,KAAKoL,GAAYC,EAAkBC,IAI9C,IAFA,IAAIlJ,GAAcC,IACZqM,EAAkB,GAChB9O,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClC8O,EAAgB1O,MAAM,GACtBoC,EAAa9C,KAAKgD,IAAIF,EAAY5C,EAASI,GAAGzC,QAOhD,IALA,IAAMgK,EAsCR,SAA+BxJ,EAAGQ,GAEhC,IADA,IAAMgJ,EAAM,GACJvH,EAAI,EAAGA,EAAIjC,EAAEuD,OAAQtB,IAAI,CAE/B,IADA,IAAMyH,EAAU,GACRJ,EAAI,EAAGA,EAAItJ,EAAEuD,OAAQ+F,IAC3BI,EAAQrH,KAAK,GAEfmH,EAAInH,KAAKqH,GAGX,IAAI,IAAIzH,EAAI,EAAGA,EAAIzB,EAAE+C,OAAQtB,IAC3BuH,EAAIhJ,EAAEyB,GAAG7B,OAAOI,EAAEyB,GAAG5B,KAAO,EAC5BmJ,EAAIhJ,EAAEyB,GAAG5B,KAAKG,EAAEyB,GAAG7B,OAAS,EAE9B,OAAOoJ,EApDKwH,CAAsBnP,EAAUS,GAGxC2O,EAkBN,SAA6BC,EAAQC,EAAQC,GAQ3C,IANA,IAGMC,EAAiB,IAAID,EAErBE,EAAa,GACXrP,EAAI,EAAGA,EAAImP,EAAYnP,IAAI,CACjC,IAAMsP,EALI,EAKaF,EAAepP,EAAG,IACzCqP,EAAWjP,KAAKmP,GAAgBD,EARf,GACD,KAWlB,OAAOD,EAhCM3L,CAAoBiL,EAAeC,EAF/BpM,EAAW,GAIpBxC,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAI,CACtC,IAEMwP,EAAYC,GADOC,GAAmBZ,EAD1Ba,GAAa/P,EAAUI,EAAGuH,GAC4ByH,GACxB,IAC/B,IAAdlE,IAAgBW,EAAiBzL,GAAGvC,MAAQ+R,GAC9B,IAAd1E,IAAiBW,EAAiBzL,GAAGvC,MAAQmS,GAAyBJ,IACzEX,EAAWzO,KAAKoL,GAAYC,EAAkBpL,IAE9CyO,EAAgB9O,GAAKwP,EAGvB,MAAO,CAAC5P,EAAUiP,GA0CpB,SAASc,GAAa/P,EAAUuE,EAAOoD,GAErC,IADA,IAAMsI,EAAY,GACV7P,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IACb,IAAlBuH,EAAIpD,GAAOnE,IAAU6P,EAAUzP,KAAKJ,GAEzC,OAAO6P,EAGT,SAASH,GAAmBZ,EAAiBe,EAAWb,GAGtD,IAFA,IAAMc,EAAa,GACbC,EAAmB,GACjB/P,EAAI,EAAGA,EAAI6P,EAAUvO,OAAQtB,IAAI,CAEvC,IAAMvC,EAAQqR,EAAgBe,EAAU7P,KAC1B,IAAXvC,GAEDqS,EAAW1P,KAAK4P,GAAavS,IAGjC,IAAI,IAAIuC,EAAI,EAAGA,EAAIgP,EAAO1N,OAAQtB,IAC3BiQ,GAAajB,EAAOhP,GAAI8P,IAAcC,EAAiB3P,KAAK4O,EAAOhP,IAG1E,OAAO+P,EAGT,SAASN,GAAahS,GACpB,MAAO,OAAOA,EAAM,GAAGQ,WAAW,IAAIR,EAAM,GAAGQ,WAAW,IAAIR,EAAM,GAAGQ,WAAW,IAGpF,SAASgS,GAAaxS,EAAOyG,GAE3B,IAAI,IAAIlE,EAAI,EAAGA,EAAIkE,EAAM5C,OAAQtB,IAG/B,GAAGkE,EAAMlE,GAAG,KAAQvC,EAAM,IAAOyG,EAAMlE,GAAG,KAAOvC,EAAM,IACjByG,EAAMlE,GAAG,KAASvC,EAAM,GAE1B,OAAO,EAI7C,OAAO,EAMT,SAASuS,GAAavS,GACpB,IAAMyS,EAAMzS,EAAM0S,MAAM,KAEpB7M,EAAM4M,EAAI,GAAGC,MAAM,KAQvB,MAAO,CANP7M,EAAM8M,WAAW9M,EAAI,IAEP8M,WAAWF,EAAI,IAEhBE,WAAWF,EAAI,KAK9B,SAASX,GAAgBxK,EAAKC,EAAYH,GACxC,IAAMI,GAAK,EAAIvF,KAAK+D,IAAI,EAAEoB,EAAU,IAAIG,EAElCE,EAAIL,EAAYI,EAAE,EAH0B,EAQpD,SAAuBF,EAAKE,EAAGE,GAC7B,OAAIJ,GAAO,GAAKA,EAAM,IAAc,KAAPA,EAAmB,CAACE,EAAEE,EAAE,GAClDJ,GAAO,IAAMA,EAAM,IAAa,CAACI,EAAEF,EAAE,GACrCF,GAAO,KAAOA,EAAM,IAAa,CAAC,EAAGE,EAAGE,GACxCJ,GAAO,KAAOA,EAAM,IAAa,CAAC,EAAGI,EAAGF,GACxCF,GAAO,KAAOA,EAAM,IAAa,CAACI,EAAG,EAAGF,GACxCF,GAAO,KAAOA,EAAM,IAAa,CAACE,EAAG,EAAGE,GACpC,CAAC,EAAE,EAAE,GAXwBC,CAAcL,EAAKE,EAF7CA,GAAK,EAAIvF,KAAK+D,IAAIsB,EAAI,IAAI,EAAG,IAFW,mBAKlD,MAAO,CAAa,KAL8B,KAKjCG,GAAuB,KALU,KAKdA,GAAuB,KALT,KAKIA,IAaxD,SAAS0K,GAAyBJ,GAChC,IAAMa,EAAcL,GAAaR,GAMjC,OAJAa,EAAY,GAAKC,SAASD,EAAY,IACtCA,EAAY,GAAKC,SAASD,EAAY,IACtCA,EAAY,GAAKC,SAASD,EAAY,IAE/BZ,GAAaY,GAItB,SAAS7E,GAAY5L,EAAUS,GAE7B,IADA,IAAM8G,EAAe,GACbnH,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCmH,EAAa/G,KAAKR,EAASI,GAAGgM,eAEhC,MAAO,CAACpM,SAAUuH,EAAc9G,MAAOA,GC5KlC,SAASkQ,GAAW3Q,EAAUS,EAAOsO,EAAeC,GAoBzD,IAjBA,IAAMrD,EAAaC,GAAY5L,EAAUS,GAEnCqL,GADmBH,EAAW3L,SACd2L,EAAWlL,OAE3BmQ,EAsFR,SAAmBnQ,GAEjB,IADA,IAAM+G,EAAY,GACVpH,EAAI,EAAGA,EAAIK,EAAMiB,OAAQtB,IAC/BoH,EAAUhH,KAAKC,EAAML,GAAGiM,aAE1B,OAAO7E,EA3FiBqJ,CAAUpQ,GAC5BqQ,EA6FR,SAA2B9Q,GAEzB,IADA,IAAMoP,EAAS,GACPhP,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCgP,EAAO5O,KAAK,IAEd,OAAO4O,EAlGiB2B,CAAkB/Q,GACpCgR,EA+JR,SAAkC7S,EAAEQ,GAIlC,IAHA,IAAMgJ,EAaR,SAA+B3H,EAAUS,GAEvC,IADA,IAAMkH,EAAM,GACJvH,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAI,CAEtC,IADA,IAAMyH,EAAU,GACRJ,EAAI,EAAGA,EAAIzH,EAAS0B,OAAQ+F,IAClCI,EAAQrH,KAAK,GAEfmH,EAAInH,KAAKqH,GAGX,IAAI,IAAIlJ,EAAI,EAAGA,EAAI8B,EAAMiB,OAAQ/C,IAC/BgJ,EAAIlH,EAAM9B,GAAGJ,OAAOkC,EAAM9B,GAAGH,KAAO,EACpCmJ,EAAIlH,EAAM9B,GAAGH,KAAKiC,EAAM9B,GAAGJ,OAAS,EAEtC,OAAOoJ,EA3BKwH,CAAsBhR,EAAEQ,GAE9BsS,EAAoB,GAClB7Q,EAAI,EAAGA,EAAIuH,EAAIjG,OAAQtB,IAAI,CAEjC,IADA,IAAMhC,EAAM,GACJqJ,EAAI,EAAGA,EAAIE,EAAIvH,GAAGsB,OAAQ+F,IACf,IAAdE,EAAIvH,GAAGqH,IAAUrJ,EAAIoC,KAAKiH,GAE/BwJ,EAAkBzQ,KAAKpC,GAEzB,OAAO6S,EA1KmBC,CAAyBlR,EAAUS,GACvD0Q,EAmGR,SAA0B1Q,GAExB,IADA,IAAM2Q,EAAY,GACVhR,EAAI,EAAGA,EAAIK,EAAMiB,OAAQtB,IAAI,CACnC,IAAMzB,EAAI8B,EAAML,GAChBgR,EAAU,CAACzS,EAAEJ,MAAMI,EAAEH,MAAQ,GAC7B4S,EAAU,CAACzS,EAAEH,IAAKG,EAAEJ,QAAU,GAEhC,OAAO6S,EA1GaC,CAAiB5Q,GAC/BwO,EAAa,GAKbzL,EA0OR,SAA6B6L,EAAQC,EAAQC,GAQ3C,IANA,IAGMC,EAAiB,IAAID,EAErBE,EAAa,GACXrP,EAAI,EAAGA,EAAImP,EAAYnP,IAAI,CACjC,IAAMsP,EALI,EAKaF,EAAepP,EAAG,IACzCqP,EAAWjP,KAAMmP,GAAgBD,EARhB,GACD,KAWlB,OAAOD,EAxPU3L,CAAoBiL,EAAeC,EAuGtD,SAAyBhP,GAEvB,IADA,IAAI4C,GAAcC,IACVzC,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCwC,EAAa9C,KAAKgD,IAAIF,EAAY5C,EAASI,GAAGzC,QAEhD,OAAOiF,EA9GYG,CAAgB/C,GAAU,GAMvC4Q,EAAgBlP,OAAS,GAAE,CAC/B,IAAM4P,EAAOV,EAAgB/D,MACvB7C,EAAIsH,EAAK/S,MAFgB,EAIDgT,GAAUvH,EAD9BsH,EAAK9S,IAC8BsS,EAAiBE,EAAmBG,GAJlD,mBAIxBK,EAJwB,KAIfC,EAJe,KAQzBC,EAAoBZ,EAAgB9G,GACpC2H,EAA0Bb,EAAgBU,EAAQA,EAAQ9P,OAAO,IAGjEkQ,EAAeC,GAAUH,EAAmBlO,GAE5CsO,EAAqBD,GAAUF,EAAyBnO,GAE9DuO,GAAWH,EAAcE,EAAoB9H,EAAG8G,EAAiBE,EAAmBG,GACpF,IAAI,IAAI/Q,EAAI,EAAGA,EAAIqR,EAAW/P,OAAQtB,IACjCqR,EAAWrR,KAAO0R,IAAoBL,EAAWrR,GAAKwR,GAO3D,IAJA,IAAMI,EAAIC,GAAsBT,EAASC,EAAYG,EACzCE,EAAoBd,EAAmBG,GAC7Ce,EAAUV,EAAQ5P,MAAM,EAAE4P,EAAQ9M,QAAQsN,GAAG,GAE3C5R,EAAI,EAAGA,EAAI8R,EAAQxQ,OAAO,EAAGtB,IAAI,CACvC,IAAMuM,EAASuF,EAAQ9R,GACjB+R,EAAcX,EAAQA,EAAQ9M,QAAQwN,EAAQ9R,IAAI,GACxD+Q,EAAY,CAACnH,EAAE2C,IAAWwE,EAAY,CAACnH,EAAEmI,IACzCrB,EAAgB9G,GAAG8G,EAAgBpM,QAAQyM,EAAY,CAACnH,EAAE2C,MAAawE,EAAY,CAACnH,EAAEmI,IACtFhB,EAAY,CAACxE,EAAQ3C,IAAMmH,EAAY,CAACgB,EAAYnI,IACpD8G,EAAgBnE,GAAQmE,EAAgBpM,QAAQyM,EAAY,CAACnH,EAAE2C,MAAawE,EAAY,CAACnH,EAAEmI,IAE7FhB,EAAY,CAACnH,EAAEgI,IAAMF,EACrBX,EAAY,CAACa,EAAEhI,IAAM8H,EACrBhB,EAAgB9G,GAAGxJ,KAAKsR,GACxBhB,EAAgBkB,GAAGxR,KAAKsR,GAExB,IAAI,IAAI1R,EAAI,EAAGA,EAAI0L,EAAcpK,OAAQtB,IAAI,CAC3C,IAAIvC,EAAQsT,EAAY,CAACrF,EAAc1L,GAAG7B,MAAOuN,EAAc1L,GAAG5B,MAC9C,IAAjBX,EAAM6D,SACPoK,EAAc1L,GAAGvC,MAAQuN,GAAWvN,GACpCiO,EAAc1L,GAAG1B,MAAQ,IAG7BuQ,EAAWzO,KAAKoL,GAAY5L,EAAU8L,IAMxC,OADAmD,EAAWzO,KAAKoL,GAAY5L,EAAU8L,IAC/BmD,EAGT,SAAS7D,GAAWvN,GAClB,MAAO,OAAOA,EAAM,GAAG,IAAIA,EAAM,GAAG,IAAIA,EAAM,GAAG,IAGnD,SAAS+N,GAAY5L,EAAUS,GAI7B,IAHA,IAAM8G,EAAe,GACfC,EAAY,GAEVpH,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCmH,EAAa/G,KAAKR,EAASI,GAAGgM,eAGhC,IAAI,IAAI3E,EAAI,EAAGA,EAAIhH,EAAMiB,OAAQ+F,IAC/BD,EAAUhH,KAAKC,EAAMgH,GAAG4E,aAG1B,MAAO,CAACrM,SAAUuH,EAAc9G,MAAO+G,GAqCzC,SAAS+J,GAAUa,EAAeC,EAAcvB,EAAiBE,EAAmBG,GAUlF,IATA,IAAImB,EAActB,EAAkBoB,GAAexQ,QAC7C2Q,EAAqBD,EAAY5N,QAAQ2N,GAE3CG,EAAM,CAACH,GACPZ,EAAa,GACbgB,EAAaJ,EACbK,EAAiC,KAJrCJ,EAAcA,EAAY1Q,MAAM,EAAG2Q,GAAoB/N,OAAO8N,EAAY1Q,MAAM2Q,EAAmB,KAIzE7Q,QAGnBgR,GAAQ,CACbA,GAAU,EAEV,IADA,IAAIC,EAAa7B,EAAgB2B,GACzBrS,EAAI,EAAGA,EAAIkS,EAAY5Q,OAAQtB,IAAI,CAGzC,IAFA,IAAMuM,EAAS2F,EAAYlS,GACvBwS,GAAmB,EACfnL,EAAI,EAAGA,EAAIkL,EAAYlL,IAC7B,GAAG0J,EAAY,CAACsB,EAAY9F,MAAagG,EAAWlL,IAC1C0J,EAAY,CAACxE,EAAQ8F,MAAiBE,EAAWlL,GAAG,CAClDmL,GAAmB,EACnB,MAId,IAAwB,IAArBA,EAA0B,CAC3BJ,EAAIhS,KAAKmM,GACT,IAAM9O,EAAQsT,EAAY,CAACiB,EAAezF,IACtB,IAAjB9O,EAAM6D,QAAc+P,EAAWjR,KAAK3C,GAEvC,IAAMgV,EAAeP,EAAY5N,QAAQiI,GACzC2F,EAAcA,EAAY1Q,MAAM,EAAGiR,GAAcrO,OAAO8N,EAAY1Q,MAAMiR,EAAa,IACvFJ,EAAa9F,EACb+F,GAAU,EACV,QAIN,MAAO,CAACF,EAAKf,GAmCf,SAASI,GAAUiB,EAActP,GAC/B,IAAI,IAAIpD,EAAI,EAAGA,EAAIoD,EAAS9B,OAAQtB,IAAI,CAEtC,IADA,IAAI2S,GAAY,EACRtL,EAAI,EAAGA,EAAIqL,EAAapR,OAAQ+F,IACtC,GAAGjE,EAASpD,KAAO0S,EAAarL,GAAI,CAClCsL,GAAY,EACZ,MAGJ,IAAiB,IAAdA,EAAoB,OAAOvP,EAASpD,GAEzC,MAAO,GAGT,SAAS2R,GAAW1C,EAAQC,EAAQ/Q,EAAOuS,EAAiBE,EAAmBG,GAK7E,IAJA,IAAI6B,EAAiBzU,EACjB0U,EAAc1U,EACd2U,GAAe,GAEI,IAAjBA,GAAsB,CAC1BA,GAAe,EACf,IAAI,IAAI9S,EAAI,EAAGA,EAAI4Q,EAAkB5Q,GAAGsB,OAAQtB,IAAK,CACnD,IAAMjC,EAAI6S,EAAkB5Q,GAC5B,GAAGjC,IAAM8U,IAAgB9B,EAA2BhT,KAAOkR,GAC3B8B,EAA2BhT,KAAOmR,GAAQ,CACxE6D,GAAYH,EAAgB7U,EAAGkR,EAAQC,EAAQ6B,EAAaL,GAC5DoC,GAAe,EACfD,EAAcD,EACdA,EAAiB7U,EACjB,SAMR,SAASgV,GAAYC,EAASC,EAAShE,EAAQC,EAAQ6B,EAAaL,GAC/DK,EAAY,CAACiC,EAASC,MAAchE,GACrC8B,EAAoBkC,GAAW/D,EAC/B6B,EAAoBiC,GAAW9D,EAC/BwB,EAAgBA,EAAgBsC,GAAS1O,QAAQ2K,IAAWC,EAC5DwB,EAAgBA,EAAgBuC,GAAS3O,QAAQ2K,IAAWC,GAEtD6B,EAAY,CAACiC,EAASC,MAAc/D,IAC1C6B,EAAoBkC,GAAWhE,EAC/B8B,EAAoBiC,GAAW/D,EAC/ByB,EAAgBA,EAAgBsC,GAAS1O,QAAQ4K,IAAWD,EAC5DyB,EAAgBA,EAAgBuC,GAAS3O,QAAQ4K,IAAWD,GAuBhE,SAASM,GAAgBxK,EAAKC,EAAYH,GACxC,IAAMI,GAAK,EAAIvF,KAAK+D,IAAI,EAAEoB,EAAU,IAAIG,EAElCE,EAAIL,EAAYI,EAAE,EAH0B,EAQpD,SAAuBF,EAAKE,EAAGE,GAC7B,OAAIJ,GAAO,GAAKA,EAAM,IAAc,KAAPA,EAAmB,CAACE,EAAEE,EAAE,GAClDJ,GAAO,IAAMA,EAAM,IAAa,CAACI,EAAEF,EAAE,GACrCF,GAAO,KAAOA,EAAM,IAAa,CAAC,EAAGE,EAAGE,GACxCJ,GAAO,KAAOA,EAAM,IAAa,CAAC,EAAGI,EAAGF,GACxCF,GAAO,KAAOA,EAAM,IAAa,CAACI,EAAG,EAAGF,GACxCF,GAAO,KAAOA,EAAM,IAAa,CAACE,EAAG,EAAGE,GACpC,CAAC,EAAE,EAAE,GAXwBC,CAAcL,EAAKE,EAF7CA,GAAK,EAAIvF,KAAK+D,IAAIsB,EAAI,IAAI,EAAG,IAFW,mBAI3CmO,EAJ2C,KAIlCC,EAJkC,KAIzBC,EAJyB,KAKlD,MAAO,CAAC9C,SAAqB,KAAX4C,EAAQhO,IAASoL,SAAwB,KAAd6C,EAAUjO,IAAUoL,SAAqB,KAAX8C,EAAQlO,KAarF,SAAS2M,GAAsBT,EAASC,EAAY5T,EAAOiU,EAAoBd,EAAmBG,GAEhG,IADA,IAAI4B,GAAY,EACR3S,EAAI,EAAGA,EAAIqR,EAAW/P,OAAQtB,IACjCvC,IAAU4T,EAAWrR,KACtB2S,GAAY,GAGhB,IAAiB,IAAdA,EAAoB,OAAOvB,EAAQA,EAAQ9P,OAAO,GACrD,IAAI,IAAItB,EAAI,EAAGA,EAAIoR,EAAQ9P,OAAQtB,IAAI,CAGrC,IAFA,IAAIqT,GAAU,EACRxS,EAAKuQ,EAAQpR,GACXqH,EAAI,EAAGA,EAAIuJ,EAAkB/P,GAAKwG,IAAI,CAE5C,GAAG0J,EAAY,CAAClQ,EADL+P,EAAkB/P,GAAIwG,OACLqK,EAAmB,CAC7C2B,GAAU,EACV,OAGJ,IAAe,IAAZA,EAAkB,OAAOxS,G,eCtRjByS,G,yFAAf,WAAkCC,EAAKC,EAAYC,EAAU5E,EAAW6E,GAAxE,SAAAjK,EAAA,yDACoB,OAAfoF,EADL,gCACgC0E,EAAKI,SAAS,CAACC,kBAAmB/E,IADlE,uBAEQ0E,EAAKI,SAAS,CAACE,sBAAuBL,EAAYM,eAAgBL,EAAUM,QAAQ,IAF5F,OAI0B,WAArBR,EAAKS,MAAMC,OAAoBV,EAAKW,iBACf,aAArBX,EAAKS,MAAMC,OAAsBV,EAAKY,kBACjB,QAArBZ,EAAKS,MAAMC,OAAiBV,EAAKa,aANtC,4C,0BAwwBeC,G,kDA5vBb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,OAAUC,IAAMC,YACrB,EAAKT,MAAO,CACVU,MAAQ,EACRC,OAAQ,EACR/U,SAAU,GACVS,MAAO,GACPuU,QAAQ,EACR3N,WAAY,IACZ4N,YAAa,EACbrV,UAAWiD,IACXqS,SAAU,SACV9V,WAAY,SACZ+V,WAAY,EACZC,KAAM,EACNC,QAAS,EACTC,QAAS,EACTC,UAAU,EACVC,eAAgB,EAChBC,eAAgB,EAChBC,YAAa,EACb1B,kBAAmB,GACnBC,sBAAuB,EACvBC,eAAgB,EAChBC,QAAQ,EACRE,MAAO,UAGT,EAAKsB,IAAM,EAAKjB,MAAMiB,IACtB,EAAKC,KAAOhB,IAAMC,YAClB,EAAKgB,SAAWjB,IAAMC,YA/BN,E,gEAmChB,IAAM7C,EAAyB,IAArB8D,OAAOC,YACXC,EAAyB,IAArBF,OAAOC,YAFA,EAISjX,EAAoBkT,EAAGgE,EAAGvY,KAAKkY,IAAIvB,MAAMnV,KACjExB,KAAKkY,IAAIvB,MAAMlV,KAAMzB,KAAKkY,IAAIvB,MAAM1U,UAAWjC,KAAK2W,MAAMhV,WAC1D,CAAC3B,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WAAYzY,KAAKkY,IAAIvB,MAAM+B,WACpE,CAAC1Y,KAAKkY,IAAIvB,MAAMgC,OAAQ3Y,KAAKkY,IAAIvB,MAAMiC,SAAU5Y,KAAKkY,IAAIvB,MAAMkC,SAAU7Y,KAAKkY,IAAIvB,MAAMmC,WAAY9Y,KAAKkY,IAAIvB,MAAM5U,QAAS/B,KAAKkY,IAAIvB,MAAM3U,SAP7H,mBAIVO,EAJU,KAIAS,EAJA,KAQjBhD,KAAKsW,SACH,CAACe,MAAO9C,EACR+C,OAAQiB,EACRhW,SAAUA,EACVS,MAAOA,IAEThD,KAAKkY,IAAI5B,SAAS,CAAC9U,KAAMe,EAAS0B,OAAQxC,KAAMuB,EAAMiB,OAAQ8U,OAAQxE,EAAE,EAAGyE,OAAOT,EAAE,M,2CAIpFvY,KAAKkX,OAAO+B,QAAQ5B,MAAQrX,KAAK2W,MAAMU,MACvCrX,KAAKkX,OAAO+B,QAAQ3B,OAAStX,KAAK2W,MAAMW,OACxC,IAAM4B,EAAMlZ,KAAKkX,OAAO+B,QAAQE,WAAW,MAC3CD,EAAIE,MAAMpZ,KAAK2W,MAAMsB,YAAYjY,KAAK2W,MAAMsB,aAC5C,IAAI,IAAItV,EAAG,EAAGA,EAAI3C,KAAK2W,MAAMpU,SAAS0B,OAAQtB,IAAI,CAChDuW,EAAIG,YACJ,IAAM7I,EAAIxQ,KAAK2W,MAAMpU,SAASI,GAAGvC,MACjC8Y,EAAII,UAAW9I,EAEf0I,EAAIK,IAAIvZ,KAAK2W,MAAMpU,SAASI,GAAG9C,EAAEG,KAAK2W,MAAMiB,QAAS5X,KAAK2W,MAAMpU,SAASI,GAAG7C,EAAEE,KAAK2W,MAAMkB,QAAS7X,KAAK2W,MAAMpU,SAASI,GAAGxC,KAAM,EAAW,EAARkC,KAAKqE,IACvIwS,EAAIM,OACJN,EAAIO,YAGN,IAAI,IAAIzP,EAAI,EAAGA,EAAIhK,KAAK2W,MAAM3T,MAAMiB,OAAQ+F,IAAI,CAC9CkP,EAAIG,YACJ,IAAMK,EAAS1Z,KAAK2W,MAAM3T,MAAMgH,GAAGlJ,MAC7B6Y,EAAS3Z,KAAK2W,MAAM3T,MAAMgH,GAAGjJ,IACnCmY,EAAIU,OAAO5Z,KAAK2W,MAAMpU,SAASmX,GAAQ7Z,EAAEG,KAAK2W,MAAMiB,QAAQ5X,KAAK2W,MAAMpU,SAASmX,GAAQ5Z,EAAEE,KAAK2W,MAAMkB,SACrGqB,EAAIW,OAAO7Z,KAAK2W,MAAMpU,SAASoX,GAAQ9Z,EAAEG,KAAK2W,MAAMiB,QAAQ5X,KAAK2W,MAAMpU,SAASoX,GAAQ7Z,EAAEE,KAAK2W,MAAMkB,SACrGqB,EAAIY,YAAc9Z,KAAK2W,MAAM3T,MAAMgH,GAAG/I,MACtCiY,EAAIa,YAAc/Z,KAAK2W,MAAM3T,MAAMgH,GAAG5J,MACtC8Y,EAAIc,SACJd,EAAIO,e,6CAKJzZ,KAAKia,oB,oDAIP,IAAMxJ,EdjHH,SAAyBlO,EAASS,EAAM0G,EAAiBC,EAAiBC,EAAYsQ,GAE3F,IAAMC,EAAIzQ,EAAiB,EACrB0Q,EAAIzQ,EAAiB,EAC3BxB,EAAK,GAAM9F,KAAKqG,KAAKyR,GAAG,EAAE,GAAGD,EAASG,YAAa,IACnDjS,EAAK,GAAM/F,KAAKqG,KAAK0R,GAAG,EAAE,GAAGF,EAASG,YAAa,IACnD,IAAMrR,EAAIY,EAGJrC,GADU2S,EAASI,IACXJ,EAAS3S,OACvBU,EAAOiS,EAASzO,GAChBvD,EAAUgS,EAASK,GASnB,IARA,IAAMC,EAAWN,EAAStR,aAItBU,EAAI,EACJkI,EAAa,GACbiJ,EAAiB,GAEfnR,EAAEN,GAAE,CAER,IADA,IAAImB,EAAa,GACTxH,EAAG,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAI,CAIrC,IAHA,IAAI+X,EAAI,IAAI1S,EAAM,EAAE,GAChB2S,EAAiB,GAEb3Q,EAAI,EAAGA,EAAIhH,EAAMiB,OAAQ+F,IAAI,CACnC,GAAGrH,IAAMK,EAAMgH,GAAGlJ,OAAS6B,IAAMK,EAAMgH,GAAGjJ,IAAI,CAC5C,IAAM6Z,EAAQjS,EAASpG,EAASS,EAAMgH,GAAGlJ,OAAQyB,EAASS,EAAMgH,GAAGjJ,KAAMyZ,GACzEE,EAAEG,UAAUD,GACZD,EAAe5X,KAAKC,EAAMgH,GAAGjJ,KAE/B,GAAG4B,IAAMK,EAAMgH,GAAGjJ,KAAO4B,IAAMK,EAAMgH,GAAGlJ,MAAM,CAC5C,IAAM8Z,EAAQjS,EAASpG,EAASS,EAAMgH,GAAGjJ,KAAMwB,EAASS,EAAMgH,GAAGlJ,OAAQ0Z,GACzEE,EAAEG,UAAUD,GACZD,EAAe5X,KAAKC,EAAMgH,GAAGlJ,QAIjC,IAAI,IAAIkJ,EAAG,EAAGA,EAAIzH,EAAS0B,OAAQ+F,IACjC,GAAGrH,IAAMqH,EAAT,CAEA,IADA,IAAI/H,GAAY,EACRgI,EAAI,EAAGA,EAAI0Q,EAAe1W,OAAQgG,IACrCD,IAAM2Q,EAAe1Q,KAAIhI,GAAY,GAE1C,IAAIA,EAAU,CACZ,IAAM2Y,EAAQvS,EAAS9F,EAASI,GAAIJ,EAASyH,IAC7C0Q,EAAEG,UAAUD,IAGhBzQ,EAAWpH,KAAK2X,GAYlB,IAPA,IAAMI,EAAsB,GAExBC,EAAO3V,IACP4V,EAAO5V,IACP6V,EAAO,EACPC,EAAO,EAEHvY,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCwH,EAAWxH,GAAGyW,MAAM7R,GACpBhF,EAASI,GAAG6L,IAAIrE,EAAWxH,IAG3BoY,EAAQA,EAAO1Y,KAAKiF,IAAIyT,EAAMxY,EAASI,GAAG9C,GAC1Cmb,EAAO3Y,KAAKiF,IAAI0T,EAAMzY,EAASI,GAAG7C,GAClCmb,EAAO1Y,EAASI,GAAG9C,EAAIob,EAAM1Y,EAASI,GAAG9C,EAAEob,EAC3CC,EAAO3Y,EAASI,GAAG7C,EAAIob,EAAM3Y,EAASI,GAAG7C,EAAEob,EAE3CJ,EAAoB/X,KAAK,CAACR,EAASI,GAAG9C,EAAG0C,EAASI,GAAG7C,IAEvD2a,EAAe1X,KAAK,EAAEgY,GAAOC,EAAMb,IAAKY,EAAME,GAAOb,IAAKY,EAAME,KAGhE1J,EAAWzO,KAAK+X,GAChBxR,GAAK,EAGP,IAAI,IAAI3G,EAAI,EAAGA,EAAI6O,EAAWvN,OAAQtB,IACpC,IAAI,IAAIqH,EAAI,EAAGA,EAAIwH,EAAW7O,GAAGsB,OAAQ+F,IACvCwH,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GACrF6O,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GAIrFoY,EAAO3V,IACP4V,EAAO5V,IACP6V,EAAO,EACPC,EAAO,EACX,IAJA,IAIQvY,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCoY,EAAO1Y,KAAKiF,IAAI/E,EAASI,GAAG9C,EAAGkb,GAC/BC,EAAO3Y,KAAKiF,IAAI/E,EAASI,GAAG7C,EAAGkb,GAC/BC,EAAO1Y,EAASI,GAAG9C,EAAIob,EAAM1Y,EAASI,GAAG9C,EAAEob,EAC3CC,EAAO3Y,EAASI,GAAG9C,EAAIqb,EAAM3Y,EAASI,GAAG7C,EAAEob,EAE7CH,EAAO1Y,KAAKiF,IAAIyT,EAAM,GACtBC,EAAO3Y,KAAKiF,IAAI0T,EAAM,GACtB,IAAI,IAAIrY,EAAI,EAAGA,EAAGJ,EAAS0B,OAAQtB,IACjCJ,EAASI,GAAG9C,GAAK0C,EAASI,GAAG9C,EAAIwC,KAAK+D,IAAI2U,IAAS1Y,KAAKiF,IAAI,EAAG6S,GAAG9X,KAAKgD,IAAI4V,EAAKd,GAAG9X,KAAK+D,IAAI2U,KAC5FxY,EAASI,GAAG7C,GAAKyC,EAASI,GAAG7C,EAAIuC,KAAK+D,IAAI4U,IAAS3Y,KAAKiF,IAAI,EAAG8S,GAAG/X,KAAKgD,IAAI6V,EAAKd,GAAK/X,KAAK+D,IAAI4U,KAEhG,MAAO,CAACzY,EAAUiP,GcSD2J,CAAgBnb,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,MAC/ChD,KAAK2W,MAAMU,MAAOrX,KAAK2W,MAAMW,OAAQtX,KAAK2W,MAAM/M,WAChD5J,KAAKkY,IAAIvB,MAAMuD,SAASkB,QAElC5J,GADef,EAAO,GACTA,EAAO,IAC1BwF,GAAmBjW,KAAM,EAAEwR,EAAWvN,OAAQuN,K,yCAI9C,IAAMf,Eb7HH,SAA6BlO,EAASS,EAAM0G,EAAiBC,EAAiBC,EAAYsQ,GAC/F,IAAMC,EAAIzQ,EAAiB,EACrB0Q,EAAIzQ,EAAiB,EACrB0R,EAAQzR,EACdX,EAAaoS,EACb,IAAMC,EAAcpB,EAAS3Q,cACvBA,EAAgB2Q,EAAS3Q,cAE/BP,EADI,EACG3G,KAAKqG,KAAMyR,EAAIC,EAAI7X,EAAS0B,QACnBiW,EAASI,IAAzB,IAKIhR,EAAI,EACJkI,EAAa,GACbxB,EAAe,GAAMmK,EAAID,EAASqB,MAClCC,EAAmB,GAEnBf,EAAiB,GACrB,GAAmB,gBAAhBa,EACD,IAAI,IAAI3Y,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClC6Y,EAAiBzY,KAAKiN,GAK1B,IAFA,IAAMxG,EAAsBwG,EAEtB1G,EAAE+R,GAAM,CAGZ,IAFA,IAAIlR,EAAa,GAETxH,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAK,CAEvC,IADA,IAAI+X,EAAI,IAAI1S,EAAM,EAAE,GACZgC,EAAI,EAAGA,EAAIzH,EAAS0B,OAAQ+F,IAClC,GAAGrH,IAAKqH,EAAE,CACR,IAAMzC,EAAQgB,EAAShG,EAASI,GAAIJ,EAASyH,IACvC4Q,EAAQvS,EAAS9F,EAASI,GAAIJ,EAASyH,GAAIzC,GAGjDmT,EAAEG,UAAUD,GAGhBzQ,EAAWpH,KAAK2X,GAGlB,IAAI,IAAI/X,EAAI,EAAGA,EAAIK,EAAMiB,OAAQtB,IAAI,CACnC,IAAMzB,EAAI8B,EAAML,GACbzB,EAAEJ,QAAUI,EAAEH,KAAKuD,QAAQC,IAAI,aAClC,IAAMgD,EAAQgB,EAAShG,EAASrB,EAAEJ,OAAQyB,EAASrB,EAAEH,MAC/C6Z,EAAQjS,EAASpG,EAASrB,EAAEJ,OAAQyB,EAASrB,EAAEH,KAAMwG,GACrDkU,EAAS,EAAEb,EAAM,IAAKA,EAAM,IAElCzQ,EAAWjJ,EAAEH,KAAK8Z,UAAUD,GAC5BzQ,EAAWjJ,EAAEJ,OAAO+Z,UAAUY,GAWhC,IARA,IAAMC,EAAkB,GACpBX,EAAO3V,IACP4V,EAAO5V,IACP6V,EAAO,EACPC,EAAO,EAELS,EAAS,IAAI/b,EAAO,EAAE,GAEpB+C,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAI,CACtC,IAAMuG,EAAaT,EAAW0B,EAAWxH,GAAIgZ,GACvCC,EAAY,IAAI5T,EAAMkB,EAAW,GAAIA,EAAW,IACtD0S,EAAUrb,KAAKqb,EAAU/b,EAAEwC,KAAKiF,IAAI0I,EAAa3N,KAAK+D,IAAI+D,EAAWxH,GAAG9C,KACxE+b,EAAUpb,KAAKob,EAAU9b,EAAEuC,KAAKiF,IAAI0I,EAAa3N,KAAK+D,IAAI+D,EAAWxH,GAAG7C,KAExEyC,EAASI,GAAG6L,IAAIoN,GAWhBb,EAAQA,EAAO1Y,KAAKiF,IAAIyT,EAAMxY,EAASI,GAAG9C,GAC1Cmb,EAAO3Y,KAAKiF,IAAI0T,EAAMzY,EAASI,GAAG7C,GAClCmb,EAAO1Y,EAASI,GAAG9C,EAAIob,EAAM1Y,EAASI,GAAG9C,EAAEob,EAC3CC,EAAO3Y,EAASI,GAAG7C,EAAIob,EAAM3Y,EAASI,GAAG7C,EAAEob,EAE3CQ,EAAgB3Y,KAAK,CAACR,EAASI,GAAG9C,EAAG0C,EAASI,GAAG7C,IAGnD2a,EAAe1X,KAAK,EAAEgY,GAAMC,EAAMb,IAAIY,EAAKE,GAAOb,IAAIY,EAAKE,KAC3D1J,EAAWzO,KAAK2Y,GAEK,gBAAlBnS,IAAgCyG,EAAc3G,EAAK2G,EAAazG,EAAeC,IAClFF,GAAI,EAKN,IAFA,IAEQ3G,EAAI,EAAGA,EAAI6O,EAAWvN,OAAQtB,IACpC,IAAI,IAAIqH,EAAI,EAAGA,EAAIwH,EAAW7O,GAAGsB,OAAQ+F,IACvCwH,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GACrF6O,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GAGrFoY,EAAO3V,IACP4V,EAAO5V,IACP6V,EAAO,EACPC,EAAO,EACX,IAJA,IAIQvY,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCoY,EAAO1Y,KAAKiF,IAAI/E,EAASI,GAAG9C,EAAGkb,GAC/BC,EAAO3Y,KAAKiF,IAAI/E,EAASI,GAAG7C,EAAGkb,GAC/BC,EAAO1Y,EAASI,GAAG9C,EAAIob,EAAM1Y,EAASI,GAAG9C,EAAEob,EAC3CC,EAAO3Y,EAASI,GAAG7C,EAAIob,EAAM3Y,EAASI,GAAG7C,EAAEob,EAI7C,IAAI,IAAIvY,EAAI,EAAGA,EAAGJ,EAAS0B,OAAQtB,IACjCJ,EAASI,GAAG9C,GAAK0C,EAASI,GAAG9C,GAAMkb,GAASZ,IAAIY,EAAKE,GACrD1Y,EAASI,GAAG7C,GAAKyC,EAASI,GAAG7C,GAAMkb,GAASZ,IAAIY,EAAKE,GAGvD,MAAO,CAAC3Y,EAAUiP,GaKDqK,CAAoB7b,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,MAC3DhD,KAAK2W,MAAMU,MAAMrX,KAAK2W,MAAMW,OAAQtX,KAAK2W,MAAM/M,WAC/C5J,KAAKkY,IAAIvB,MAAMuD,SAAS4B,aAE1BtK,GADef,EAAO,GACTA,EAAO,IAE1BwF,GAAmBjW,KAAM,EAAGwR,EAAWvN,OAAQuN,K,4CAIhC/H,EAAYzJ,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,MACzDhD,KAAK2W,MAAMU,MAAOrX,KAAK2W,MAAMW,OAAQtX,KAAK2W,MAAM/M,c,4CAIlD,IAAM6G,EX1IH,SAAqBlO,EAASS,EAAO0G,EAAiBC,EAAiBC,EAAYsQ,GAGxF,IAAMmB,EAAQzR,EACRuQ,EAAIzQ,EAAiB,EACrB0Q,EAAIzQ,EAAiB,EAE3B8B,EAAKyO,EAAS6B,GACdrQ,EAAKwO,EAASxO,GACdC,EAAMuO,EAASvO,IACfC,EAAQsO,EAAStO,MAYjB,IAPA,IAAItC,EAAI,EACJkI,EAAa,GACbiJ,EAAiB,GAIjBuB,EAAkB,GACdrZ,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCqZ,EAAgBjZ,KAAK,IAAIiF,EAAM,EAAE,IAGnC,KAAMsB,EAAG+R,GAAM,CAIb,IAHA,IAAIlR,EAAa,GAGTxH,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAK,CAGvC,IAFA,IAAI+X,EAAI,IAAI1S,EAAM,EAAE,GAEZgC,EAAI,EAAGA,EAAIzH,EAAS0B,OAAQ+F,IAClC,GAAGrH,IAAKqH,EAAE,CAER,IAAMiS,EAAgB5T,EAAS9F,EAASI,GAAIJ,EAASyH,IACrD0Q,EAAEG,UAAUoB,GAGhB9R,EAAWpH,KAAK2X,GAIlB,IAAI,IAAI/X,EAAI,EAAGA,EAAIK,EAAMiB,OAAQtB,IAAK,CACpC,IAAMzB,EAAI8B,EAAML,GACVuZ,EAAmBvT,EAASpG,EAASrB,EAAEJ,OAAQyB,EAASrB,EAAEH,MAC1Dob,EAAuB,EAAED,EAAiB,IAAKA,EAAiB,IACtE/R,EAAWjJ,EAAEJ,OAAO+Z,UAAUqB,GAC9B/R,EAAWjJ,EAAEH,KAAK8Z,UAAUsB,GAK9B,IAAwB,IAArBjC,EAASkC,QAIV,IAHA,IAAM3Z,EAAgB,IAAN6G,EAAU,CAAC6Q,EAAE,EAAGC,EAAE,GAAI,CAAED,EAAE,EAAK,EAAGM,EAAenR,EAAE,GAAG,GAAM8Q,EAAE,EAAK,EAAGK,EAAenR,EAAE,GAAG,IACpG+S,EAAe,IAAIrU,EAAMvF,EAAO,GAAIA,EAAO,IAEzCE,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAK,CACvC,IAAM2Z,EAAgBzQ,EAAStJ,EAASI,GAAI0Z,GAE5ClS,EAAWxH,GAAGkY,UAAUyB,GAgB5B,IAXA,IAQIC,EAREb,EAAkB,GACpBX,EAAO3V,IACP4V,EAAO5V,IACP6V,EAAO,EACPC,EAAO,EAKPsB,EAAO,EACPC,EAAO,EACH9Z,EAAI,EAAGA,EAAIwH,EAAWlG,OAAQtB,IAAI,CACxC,IAAMgZ,EAAS,IAAI3T,EAAM,EAAE,GAErB0U,EAAOnU,GADW,IAAIP,EAAMmC,EAAWxH,GAAG9C,EAAImc,EAAgBrZ,GAAG9C,EAAGsK,EAAWxH,GAAG7C,EAAIkc,EAAgBrZ,GAAG7C,GACzE6b,GAAQ,EAC9Ca,IAASja,EAASI,GAAG9C,EAAE,GAAK6c,EAC5B,IACMC,EAAOpU,GADW,IAAIP,EAAMmC,EAAWxH,GAAG9C,EAAImc,EAAgBrZ,GAAG9C,EAAGsK,EAAWxH,GAAG7C,EAAIkc,EAAgBrZ,GAAG7C,GACxE6b,GACvCc,IAASla,EAASI,GAAGzC,OAAO,GAAGyc,EAEjCJ,EAAK5Q,GAAK6Q,EAAKC,GAIf,IADA,IAAIG,EAAK,EACDja,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAI,CAEtC,IAAMgZ,EAAS,IAAI3T,EAAM,EAAE,GAIrB2U,GAHalU,GAAW0B,EAAWxH,GAAIgZ,GAGhCpT,GADW,IAAIP,EAAMmC,EAAWxH,GAAG9C,EAAImc,EAAgBrZ,GAAG9C,EAAGsK,EAAWxH,GAAG7C,EAAIkc,EAAgBrZ,GAAG7C,GACxE6b,IACvCiB,EAAKva,KAAKiF,IArGP,GAqGeiV,GAAK,EAAEA,EAAGla,KAAKqG,KAAKiU,IAAO/Q,EAAMrD,GAAS4B,EAAWxH,GAAIgZ,IAE3EpZ,EAASI,GAAGpC,KAAKgC,EAASI,GAAG9C,EAAI+c,EAAGzS,EAAWxH,GAAG9C,GAClD0C,EAASI,GAAGnC,KAAK+B,EAASI,GAAG7C,EAAI8c,EAAGzS,EAAWxH,GAAG7C,GAGlDkc,EAAgBrZ,GAAKwH,EAAWxH,GAGhCoY,EAAO1Y,KAAKiF,IAAIyT,EAAMxY,EAASI,GAAG9C,GAClCmb,EAAO3Y,KAAKiF,IAAI0T,EAAMzY,EAASI,GAAG7C,GAClCmb,EAAO1Y,EAASI,GAAG9C,EAAGob,EAAM1Y,EAASI,GAAG9C,EAAGob,EAC3CC,EAAO3Y,EAASI,GAAG7C,EAAIob,EAAM3Y,EAASI,GAAG7C,EAAGob,EAE5CQ,EAAgB3Y,KAAK,CAACR,EAASI,GAAG9C,EAAG0C,EAASI,GAAG7C,IAEnD2a,EAAe1X,KAAK,EAAEgY,GAAMC,EAAMb,IAAIY,EAAKE,GAAOb,IAAIY,EAAKE,KAC3D1J,EAAWzO,KAAK2Y,GAChBpS,GAAG,EAIL,IAAI,IAAI3G,EAAI,EAAGA,EAAI6O,EAAWvN,OAAQtB,IACpC,IAAI,IAAIqH,EAAI,EAAGA,EAAIwH,EAAW7O,GAAGsB,OAAQ+F,IACvCwH,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GACrF6O,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GAGrFoY,EAAO3V,IACP4V,EAAO5V,IACP6V,EAAO,EACPC,EAAO,EACX,IAJA,IAIQvY,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCoY,EAAO1Y,KAAKiF,IAAI/E,EAASI,GAAG9C,EAAGkb,GAC/BC,EAAO3Y,KAAKiF,IAAI/E,EAASI,GAAG7C,EAAGkb,GAC/BC,EAAO5Y,KAAKgD,IAAI9C,EAASI,GAAG9C,EAAGob,GAC/BC,EAAO7Y,KAAKgD,IAAI9C,EAASI,GAAG7C,EAAGob,GAEjC,IAAI,IAAIvY,GAAI,EAAGA,GAAGJ,EAAS0B,OAAQtB,KACjCJ,EAASI,IAAG9C,GAAK0C,EAASI,IAAG9C,GAAMkb,IAAUZ,GAAGc,GAAOF,IACvDxY,EAASI,IAAG7C,GAAKyC,EAASI,IAAG7C,GAAMkb,IAAUZ,GAAGc,GAASF,IAG3D,MAAO,CAACzY,EAAUiP,GWFDqL,CAAY7c,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,MACzDhD,KAAK2W,MAAMU,MAAOrX,KAAK2W,MAAMW,OAAQtX,KAAK2W,MAAM/M,WAAY5J,KAAKkY,IAAIvB,MAAMuD,SAAS4C,aAEhFtL,GADef,EAAO,GACTA,EAAO,IAG1BwF,GAAmBjW,KAAM,EAAGwR,EAAWvN,OAAQuN,K,iDAI/C,IAAMf,EVpJH,SAA0BlO,EAASS,EAAO0G,EAAiBC,EAAiBC,EAAYsQ,GAG7F,IAAMmB,EAAQzR,EACRuQ,EAAIzQ,EAAiB,EACrB0Q,EAAIzQ,EAAiB,EAE3B8B,GAAKyO,EAAS6B,GACdrQ,GAAKwO,EAASxO,GACdC,GAAMuO,EAASvO,IACfC,GAAQsO,EAAStO,MAYjB,IAPA,IAAItC,EAAI,EACJkI,EAAa,GACbiJ,EAAiB,GAIjBuB,EAAkB,GACdrZ,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCqZ,EAAgBjZ,KAAK,IAAIiF,EAAM,EAAE,IAGnC,KAAMsB,EAAG+R,GAAM,CAIb,IAHA,IAAIlR,EAAa,GAGTxH,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAK,CAGvC,IAFA,IAAI+X,EAAI,IAAI1S,EAAM,EAAE,GAEZgC,EAAI,EAAGA,EAAIzH,EAAS0B,OAAQ+F,IAClC,GAAGrH,IAAKqH,EAAE,CAER,IAAMiS,EAAgB5T,GAAS9F,EAASI,GAAIJ,EAASyH,IACrD0Q,EAAEG,UAAUoB,GAGhB9R,EAAWpH,KAAK2X,GAIlB,IAAI,IAAI/X,EAAI,EAAGA,EAAIK,EAAMiB,OAAQtB,IAAK,CACpC,IAAMzB,EAAI8B,EAAML,GACVuZ,EAAmBvT,GAASpG,EAASrB,EAAEJ,OAAQyB,EAASrB,EAAEH,MAC1Dob,EAAuB,EAAED,EAAiB,IAAKA,EAAiB,IACtE/R,EAAWjJ,EAAEJ,OAAO+Z,UAAUqB,GAC9B/R,EAAWjJ,EAAEH,KAAK8Z,UAAUsB,GAK9B,IAAwB,IAArBjC,EAASkC,QAGV,IAFA,IAAM3Z,EAAgB,IAAN6G,EAAU,CAAC6Q,EAAE,EAAGC,EAAE,GAAI,CAAED,EAAE,EAAK,EAAGM,EAAenR,EAAE,GAAG,GAAM8Q,EAAE,EAAK,EAAGK,EAAenR,EAAE,GAAG,IACpG+S,EAAe,IAAIrU,EAAMvF,EAAO,GAAIA,EAAO,IACzCE,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAK,CACvC,IAAM2Z,EAAgBzQ,GAAStJ,EAASI,GAAI0Z,GAC5ClS,EAAWxH,GAAGkY,UAAUyB,GAgB5B,IAXA,IAQIC,EAREb,EAAkB,GACpBX,EAAO3V,IACP4V,EAAO5V,IACP6V,EAAO,EACPC,EAAO,EAKPsB,EAAO,EACPC,EAAO,EACH9Z,EAAI,EAAGA,EAAIwH,EAAWlG,OAAQtB,IAAI,CACxC,IAAMgZ,EAAS,IAAI3T,EAAM,EAAE,GAErB0U,EAAOnU,GADW,IAAIP,EAAMmC,EAAWxH,GAAG9C,EAAImc,EAAgBrZ,GAAG9C,EAAGsK,EAAWxH,GAAG7C,EAAIkc,EAAgBrZ,GAAG7C,GACzE6b,GAAQ,EAC9Ca,IAASja,EAASI,GAAG9C,EAAE,GAAK6c,EAC5B,IACMC,EAAOpU,GADW,IAAIP,EAAMmC,EAAWxH,GAAG9C,EAAImc,EAAgBrZ,GAAG9C,EAAGsK,EAAWxH,GAAG7C,EAAIkc,EAAgBrZ,GAAG7C,GACxE6b,GACvCc,IAASla,EAASI,GAAGzC,OAAO,GAAGyc,EAEjCJ,EAAK5Q,IAAK6Q,EAAKC,GAIf,IADA,IAAIG,EAAK,EACDja,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAI,CAEtC,IAAMgZ,EAAS,IAAI3T,EAAM,EAAE,GAIrB2U,GAHalU,GAAW0B,EAAWxH,GAAIgZ,GAGhCpT,GADW,IAAIP,EAAMmC,EAAWxH,GAAG9C,EAAImc,EAAgBrZ,GAAG9C,EAAGsK,EAAWxH,GAAG7C,EAAIkc,EAAgBrZ,GAAG7C,GACxE6b,IACvCiB,EAAKva,KAAKiF,IAnGP,GAmGeiV,GAAK,EAAEA,EAAGla,KAAKqG,KAAKiU,IAAO/Q,GAAMrD,GAAS4B,EAAWxH,GAAIgZ,IAE3EpZ,EAASI,GAAGpC,KAAKgC,EAASI,GAAG9C,EAAI+c,EAAGzS,EAAWxH,GAAG9C,GAClD0C,EAASI,GAAGnC,KAAK+B,EAASI,GAAG7C,EAAI8c,EAAGzS,EAAWxH,GAAG7C,GAGlDkc,EAAgBrZ,GAAKwH,EAAWxH,GAGhCoY,EAAO1Y,KAAKiF,IAAIyT,EAAMxY,EAASI,GAAG9C,GAClCmb,EAAO3Y,KAAKiF,IAAI0T,EAAMzY,EAASI,GAAG7C,GAClCmb,EAAO1Y,EAASI,GAAG9C,EAAGob,EAAM1Y,EAASI,GAAG9C,EAAGob,EAC3CC,EAAO3Y,EAASI,GAAG7C,EAAIob,EAAM3Y,EAASI,GAAG7C,EAAGob,EAE5CQ,EAAgB3Y,KAAK,CAACR,EAASI,GAAG9C,EAAG0C,EAASI,GAAG7C,IAEnD2a,EAAe1X,KAAK,EAAEgY,GAAMC,EAAMb,IAAIY,EAAKE,GAAOb,IAAIY,EAAKE,KAC3D1J,EAAWzO,KAAK2Y,GAChBpS,GAAG,EAIL,IAAI,IAAI3G,EAAI,EAAGA,EAAI6O,EAAWvN,OAAQtB,IACpC,IAAI,IAAIqH,EAAI,EAAGA,EAAIwH,EAAW7O,GAAGsB,OAAQ+F,IACvCwH,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GACrF6O,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GAGrFoY,EAAO3V,IACP4V,EAAO5V,IACP6V,EAAO,EACPC,EAAO,EACX,IAJA,IAIQvY,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCoY,EAAO1Y,KAAKiF,IAAI/E,EAASI,GAAG9C,EAAGkb,GAC/BC,EAAO3Y,KAAKiF,IAAI/E,EAASI,GAAG7C,EAAGkb,GAC/BC,EAAO5Y,KAAKgD,IAAI9C,EAASI,GAAG9C,EAAGob,GAC/BC,EAAO7Y,KAAKgD,IAAI9C,EAASI,GAAG7C,EAAGob,GAEjC,IAAI,IAAIvY,EAAI,EAAGA,EAAGJ,EAAS0B,OAAQtB,IACjCJ,EAASI,GAAG9C,GAAK0C,EAASI,GAAG9C,GAAMkb,IAAUZ,GAAGc,GAAOF,IACvDxY,EAASI,GAAG7C,GAAKyC,EAASI,GAAG7C,GAAMkb,IAAUZ,GAAGc,GAASF,IAG3D,MAAO,CAACzY,EAAUiP,GUUDuL,CAAiB/c,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,MAC9DhD,KAAK2W,MAAMU,MAAOrX,KAAK2W,MAAMW,OAAQtX,KAAK2W,MAAM/M,WAAY5J,KAAKkY,IAAIvB,MAAMuD,SAAS8C,kBAEhFxL,GADef,EAAO,GACTA,EAAO,IAE1BwF,GAAmBjW,KAAM,EAAGwR,EAAWvN,OAAQuN,K,yFTjK5C,SAAyBjP,EAAUS,EAAO0G,EAAiBC,EAAiB8D,GAGjEpL,KAAKwG,IAAI,IAAK,GAU9B,IAVA,IACMoU,EAAYxP,EAAY,EAKxB0B,EAAI,GACJ3C,EAAI,GACJ4N,EAAI,GAEFzX,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAK,CAIvC,IAHA,IAAMyH,EAAU,GACV8S,EAAa,GACbC,EAAgB,GACdnT,EAAI,EAAGA,EAAIzH,EAAS0B,OAAQ+F,IAClCI,EAAQrH,KAAK,GACbma,EAAWna,KAAK,GAChBoa,EAAcpa,KAAK,GAChBJ,IAAMqH,IAAGkT,EAAWva,GAAKJ,EAASI,GAAGzC,QAE1CiP,EAAEpM,KAAKqH,GACPoC,EAAEzJ,KAAKma,GACP9C,EAAErX,KAAKoa,GAGT,IAAI,IAAIxa,EAAI,EAAGA,EAAIK,EAAMiB,OAAQtB,IAC/BwM,EAAEnM,EAAML,GAAG7B,OAAOkC,EAAML,GAAG5B,KAAO,EAClCoO,EAAEnM,EAAML,GAAG5B,KAAKiC,EAAML,GAAG7B,OAAS,EAClCsZ,EAAEpX,EAAML,GAAG7B,OAAOkC,EAAML,GAAG5B,KAAO,EAClCqZ,EAAEpX,EAAML,GAAG5B,KAAKiC,EAAML,GAAG7B,OAAS,EAOpC,IAFA,IACM0C,EAAK,GACHb,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCa,EAAGT,KAAK,GAGV,IAAMqa,EAAe,GACrBA,EAAara,KAAKS,GAClBc,QAAQC,IAAI,uBAAwB6Y,GAGpC,IAAI,IAAIza,EAAI,EAAGA,EAAIsa,EAAY,EAAGta,IAAI,CACpC2B,QAAQC,IAAI,mCAAoC5B,EAAE,EAAG,0CACrD,IAAI0a,EAAgBtR,GAAaxJ,EAAS0B,QAC1CgI,GAAUoR,GACV/Y,QAAQC,IAAI,uCAAwC8Y,GAIpD,IAFA,IAAIC,EAASD,EAED,EAAO1a,EAAG,EAAGA,IACvB2B,QAAQC,IAAI,IADF,GAEV+Y,EAAShR,GAAcgR,EAAQF,EAFrB,GAEsC5Q,GAIlD,IAAI,IAAIxC,EAAI,EAAGA,EAAGzH,EAAS0B,OAAQ+F,IACjCqT,EAAcrT,GAAK,IAAOsT,EAAOtT,GAAK6C,GAAsByQ,EAAQlD,EAAEzX,IAAI6J,EAAExC,GAAGA,IAGjFiC,GAAUoR,GACVD,EAAara,KAAKua,ISsGGC,CAAgBvd,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,MAAMhD,KAAK2W,MAAMU,MAAOrX,KAAK2W,MAAMW,OAAQtX,KAAKkY,IAAIvB,MAAMlJ,a,8FAQ/G,IAAD,EACoBD,GAAQxN,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,MAAO,EAChF,CAAChD,KAAKkY,IAAIvB,MAAMuD,SAAS1M,QAAQvH,IAAKjG,KAAKkY,IAAIvB,MAAMuD,SAAS1M,QAAQtH,MACpElG,KAAKkY,IAAIvB,MAAMuD,SAAS1M,QAAQrH,OAHrB,mBACRqL,EADQ,M,yCAKfgM,CADaxd,KAJE,KAKkBwR,K,qCAIjC,IAAMA,EAAa3C,GAAK7O,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,MAAO,EAC7D,CAAChD,KAAKkY,IAAIvB,MAAMuD,SAASrL,KAAK5I,IAAKjG,KAAKkY,IAAIvB,MAAMuD,SAASrL,KAAK3I,MAChElG,KAAKkY,IAAIvB,MAAMuD,SAASrL,KAAK1I,OAC/B8P,GAAmBjW,KAAK,EAAEwR,EAAWvN,OAAOuN,K,qCAI5C,IAAMA,EAAa,GACnBxR,KAAKkY,IAAI5B,SAAS,CAACmH,SAAQ,IAK3B,IAJA,IAAMhO,EAAiB,CAACzP,KAAKkY,IAAIvB,MAAMuD,SAAS3K,KAAKtJ,IAAKjG,KAAKkY,IAAIvB,MAAMuD,SAAS3K,KAAKrJ,MACrElG,KAAKkY,IAAIvB,MAAMuD,SAAS3K,KAAKpJ,MAC3CnD,EAAQhD,KAAK2W,MAAM3T,MAEfL,EAAI,EAAGA,EAA0C,IAArC3C,KAAKkY,IAAIvB,MAAMuD,SAAS3K,KAAKmO,QAAc1d,KAAKkY,IAAIvB,MAAMgH,eAAgBhb,IAAI,CAAC,IAAD,EACtE4M,GAAKvP,KAAK2W,MAAMpU,SACxCS,EAAOhD,KAAKkY,IAAIvB,MAAMlJ,UAAWgC,GAF6D,mBAC/FzM,EAD+F,UAGhGwO,EAAWzO,KAAKC,GAElBiT,GAAmBjW,KAAM,EAAGwR,EAAWvN,OAAQuN,K,8CAI/C,IAAMA,EAAa,GACnBxR,KAAKkY,IAAI5B,SAAS,CAACmH,SAAQ,IAI3B,IAHA,IAAIG,EAAsB5d,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc7N,YAC1D8N,EAAkBF,EAEhBjb,EAAI,EAAGA,EAAmD,IAA9C3C,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAcH,QAAc1d,KAAKkY,IAAIvB,MAAMgH,eAAgBhb,IAC9F,KAOT,IALA,IAGIK,EAAQhD,KAAK2W,MAAM3T,MAEfL,EAAI,EAAGA,EAAmD,IAA9C3C,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAcH,QAAc1d,KAAKkY,IAAIvB,MAAMgH,eAAgBhb,IAAI,CAAC,IAAD,EAC9EoN,GAAc/P,KAAK2W,MAAMpU,SAChDS,EAAOhD,KAAKkY,IAAIvB,MAAMlJ,UAAWzN,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc5Y,WACvEjF,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc3Y,SAAU0Y,EAChDG,EAAiBD,EACjB9d,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc1N,YAL+D,mBACxGnN,EADwG,UAMzGwO,EAAWzO,KAAKC,GAChB4a,GAAsB,KAExB3H,GAAmBjW,KAAM,EAAGwR,EAAWvN,OAAQuN,K,qCAI/C,IAAMA,EAAa,GACnBxR,KAAKkY,IAAI5B,SAAS,CAACmH,SAAQ,IAK3B,IAJA,IAAMhO,EAAiB,CAACzP,KAAKkY,IAAIvB,MAAMuD,SAAS3J,KAAKtK,IAAKjG,KAAKkY,IAAIvB,MAAMuD,SAAS3J,KAAKrK,MACrElG,KAAKkY,IAAIvB,MAAMuD,SAAS3J,KAAKpK,MAC3CnD,EAAQhD,KAAK2W,MAAM3T,MAEfL,EAAI,EAAGA,EAA0C,IAArC3C,KAAKkY,IAAIvB,MAAMuD,SAAS3J,KAAKmN,QAAc1d,KAAKkY,IAAIvB,MAAMgH,eAAgBhb,IAAI,CAAC,IAAD,EACtE4N,GAAKvQ,KAAK2W,MAAMpU,SACxCS,EAAOhD,KAAKkY,IAAIvB,MAAMlJ,UAAWgC,GAF6D,mBAC/FzM,EAD+F,UAGhGwO,EAAWzO,KAAKC,GAElBiT,GAAmBjW,KAAM,EAAGwR,EAAWvN,OAAQuN,K,6CAG1B,IAAD,EACWH,GAAerR,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,MAAOhD,KAAKkY,IAAIvB,MAAMlJ,WADhF,mBACH+D,GADG,WAEpByE,GAAmBjW,KAAK,EAAEwR,EAAWvN,OAAOuN,K,2CAI5C,IAAMA,EAAa0B,GAAWlT,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,OAC9DiT,GAAmBjW,KAAM,EAAGwR,EAAWvN,OAAQuN,K,sCAIjB,IAA3BxR,KAAKkY,IAAIvB,MAAM8G,SACW,WAAxBzd,KAAK2W,MAAMc,UAAuBzX,KAAKge,8BACf,wBAAxBhe,KAAK2W,MAAMc,UAAoCzX,KAAKie,mBAC5B,gBAAxBje,KAAK2W,MAAMc,UAA4BzX,KAAKke,sBACpB,gBAAxBle,KAAK2W,MAAMc,UAA4BzX,KAAKme,sBACpB,qBAAxBne,KAAK2W,MAAMc,UAAiCzX,KAAKoe,2BACzB,SAAxBpe,KAAK2W,MAAMc,UAAqBzX,KAAKqe,eACb,oBAAxBre,KAAK2W,MAAMc,UAAgCzX,KAAKse,0BACxB,uBAAxBte,KAAK2W,MAAMc,UAAmCzX,KAAKue,6BAC3B,YAAxBve,KAAK2W,MAAMc,UAAwBzX,KAAKwe,kBAChB,SAAxBxe,KAAK2W,MAAMc,UAAqBzX,KAAKye,eACb,SAAxBze,KAAK2W,MAAMc,UAAqBzX,KAAK0e,eACb,kBAAxB1e,KAAK2W,MAAMc,UAA8BzX,KAAK2e,wBACtB,SAAxB3e,KAAK2W,MAAMc,UAAqBzX,KAAK4e,eACb,iBAAxB5e,KAAK2W,MAAMc,UAA6BzX,KAAK6e,uBACrB,UAAxB7e,KAAK2W,MAAMc,UAAsBzX,KAAK8e,sBAGzC7I,GAAmBjW,KAAMA,KAAK2W,MAAMH,sBAAuBxW,KAAK2W,MAAMJ,kBAAkBtS,OAAO,EAAG,Q,iCAI3FoS,GAAM,IAAD,OACVxW,EAAI,EACRG,KAAKkY,IAAI5B,SAAS,CAACmH,SAAQ,IAI3B,IAFA,IAAM3c,EAAQd,KAAK2W,MAAMH,sBACnBzV,EAAMf,KAAK2W,MAAMF,eALT,WAMNxM,GACNpK,EAAIkf,YAAW,WACI,EAAKpI,MAAMpU,SACf,EAAKoU,MAAM3T,MADxB,IAEMwO,EAAa,EAAKmF,MAAMJ,kBAE9B,EAAKD,SAAS,CAACtT,MAAOwO,EAAWvH,GAAIuM,sBAAuB,EAAKG,MAAMH,sBAAwB,IAE5FvM,IAAMlJ,EAAI,GAEX,EAAKuV,SAAS,CAACI,QAAQ,EAAKF,sBAAuBzV,OAInDkJ,EAAEnJ,GAAS,EAAKoX,IAAIvB,MAAMgH,iBAdxB1T,EAAGnJ,EAAOmJ,EAAIlJ,EAAKkJ,IAAK,EAAxBA,GAiBRjK,KAAKsW,SAAS,CAACkB,YAAa3X,M,wCAGZ,IAAD,OACXA,EAAI,EACRG,KAAKkY,IAAI5B,SAAS,CAACmH,SAAQ,IAK3B,IAHA,IAAM3c,EAAQd,KAAK2W,MAAMH,sBACnBzV,EAAMf,KAAK2W,MAAMF,eALR,WAOPxM,GACNpK,EAAIkf,YAAW,WACI,EAAKpI,MAAMpU,SACf,EAAKoU,MAAM3T,MADxB,IAEMwO,EAAa,EAAKmF,MAAMJ,kBAE9B,EAAKD,SAAS,CAAC/T,SAAUiP,EAAWvH,GAAG1H,SAAUS,MAAMwO,EAAWvH,GAAGjH,MAAOwT,sBAAuB,EAAKG,MAAMH,sBAAwB,IAEnIvM,IAAMlJ,EAAI,GAEX,EAAKuV,SAAS,CAACI,QAAQ,EAAKF,sBAAuBzV,OAInDkJ,EAAEnJ,GAAS,EAAKoX,IAAIvB,MAAMgH,iBAdxB1T,EAAGnJ,EAAOmJ,EAAIlJ,EAAKkJ,IAAK,EAAxBA,GAgBRjK,KAAKsW,SAAS,CAACkB,YAAa3X,M,uCAGb,IAAD,OACVA,EAAI,EACRG,KAAKkY,IAAI5B,SAAS,CAACmH,SAAQ,IAG3B,IAFA,IAAM3c,EAAQd,KAAK2W,MAAMH,sBACnBzV,EAAMf,KAAK2W,MAAMF,eAJT,WAKNxM,GAENpK,EAAIkf,YAAW,WAEb,IADA,IAAMxc,EAAW,EAAKoU,MAAMpU,SACpBI,EAAI,EAAGA,EAAGJ,EAAS0B,OAAQtB,IACjCJ,EAASI,GAAGqc,UAAU,EAAKrI,MAAMJ,kBAAkBtM,GAAGtH,IAExD,EAAK2T,SAAS,CAAC/T,SAAUA,EAAUiU,sBAAuB,EAAKG,MAAMH,sBAAsB,IACxFvM,IAAMlJ,EAAI,GAAG,EAAKuV,SAAS,CAACI,QAAQ,EAAMF,sBAAuBzV,OAElEkJ,EAAEnJ,GAAS,EAAKoX,IAAIvB,MAAMgH,iBAVxB1T,EAAInJ,EAAOmJ,EAAIlJ,EAAKkJ,IAAK,EAAzBA,GAYRjK,KAAKsW,SAAS,CAACkB,YAAa3X,M,kCAGlBa,GAEVV,KAAKsW,SAAS,CAACmB,SAAU/W,IAChB,SAANA,GAAsB,SAANA,GACT,kBAANA,GAA+B,kBAANA,GACvBV,KAAKsW,SAAS,CAACM,MAAM,QACQ,UAA1B5W,KAAK2W,MAAMhV,YAAwB3B,KAAKif,kBAAkB,UAErD,WAANve,GAAwB,gBAANA,GAA6B,gBAANA,GACtB,qBAANA,EACjBV,KAAKsW,SAAS,CAACM,MAAM,WAEX,YAANlW,GAAyB,SAANA,GAAsB,iBAANA,GACD,UAANA,GAChCV,KAAKsW,SAAS,CAACM,MAAM,e,wCAITlW,I,uCAEhBwe,CADalf,KACeU,K,oCAIhBA,GACZ,IAAMye,EAAQlM,SAASvS,GAEvB,GADAV,KAAKsW,SAAS,CAACoB,WAAWyH,IACb,IAAVA,EAAY,CACb,IAAM5K,EAAK,IAAK8D,OAAOC,YACjBC,EAAI,IAAKF,OAAOC,YACtBtY,KAAKkX,OAAO+B,QAAQ3B,OAASiB,EAC7BvY,KAAKkX,OAAO+B,QAAQ5B,MAAQ9C,EAE5B6K,GADapf,KACOuU,EAAGgE,GAEzB,GAAa,IAAV4G,EAAY,CACb,IAAM5K,EAAK,IAAK8D,OAAOgH,WACjB9G,EAAI,IAAKF,OAAOC,YACtBtY,KAAKkX,OAAO+B,QAAQ3B,OAASiB,EAC7BvY,KAAKkX,OAAO+B,QAAQ5B,MAAQ9C,EAE5B6K,GADapf,KACOuU,EAAGgE,M,qCAKZ,IAAD,EACclX,EAAoBrB,KAAK2W,MAAMU,MAAOrX,KAAK2W,MAAMW,OACxEtX,KAAKkY,IAAIvB,MAAMnV,KAAMxB,KAAKkY,IAAIvB,MAAMlV,KAAMzB,KAAKkY,IAAIvB,MAAM1U,UAAWjC,KAAK2W,MAAMhV,WAC/E,CAAC3B,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WAAYzY,KAAKkY,IAAIvB,MAAM+B,WACpE,CAAC1Y,KAAKkY,IAAIvB,MAAMgC,OAAQ3Y,KAAKkY,IAAIvB,MAAMiC,SAAU5Y,KAAKkY,IAAIvB,MAAMkC,SAAU7Y,KAAKkY,IAAIvB,MAAMmC,WAAY9Y,KAAKkY,IAAIvB,MAAM5U,QAAS/B,KAAKkY,IAAIvB,MAAM3U,SAJnI,mBACLO,EADK,KACKS,EADL,KAKZhD,KAAKsW,SACH,CAAC/T,SAAUA,EACVS,MAAOA,IAIVhD,KAAKkY,IAAI5B,SAAS,CAAC9U,KAAMe,EAAS0B,OAAQxC,KAAMuB,EAAMiB,W,wCAKtD,IADA,IAAIqb,EAAKtf,KAAK2W,MAAMa,YACd8H,GACJC,cAAcD,GACdA,M,wCAKFtf,KAAKsW,SAAS,CAACC,kBAAmB,GAAIG,QAAQ,IAC9C1W,KAAKwf,kBACLxf,KAAKkY,IAAI5B,SAAS,CAACmH,SAAS,M,uCAI5Bzd,KAAKsW,SAAS,CAACI,QAAO,IACtB1W,KAAKwf,oB,sCAOL,IAAqB,KAFGC,GAAU,CAACzf,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WAAYzY,KAAKkY,IAAIvB,MAAM+B,WAC5E,CAAC1Y,KAAKkY,IAAIvB,MAAMgC,OAAQ3Y,KAAKkY,IAAIvB,MAAMiC,SAAU5Y,KAAKkY,IAAIvB,MAAMkC,UAChE,CAMxB,IALA,IAAM/O,EAAe9J,KAAK2W,MAAMpU,SAAS4B,QACnCgB,EAAaG,GAAgBtF,KAAK2W,MAAMpU,UAC1CwD,EAAWM,GAAoB,CAACrG,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WACxCzY,KAAKkY,IAAIvB,MAAM+B,WAAY,CAAC1Y,KAAKkY,IAAIvB,MAAMgC,OAC3C3Y,KAAKkY,IAAIvB,MAAMiC,SAAU5Y,KAAKkY,IAAIvB,MAAMkC,SAAU1T,GAC9ExC,EAAI,EAAGA,EAAImH,EAAa7F,OAAQtB,IACtCmH,EAAanH,GAAGvC,MAAQmG,GAAauD,EAAanH,GAAGzC,OAAQiF,EAAYY,GAG3E,IADA,IAAMgE,EAAY,GACVC,EAAI,EAAGA,EAAIhK,KAAK2W,MAAM3T,MAAMiB,OAAQ+F,IAAI,CAC9C,IAAM9I,EAAI,IAAIL,EAAKb,KAAK2W,MAAM3T,MAAMgH,GAAGlJ,MAAOd,KAAK2W,MAAM3T,MAAMgH,GAAGjJ,KAC1C,QAArBf,KAAK2W,MAAMC,OAAiB1V,EAAEE,SAAS,IAC1C2I,EAAUhH,KAAK7B,GAGjBlB,KAAKsW,SAAS,CAAC/T,SAAUuH,EAAc9G,MAAO+G,QAE5C,CAGF,IAFA,IAAMD,EAAe9J,KAAK2W,MAAMpU,SAAS4B,QACnC/D,EAAQuN,GAAW,CAAC3N,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WAAYzY,KAAKkY,IAAIvB,MAAM+B,YACrF/V,EAAI,EAAGA,EAAImH,EAAa7F,OAAQtB,IACtCmH,EAAanH,GAAGvC,MAAQA,EAG1B,IADA,IAAM2J,EAAY,GACVC,EAAI,EAAGA,EAAIhK,KAAK2W,MAAM3T,MAAMiB,OAAQ+F,IAAI,CAC9C,IAAM9I,EAAI,IAAIL,EAAKb,KAAK2W,MAAM3T,MAAMgH,GAAGlJ,MAAOd,KAAK2W,MAAM3T,MAAMgH,GAAGjJ,KAC1C,QAArBf,KAAK2W,MAAMC,OAAiB1V,EAAEE,SAAS,IAC1C2I,EAAUhH,KAAK7B,GAEjBlB,KAAKsW,SAAS,CAAC/T,SAAUuH,EAAc9G,MAAO+G,O,yCAKhD,IAAiC,IAA9B/J,KAAKkY,IAAIvB,MAAMmC,WAAqB,CAGrC,IAFA,IACMhP,EAAe9J,KAAK2W,MAAMpU,SAAS4B,QACjCxB,EAAI,EAAGA,EAAImH,EAAa7F,OAAQtB,IACtCmH,EAAanH,GAAGxC,KAHD,EAKjBH,KAAKsW,SAAS,CAAC/T,SAAUuH,QAEvB,CAGF,IAFA,IAAM3E,EAAaG,GAAgBtF,KAAK2W,MAAMpU,UACxCuH,EAAe9J,KAAK2W,MAAMpU,SAAS4B,QACjCxB,EAAI,EAAGA,EAAImH,EAAa7F,OAAQtB,IACtCmH,EAAanH,GAAGxC,KAAOmG,GAAYwD,EAAanH,GAAGzC,OACjDiF,EAAYnF,KAAKkY,IAAIvB,MAAM5U,QAAS/B,KAAKkY,IAAIvB,MAAM3U,SAEvDhC,KAAKsW,SAAS,CAAC/T,SAAUuH,O,uCAO3B,IAAqB,KAFG2V,GAAU,CAACzf,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WAAYzY,KAAKkY,IAAIvB,MAAM+B,WAC5E,CAAC1Y,KAAKkY,IAAIvB,MAAMgC,OAAQ3Y,KAAKkY,IAAIvB,MAAMiC,SAAU5Y,KAAKkY,IAAIvB,MAAMkC,UAChE,CAMxB,IALA,IAAM/O,EAAe9J,KAAK2W,MAAMpU,SAAS4B,QACnCgB,EAAaG,GAAgBtF,KAAK2W,MAAMpU,UAC1CwD,EAAWM,GAAoB,CAACrG,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WACxCzY,KAAKkY,IAAIvB,MAAM+B,WAAY,CAAC1Y,KAAKkY,IAAIvB,MAAMgC,OAC3C3Y,KAAKkY,IAAIvB,MAAMiC,SAAU5Y,KAAKkY,IAAIvB,MAAMkC,SAAU1T,GAC9ExC,EAAI,EAAGA,EAAImH,EAAa7F,OAAQtB,IACtCmH,EAAanH,GAAGvC,MAAQmG,GAAauD,EAAanH,GAAGzC,OAAQiF,EAAYY,GAE3E/F,KAAKsW,SAAS,CAAC/T,SAAUuH,QAEvB,CAGF,IAFA,IAAMA,EAAe9J,KAAK2W,MAAMpU,SAAS4B,QACnC/D,EAAQuN,GAAW,CAAC3N,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WAAYzY,KAAKkY,IAAIvB,MAAM+B,YACrF/V,EAAI,EAAGA,EAAImH,EAAa7F,OAAQtB,IACtCmH,EAAanH,GAAGvC,MAAQA,EAE1BJ,KAAKsW,SAAS,CAAC/T,SAAUuH,O,8BAIrB5I,EAAER,IACC,IAANA,IACDV,KAAK2W,MAAMoB,eAAiB7W,EAAEwe,QAC9B1f,KAAK2W,MAAMqB,eAAiB9W,EAAEye,SAEhC3f,KAAKsW,SAAS,CAACwB,SAASpX,M,mCAGbQ,GACX,GAAGlB,KAAK2W,MAAMmB,SAAS,CACrB,IAAM8H,EAAS1e,EAAEwe,QAAU1f,KAAK2W,MAAMoB,eAChC8H,EAAS3e,EAAEye,QAAU3f,KAAK2W,MAAMqB,eAChC8H,EAAc9f,KAAK2W,MAAMiB,SAAW,IAAKgI,EACzCG,EAAc/f,KAAK2W,MAAMkB,SAAW,IAAKgI,EAC/C7f,KAAKsW,SAAS,CAACyB,eAAgB7W,EAAEwe,QAAS1H,eAAgB9W,EAAEye,QAC9C/H,QAASkI,EAAajI,QAASkI,O,oCAK/C/f,KAAKsW,SAAS,CAACsB,QAAQ,EAAEC,QAAQ,EAAGI,YAAa,EAAGc,OAAQ/Y,KAAK2W,MAAMqJ,MAAM,EAAGhH,OAAOhZ,KAAK2W,MAAMW,OAAO,M,iCAGhGpW,GACT,IAAMqG,GAASlF,KAAK4d,KAAK/e,EAAE2e,QACrBK,EAAmBlgB,KAAK2W,MAAMsB,YAAoB,KAAN1Q,EAClDvH,KAAKsW,SAAS,CAAC2B,YAAaiI,M,kCAI5BlgB,KAAKwf,kBACL,IAAMW,EAAmB9d,KAAKiF,IAAItH,KAAK2W,MAAMH,sBAAwB,EACnCxW,KAAK2W,MAAMJ,kBAAkBtS,OAAO,GACtEgS,GAAmBjW,KAAMmgB,EAAkBA,EAAiB,EAAG,Q,oCAI/DngB,KAAKwf,kBACL,IAAMW,EAAmB9d,KAAKgD,IAAIrF,KAAK2W,MAAMH,sBAAuB,EAAG,GACvEP,GAAmBjW,KAAMmgB,EAAkBA,EAAiB,EAAG,Q,oCAI/DngB,KAAKwf,kBACL,IAAMW,EAAmB9d,KAAKiF,IAAItH,KAAK2W,MAAMJ,kBAAkBtS,OAAO,EAClEjE,KAAK2W,MAAMH,sBAAwBnU,KAAKC,MAAM,IAAKtC,KAAKkY,IAAIvB,MAAMgH,iBAGtE1H,GAAmBjW,KAAMmgB,GAFe,IAAtBngB,KAAK2W,MAAMD,OAAiByJ,EAAiB,EACrCngB,KAAK2W,MAAMJ,kBAAkBtS,OACD,Q,qCAItDjE,KAAKwf,kBACL,IAAMW,EAAmB9d,KAAKgD,IAAI,EAC9BrF,KAAK2W,MAAMH,sBAAwBnU,KAAKC,MAAM,IAAKtC,KAAKkY,IAAIvB,MAAMgH,iBAGtE1H,GAAmBjW,KAAMmgB,GAFe,IAAtBngB,KAAK2W,MAAMD,OAAiByJ,EAAiB,EACvCngB,KAAK2W,MAAMJ,kBAAkBtS,OAAO,EACN,Q,wCAItDjE,KAAKwf,kBAELxf,KAAKsW,SAAS,CAACE,sBAAsB,IACrCP,GAAmBjW,KAAM,EAAG,EAAE,Q,kCAG9BA,KAAKwf,kBACL,IAAMW,EAAmBngB,KAAK2W,MAAMJ,kBAAkBtS,OAAO,EAC7DgS,GAAmBjW,KAAMmgB,EAAkBA,EAAiB,EAAG,Q,kFAI/DC,CAAwBpgB,Q,oFAIxBqgB,CAA0BrgB,Q,kCAQ1B,IAJA,IAAIsgB,EAAa,+BACX/d,EAAWvC,KAAK2W,MAAMpU,SACtBS,EAAQhD,KAAK2W,MAAM3T,MAEjBL,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClC2d,GAAc/d,EAASI,GAAG4d,QAE5B,IAAI,IAAI5d,EAAI,EAAGA,EAAIK,EAAMiB,OAAQtB,IAC/B2d,GAAetd,EAAML,GAAG4d,QAE1B,IAAIC,EAAOC,SAASC,cAAc,KAClCF,EAAKG,KAAOL,EACZE,EAAKI,SAAW,cAChBH,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACLN,SAASI,KAAKG,YAAYR,K,6BAIrBS,GACL,IACMC,EADSlhB,KAAKkX,OAAO+B,QACNkI,UAAU,WAAWF,GACtCT,EAAOC,SAASC,cAAc,KAClCF,EAAKG,KAAOO,EACZV,EAAKI,SAAW,WAAWK,EAC3BR,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACLN,SAASI,KAAKG,YAAYR,K,+BAInB,IAAD,OAEN,OAAO,yBAAKY,UAAY,WAChB,4BAAQC,MAAS,CAACC,UAA6B,EAAlBthB,KAAKiX,MAAMK,OAAS,GAAGtX,KAAKiX,MAAMK,OAAO,IACtE8J,UAAY,gBAAgBG,IAAOvhB,KAAKkX,OACxCsK,YAAe,SAACtgB,GAAD,OAAO,EAAKugB,QAAQvgB,GAAE,IACrCwgB,UAAa,SAACxgB,GAAD,OAAO,EAAKugB,QAAQvgB,GAAE,IACnCygB,YAAe,SAACzgB,GAAD,OAAO,EAAK0gB,aAAa1gB,IACxC2gB,QAAW,SAAC3gB,GAAD,OAAO,EAAK4gB,WAAW5gB,MAElC,6BACA,yBAAKkgB,UAAY,oBACjB,4BAAQA,UAAY,cAAcW,MAAQ,0BAC1CC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,SAA0D,IAArCzd,KAAK2W,MAAMH,sBAC3D6K,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,SAC1DC,QAAW,kBAAM,EAAKC,qBACxB,4BAAQf,UAAY,YAAYW,MAAQ,4BACxCC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,SAA0D,IAArCzd,KAAK2W,MAAMH,sBACzD6K,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,SAC1DC,QAAW,kBAAM,EAAKE,kBAC1B,4BAAQhB,UAAY,iBAAiBW,MAAQ,iBAC7CC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,SAA0D,IAArCzd,KAAK2W,MAAMH,sBACzD6K,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,SAC1DC,QAAW,kBAAM,EAAKG,iBAC1B,4BAAQjB,UAAY,SAASkB,QAAgC,IAAtBtiB,KAAK2W,MAAMD,OAAkBqL,MAAQ,gBAC5EC,SAAahiB,KAAK2W,MAAMH,wBAA0BxW,KAAK2W,MAAMJ,kBAAkBtS,QACpC,IAAxCjE,KAAK2W,MAAMJ,kBAAkBtS,OAChCie,QAAS,kBAAM,EAAKK,gBAClBlB,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,WAC9D,4BAAQb,UAAY,SAASkB,QAAgC,IAAtBtiB,KAAK2W,MAAMD,OAAiBqL,MAAQ,kBAC3EG,QAAW,kBAAM,EAAKM,kBACpBnB,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC3CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,WAC/D,4BAAQb,UAAY,QACpBW,MAAQ,kBACRC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,QAC3ByE,QAAW,kBAAM,EAAKjI,mBACpBoH,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,WAC9D,4BAAQb,UAAY,aACpBW,MAAQ,aACRC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,SACZzd,KAAK2W,MAAMH,wBAA0BxW,KAAK2W,MAAMJ,kBAAkBtS,OAC/Eod,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,SAC1DC,QAAW,kBAAM,EAAKO,eAC1B,4BAAQrB,UAAY,eACpBW,MAAQ,wBACRC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,SACZzd,KAAK2W,MAAMH,wBAA0BxW,KAAK2W,MAAMJ,kBAAkBtS,OAC/Eod,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,SAC1DC,QAAW,kBAAM,EAAKQ,iBAC1B,4BAAQtB,UAAY,aACpBW,MAAQ,gCACRC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,SACZzd,KAAK2W,MAAMH,wBAA0BxW,KAAK2W,MAAMJ,kBAAkBtS,OAC/Eod,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,SAC1DC,QAAW,kBAAM,EAAKS,eAC1B,4BAAQvB,UAAW,UACnBW,MAAQ,eACRC,SAAmC,IAAvBhiB,KAAK2W,MAAMiB,SAAwC,IAAvB5X,KAAK2W,MAAMkB,SAA4C,IAA3B7X,KAAK2W,MAAMsB,YAC/EiK,QAAW,kBAAM,EAAKU,eACpBvB,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,WAC9D,4BAAQb,UAAY,iBACpBW,MAAQ,iBACRC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,QAC3ByE,QAAW,kBAAM,EAAKW,iBACpBxB,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,YAE9D,6BACA,yBAAKb,UAAY,mBACf,yBAAKA,UAAY,iBAEf,4BAAQA,UAAY,aACpB0B,SAAY,SAACC,GAAD,OAAW,EAAKC,YAAYD,EAAME,OAAO9D,QACrDkC,MAAS,CAAChK,MAAyB,EAAjBrX,KAAK2W,MAAMU,MAAS,KACpC,8BAAU6L,MAAQ,6BAClB,4BAAQ/D,MAAQ,UAAhB,4BACA,4BAAQA,MAAQ,uBAAhB,0BACA,4BAAQA,MAAQ,cAAcmD,QAAU,EAAMN,UAAY,GAA1D,kBACA,4BAAQ7C,MAAQ,eAAhB,mBACA,4BAAQA,MAAQ,oBAAhB,6BAEA,8BAAU+D,MAAQ,8BAClB,4BAAQ/D,MAAQ,OAAO6C,UAAY,GAAnC,sBACA,4BAAQ7C,MAAQ,UAAU6C,UAAY,GAAtC,0BACA,4BAAQ7C,MAAQ,kBAAkB6C,UAAY,GAA9C,qCAEA,8BAAUkB,MAAQ,oBAAoBZ,QAAU,GAC9C,4BAAQnD,MAAQ,qBAAqB6C,UAAY,GAAjD,4BAEF,8BAAUkB,MAAQ,0BAChB,4BAAQ/D,MAAO,WAAf,yBACA,4BAAQA,MAAQ,QAAhB,uBAEF,8BAAU+D,MAAQ,OAChB,4BAAQ/D,MAAQ,QAAhB,WACA,4BAAQA,MAAQ,QAAhB,WACA,4BAAQA,MAAQ,iBAAhB,+BACA,4BAAQA,MAAQ,gBAAgB6C,UAAY,EAAMM,QAAU,GAA5D,gCAEF,8BAAUY,MAAQ,4BAChB,4BAAQ/D,MAAQ,SAAhB,0CAEF,8BAAU+D,MAAQ,8BAChB,4BAAQ/D,MAAQ,gBAAhB,uBAGJ,yBAAKiC,UAAY,YACf,4BAAQA,UAAY,QACpBW,MAAQ,UACRV,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC9CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,WAE1D,yBAAKb,UAAY,oBACf,uBAAGA,UAAY,QAAQc,QAAW,kBAAM,EAAKiB,cAA7C,QACA,uBAAG/B,UAAY,QAAQc,QAAW,kBAAM,EAAKkB,OAAO,SAApD,QACA,uBAAGhC,UAAY,QAAQc,QAAW,kBAAM,EAAKkB,OAAO,SAApD,UAGJ,4BAAQhC,UAAY,QACpBW,MAAQ,qBACRG,QAAW,kBAAM,EAAKmB,yBACtBrB,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,QACzB4D,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,YAIhE,6BACA,yBAAKb,UAAY,iBACf,4BAAQA,UAAY,aACnB0B,SAAY,SAACC,GAAD,OAAW,EAAKO,cAAcP,EAAME,OAAO9D,QACvDkC,MAAS,CAAChK,MAAyB,EAAjBrX,KAAK2W,MAAMU,MAAS,IACvC2K,SAAYhiB,KAAKkY,IAAIvB,MAAM8G,SACzB,4BAAQ0B,MAAQ,KAAhB,YACA,4BAAQA,MAAQ,KAAhB,qBAEF,4BAAQA,MAASnf,KAAK2W,MAAMhV,WAC5B0f,MAAS,CAAChK,MAAyB,EAAjBrX,KAAK2W,MAAMU,MAAS,IACtC2K,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,QAAkB2D,UAAY,aAAa0B,SAAY,SAACC,GAAD,OAAW,EAAK9D,kBAAkB8D,EAAME,OAAO9D,SAC/H,4BAAQA,MAAQ,SAAS6C,SAAiC,QAArBhiB,KAAK2W,MAAMC,OAAhD,YACA,4BAAQuI,MAAQ,eAAe6C,SAAiC,QAArBhiB,KAAK2W,MAAMC,OAAtD,mBACA,4BAASuI,MAAQ,SAAjB,8BACA,4BAAQA,MAAQ,mBAAmB6C,UAAY,GAA/C,wBAEF,4BAAQZ,UAAY,SACpBc,QAAW,kBAAM,EAAKqB,gBACtBxB,MAAQ,qBACRC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,QACzB4D,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,WAE9D,4BAAQb,UAAY,WACpBW,MAAQ,mBACRG,QAAW,kBAAM,EAAKsB,uBACtBxB,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,QACzB4D,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,kB,GAnvB9C9K,IAAMsM,W,SAgwBvBrE,G,qFAAf,WAA6BlJ,EAAK3B,EAAEgE,GAApC,SAAAnM,EAAA,sEACQ8J,EAAKI,SAAS,CAACgB,OAAQiB,EAAElB,MAAO9C,IADxC,OAEE2B,EAAKqN,eAFP,4C,oEAKA,WAA4BrN,EAAMpI,EAAa0D,GAA/C,SAAApF,EAAA,sEACQ8J,EAAKI,SAAS,CAACtT,MAAO8K,IAD9B,OAEEmI,GAAmBC,EAAM,EAAG1E,EAAWvN,OAAOuN,GAFhD,4C,oEAKA,WAAqC0E,EAAKxV,GAA1C,SAAA0L,EAAA,sEACQ8J,EAAKI,SAAS,CAAC3U,WAAYjB,IADnC,OAEEwV,EAAKqN,eAFP,4C,sBASA,SAASje,GAAgB/C,GAEvB,IADA,IAAI4C,GAAcC,IACVzC,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCwC,EAAa9C,KAAKgD,IAAI9C,EAASI,GAAGzC,OAAQiF,GAE5C,OAAOA,EAGT,SAASmB,GAAYpG,EAAQiF,EAAYpD,EAASC,GAEhD,OAAOD,EAA8B7B,EAAOiF,GAA3BnD,EAAUD,GAG7B,SAAS0d,GAAUxa,EAAYC,GAC7B,OAAGD,EAAW,KAAOC,EAAS,IAAMD,EAAW,KAAOC,EAAS,IAAMD,EAAW,KAAOC,EAAS,GAIlG,SAASyI,GAAWvN,GAClB,MAAO,OAASA,EAAM,GAAK,IAAMA,EAAM,GAAK,IAAMA,EAAM,GAAG,IAG7D,SAASiG,GAAoBpB,EAAYC,EAAU/C,GAWjD,IAX2D,MAETsD,GAAWR,GAFF,mBAEtDS,EAFsD,KAE5CC,EAF4C,KAE3BC,EAF2B,OAGfH,GAAWP,GAHI,mBAGtDW,EAHsD,KAOvDC,GAPuD,WAOvCD,EAAOH,GAAUvD,GAE/B4D,EAAW,GAETpD,EAAI,EAAGA,EAAIR,EAAWQ,IAAI,CAChC,IADgC,EAEPqD,IAAYN,EAASI,EAAanD,GAAG,IAAKgD,EAC3BC,GAHR,mBAEzBK,EAFyB,KAErBC,EAFqB,KAEfC,EAFe,KAIhCJ,EAAShD,KAAK,CAACV,KAAK+D,IAAIH,EAAI,KAAM5D,KAAK+D,IAAIF,EAAM,KAAM7D,KAAK+D,IAAID,EAAK,OAGvE,OAAOJ,EAGT,SAASN,GAAW0B,GAClB,IAAIlB,EAAMkB,EAAS,GAAG,IAClBjB,EAAQiB,EAAS,GAAG,IACpBhB,EAAOgB,EAAS,GAAG,IACnBC,EAAO/E,KAAKgD,IAAL,MAAAhD,KAAY,CAAC4D,EAAIC,EAAMC,IAC9BkB,EAAOhF,KAAKiF,IAAL,MAAAjF,KAAY,CAAC4D,EAAIC,EAAMC,IAC9BoB,EAAQH,EAAKC,EAIbG,GAAaJ,EAAKC,GAAM,EAG5B,MAAO,CAWT,SAAuBE,EAAOH,EAAMnB,EAAKC,EAAOC,GAC9C,GAAa,IAAVoB,EAAa,OAAO,EACvB,GAAGH,IAASnB,EAAK,OAAaC,EAAMC,GAAMoB,EAAO,EAAzB,GACxB,GAAGH,IAASlB,EAAO,OAAO,KAAKC,EAAKF,GAAKsB,EAAM,GAC/C,GAAGH,IAASjB,EAAM,OAAO,KAAKF,EAAKC,GAAOqB,EAAQ,GAnBxCE,CAAcF,EAAOH,EAAMnB,EAAKC,EAAOC,GAAM,IAE5B,IAAVoB,EAAa,EAAGA,GAAO,EAAElF,KAAK+D,IAAI,EAAEoB,EAAU,IAEtCA,GAG3B,SAASxB,GAAW0B,EAAKC,EAAYH,GACnC,IAAMI,GAAK,EAAIvF,KAAK+D,IAAI,EAAEoB,EAAU,IAAIG,EAElCE,EAAIL,EAAYI,EAAE,EAHqB,EAe/C,SAAuBF,EAAKE,EAAGE,GAC7B,OAAIJ,GAAO,GAAKA,EAAM,IAAc,KAAPA,EAAmB,CAACE,EAAEE,EAAE,GAClDJ,GAAO,IAAMA,EAAM,IAAa,CAACI,EAAEF,EAAE,GACrCF,GAAO,KAAOA,EAAM,IAAa,CAAC,EAAGE,EAAGE,GACxCJ,GAAO,KAAOA,EAAM,IAAa,CAAC,EAAGI,EAAGF,GACxCF,GAAO,KAAOA,EAAM,IAAa,CAACI,EAAG,EAAGF,GACxCF,GAAO,KAAOA,EAAM,IAAa,CAACE,EAAG,EAAGE,GACpC,CAAC,EAAE,EAAE,GAlBwBC,CAAcL,EAAKE,EAF7CA,GAAK,EAAIvF,KAAK+D,IAAIsB,EAAI,IAAI,EAAG,IAFM,mBAK7C,MAAO,CAAc,KALwB,KAK3BG,GAAQ,IAAqB,KALF,KAKFA,GAAS,IAAoB,KAL3B,KAKsBA,GAAU,KAoB/E,SAAStB,GAAarG,EAAQiF,EAAYY,GAIxC,OAAO4H,GAFS5H,EAAS1D,KAAKC,MAAOpC,EAAOiF,GAAeY,EAAS9B,OAAO,M,8CAK7E,WAAuCiS,GAAvC,SAAA9J,EAAA,sEACQ8J,EAAKgC,IAAIwL,OAAOzK,QAAQ0K,eADhC,OAEEzN,EAAKgC,IAAIwL,OAAOzK,QAAQiB,SAASjB,QAAQ2K,gBAAgB3K,QAAQ4K,SAAQ,GAF3E,4C,oEAKA,WAAyC3N,GAAzC,SAAA9J,EAAA,sEACQ8J,EAAKgC,IAAIwL,OAAOzK,QAAQ0K,eADhC,OAEEzN,EAAKgC,IAAIwL,OAAOzK,QAAQiB,SAASjB,QAAQ6K,kBAAkB7K,QAAQ4K,SAAQ,GAF7E,4C,kGCj5BA,WAAgC3N,EAAKiJ,GAArC,SAAA/S,EAAA,yDACe,IAAV+S,EADL,gCACwBjJ,EAAKI,SAAS,CAACrU,UAAU,UADjD,UAEe,IAAVkd,EAFL,gCAEwBjJ,EAAKI,SAAS,CAACrU,UAAU,SAFjD,OAG8B,IAAzBiU,EAAKS,MAAMlJ,WAAiByI,EAAK6N,QAAQ9K,QAAQsK,eACxB,IAAzBrN,EAAKS,MAAMlJ,WAAiByI,EAAK8N,UAAU/K,QAAQsK,eAJxD,4C,oEAOA,WAA+BrN,EAAMxV,GAArC,SAAA0L,EAAA,sEACQ8J,EAAKI,SAAS,CAAC9U,KAAMd,IAD7B,OAE8B,IAAzBwV,EAAKS,MAAMlJ,WAAiByI,EAAK6N,QAAQ9K,QAAQsK,eACxB,IAAzBrN,EAAKS,MAAMlJ,WAAiByI,EAAK8N,UAAU/K,QAAQsK,eAHxD,4C,oEAMA,WAA4BrN,EAAKhV,GAAjC,SAAAkL,EAAA,sEACQ8J,EAAKI,SAAS,CAAC7U,KAAMP,IAD7B,OAE8B,IAAzBgV,EAAKS,MAAMlJ,WAAiByI,EAAK6N,QAAQ9K,QAAQsK,eACxB,IAAzBrN,EAAKS,MAAMlJ,WAAiByI,EAAK8N,UAAU/K,QAAQsK,eAHxD,4C,oEAYA,WAAiCrN,EAAMxV,GAAvC,SAAA0L,EAAA,yDACW,IAAN1L,EADL,gCAEUwV,EAAKI,SAAS,CAACwC,YAAY,IAFrC,OAGgC,IAAzB5C,EAAKS,MAAMlJ,WAAiByI,EAAK6N,QAAQ9K,QAAQgL,mBACxB,IAAzB/N,EAAKS,MAAMlJ,WAAiByI,EAAK8N,UAAU/K,QAAQgL,mBAJ1D,UAMW,IAANvjB,EANL,iCAOUwV,EAAKI,SAAS,CAACwC,YAAY,IAPrC,OAQgC,IAAzB5C,EAAKS,MAAMlJ,WAAiByI,EAAK6N,QAAQ9K,QAAQgL,mBACxB,IAAzB/N,EAAKS,MAAMlJ,WAAiByI,EAAK8N,UAAU/K,QAAQgL,mBAT1D,6C,oEAaA,WAA0B/N,EAAMxV,GAAhC,SAAA0L,EAAA,sEACQ8J,EAAKI,SAAS,CAACkC,SAAU9X,IADjC,OAE8B,IAAzBwV,EAAKS,MAAMlJ,WAAiByI,EAAK6N,QAAQ9K,QAAQiL,iBACxB,IAAzBhO,EAAKS,MAAMlJ,WAAiByI,EAAK8N,UAAU/K,QAAQiL,iBAHxD,4C,oEAMA,WAA4BhO,EAAMxV,GAAlC,SAAA0L,EAAA,sEACQ8J,EAAKI,SAAS,CAACmC,WAAY/X,IADnC,OAE8B,IAAzBwV,EAAKS,MAAMlJ,WAAiByI,EAAK6N,QAAQ9K,QAAQiL,iBACxB,IAAzBhO,EAAKS,MAAMlJ,WAAiByI,EAAK8N,UAAU/K,QAAQiL,iBAHxD,4C,oEAMA,WAA2BhO,EAAMxV,GAAjC,SAAA0L,EAAA,sEACQ8J,EAAKI,SAAS,CAACoC,UAAWhY,IADlC,OAE8B,IAAzBwV,EAAKS,MAAMlJ,WAAiByI,EAAK6N,QAAQ9K,QAAQiL,iBACxB,IAAzBhO,EAAKS,MAAMlJ,WAAiByI,EAAK8N,UAAU/K,QAAQiL,iBAHxD,4C,oEAMA,WAA6BhO,EAAMxV,GAAnC,SAAA0L,EAAA,sEACQ8J,EAAKI,SAAS,CAACqC,OAAQjY,IAD/B,OAE8B,IAAzBwV,EAAKS,MAAMlJ,WAAiByI,EAAK6N,QAAQ9K,QAAQiL,iBACxB,IAAzBhO,EAAKS,MAAMlJ,WAAiByI,EAAK8N,UAAU/K,QAAQiL,iBAHxD,4C,oEAMA,WAA+BhO,EAAMxV,GAArC,SAAA0L,EAAA,sEACQ8J,EAAKI,SAAS,CAACsC,SAAUlY,IADjC,OAE8B,IAAzBwV,EAAKS,MAAMlJ,WAAiByI,EAAK6N,QAAQ9K,QAAQiL,iBACxB,IAAzBhO,EAAKS,MAAMlJ,WAAiByI,EAAK8N,UAAU/K,QAAQiL,iBAHxD,4C,oEAMA,WAA8BhO,EAAMxV,GAApC,SAAA0L,EAAA,sEACQ8J,EAAKI,SAAS,CAACuC,QAASnY,IADhC,OAE8B,IAAzBwV,EAAKS,MAAMlJ,WAAiByI,EAAK6N,QAAQ9K,QAAQiL,iBACxB,IAAzBhO,EAAKS,MAAMlJ,WAAiByI,EAAK8N,UAAU/K,QAAQiL,iBAHxD,4C,oEAMA,WAAoChO,EAAMxV,GAA1C,eAAA0L,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAACvU,QAAQod,IAF/B,OAG8B,IAAzBjJ,EAAKS,MAAMlJ,WAAiByI,EAAK6N,QAAQ9K,QAAQgL,mBACxB,IAAzB/N,EAAKS,MAAMlJ,WAAiByI,EAAK8N,UAAU/K,QAAQgL,mBAJxD,4C,oEAOA,WAAoC/N,EAAMxV,GAA1C,eAAA0L,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAACtU,QAAQmd,IAF/B,OAG8B,IAAzBjJ,EAAKS,MAAMlJ,WAAiByI,EAAK6N,QAAQ9K,QAAQgL,mBACxB,IAAzB/N,EAAKS,MAAMlJ,WAAiByI,EAAK8N,UAAU/K,QAAQgL,mBAJxD,4C,0BAqUeE,G,kDA5Tb,WAAYlN,GAAO,IAAD,8BAChB,cAAMA,IACDN,MAAQ,CACXyN,MAAM,EACNnf,WAAYof,GAAmB,EAAKpN,MAAMiB,IAAIvB,MAAM6B,SAAU,EAAKvB,MAAMiB,IAAIvB,MAAM8B,WAAY,EAAKxB,MAAMiB,IAAIvB,MAAM+B,WACpHxT,SAAUmf,GAAmB,EAAKpN,MAAMiB,IAAIvB,MAAMgC,OAAQ,EAAK1B,MAAMiB,IAAIvB,MAAMiC,SAAU,EAAK3B,MAAMiB,IAAIvB,MAAMkC,SAC9GxB,MAAO,GACPC,OAAQ,IAEV,EAAKY,IAAM,EAAKjB,MAAMiB,IACtB,EAAK6L,QAAuC,OAA7B,EAAK7L,IAAI6L,QAAQ9K,QAAkB,EAAKf,IAAI8L,UAAU/K,QAAS,EAAKf,IAAI6L,QAAQ9K,QAV/E,E,oDAeVvY,GACNV,KAAKsW,SAAS,CAAC8N,KAAK1jB,M,wCAGJ4jB,GAChB,IAAMnF,EAAQ9c,KAAK+D,IAAI,IAAI6M,SAASqR,IACpCtkB,KAAKkY,IAAI5B,SAAS,CAACqH,eAAgBwB,M,kCAGzBze,GACV,IAAMye,EAAQlM,SAASvS,I,uCACvB6jB,CAAgBvkB,KAAKkY,IAAKiH,K,+BAGnBze,GACP,IAAMye,EAAQlM,SAASvS,I,uCACvB8c,CAAaxd,KAAKkY,IAAKiH,K,mCAGZze,GACX,IAAMye,EAAQlM,SAASvS,I,uCACvB8jB,CAAiBxkB,KAAKkY,IAAKiH,K,6FAOVze,GACjB,IAAMye,EAAQlM,SAASvS,I,uCACvB+jB,CAAkBzkB,KAAKkY,IAAKiH,K,6BAGvBze,GACL,IAAMye,EAAQlM,SAASvS,I,uCACvBgkB,CAAW1kB,KAAKkY,IAAKiH,GACrBnf,KAAKsW,SAAS,CAACrR,WAAYof,GAAmBlF,EAAOnf,KAAKkY,IAAIvB,MAAM8B,WAAYzY,KAAKkY,IAAIvB,MAAM+B,e,+BAGxFhY,GACP,IAAMye,EAAQlM,SAASvS,I,uCACvBikB,CAAa3kB,KAAKkY,IAAKiH,GACvBnf,KAAKsW,SAAS,CAACrR,WAAYof,GAAmBrkB,KAAKkY,IAAIvB,MAAM6B,SAAU2G,EAAOnf,KAAKkY,IAAIvB,MAAM+B,e,8BAGvFhY,GACN,IAAMye,EAAQlM,SAASvS,I,uCACvBkkB,CAAY5kB,KAAKkY,IAAKiH,GACtBnf,KAAKsW,SAAS,CAACrR,WAAYof,GAAmBrkB,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WAAY0G,O,gCAG1Fze,GACR,IAAMye,EAAQlM,SAASvS,I,uCACvBmkB,CAAc7kB,KAAKkY,IAAKiH,GACxBnf,KAAKsW,SAAS,CAACpR,SAAUmf,GAAmBlF,EAAOnf,KAAKkY,IAAIvB,MAAMiC,SAAU5Y,KAAKkY,IAAIvB,MAAMkC,a,kCAGjFnY,GACV,IAAMye,EAAQlM,SAASvS,I,uCACvBokB,CAAgB9kB,KAAKkY,IAAKiH,GAC1Bnf,KAAKsW,SAAS,CAACpR,SAAUmf,GAAmBrkB,KAAKkY,IAAIvB,MAAMgC,OAAQwG,EAAQnf,KAAKkY,IAAIvB,MAAMkC,a,iCAGjFnY,GACT,IAAMye,EAAQlM,SAASvS,I,uCACvBqkB,CAAe/kB,KAAKkY,IAAKiH,GACzBnf,KAAKsW,SAAS,CAACpR,SAAUmf,GAAmBrkB,KAAKkY,IAAIvB,MAAMgC,OAAQ3Y,KAAKkY,IAAIvB,MAAMiC,SAAUuG,O,uCAG7Eze,I,uCAEfskB,CADahlB,KAAKkY,IACQxX,K,uCAGXA,I,uCAEfukB,CADajlB,KAAKkY,IACSxX,K,+BAGpB,IAAD,OACN,OAAM,6BACA,kBAAC,KAAD,CAAOwkB,OAAUllB,KAAK2W,MAAMyN,KAC1Be,eAAkB,kBAAM,EAAKtB,SAAQ,IACrCzC,UAAY,kBACZgE,iBAAmB,0BAEnB,yBAAKhE,UAAY,iBACjB,uBAAGA,UAAY,eAAeC,MAAS,CAACjhB,MAAO,UAC7C,uBAAGihB,MAAS,CAACjhB,MAAO,UAApB,6BAEF,yBAAKghB,UAAY,WACf,2BACEiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAAS9c,KAAK+D,IAAI,IAAIpG,KAAKkY,IAAIvB,MAAMgH,gBACrCyD,UAAY,SACZ0B,SAAY,SAACC,GAAD,OAAU,EAAKuC,kBAAkBvC,EAAME,OAAO9D,QAC1D6C,SAAYhiB,KAAKkY,IAAIvB,MAAM8G,UAE7B,mDACoBzd,KAAKkY,IAAIvB,MAAMgH,eADnC,MAGA,2BACE0H,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMnV,KACxB+jB,KAAO,IACPnE,UAAY,SACZoE,KAAO,SACPxD,SAAYhiB,KAAKkY,IAAIvB,MAAM8G,QAC3BqF,SAAY,SAACC,GAAD,OAAW,EAAK0C,YAAY1C,EAAME,OAAO9D,UAEvD,4CACanf,KAAKkY,IAAIvB,MAAMnV,MAE5B,2BACE6jB,KAAO,QACP/d,IAAqC,SAA7BtH,KAAKkY,IAAIvB,MAAM1U,UAAsBjC,KAAKkY,IAAIvB,MAAMnV,KAAK,EAAGa,KAAKiF,IAAI,GAAItH,KAAKkY,IAAIvB,MAAMnV,KAAK,GACrG6D,IAAOhD,KAAKiF,IAAIjF,KAAKC,OAAOtC,KAAKkY,IAAIvB,MAAMnV,KAAKxB,KAAKkY,IAAIvB,MAAMnV,KAAOxB,KAAKkY,IAAIvB,MAAMnV,MAAM,GAnOzF,KAoOF2d,MAASnf,KAAKkY,IAAIvB,MAAMlV,KACxB8jB,KAAO,IACPnE,UAAY,SACZoE,KAAO,SACPxD,SAAYhiB,KAAKkY,IAAIvB,MAAM8G,SAA6B,OAAjBzd,KAAK+jB,SAAsD,UAAlC/jB,KAAK+jB,QAAQpN,MAAMhV,WACnFmhB,SAAY,SAACC,GAAD,OAAW,EAAK2C,SAAS3C,EAAME,OAAO9D,UAEpD,yCACUnf,KAAKkY,IAAIvB,MAAMlV,MAEzB,2BACE4jB,KAAO,QACP/d,IAAM,IACNjC,IAAM,IACN8Z,MAAsC,SAA7Bnf,KAAKkY,IAAIvB,MAAM1U,UAAsB,IAAI,IAClDsjB,KAAO,IACPnE,UAAY,SACZ0B,SAAY,SAACC,GAAD,OAAW,EAAK4C,aAAa5C,EAAME,OAAO9D,QACtD6C,SAAYhiB,KAAKkY,IAAIvB,MAAM8G,UAE7B,uDACwBzd,KAAKkY,IAAIvB,MAAM1U,YAKvC,uBAAGmf,UAAY,eAAeC,MAAS,CAACjhB,MAAO,UAC7C,uBAAGihB,MAAS,CAACjhB,MAAO,UAApB,mBAIF,2BACEilB,KAAO,QACP/d,IAAM,IACNjC,IAAM,IACNkgB,KAAO,IACPpG,OAAuC,IAA9Bnf,KAAKkY,IAAIvB,MAAMmC,WAAoB,EAAE,EAC9CsI,UAAY,SACZ0B,SAAY,SAAC5hB,GAAD,OAAO,EAAK0kB,mBAAmB1kB,EAAE+hB,OAAO9D,QACpD6C,SAAYhiB,KAAKkY,IAAIvB,MAAM8G,UAE7B,iEAC+D,IAA9Bzd,KAAKkY,IAAIvB,MAAMmC,WAAoB,KAAK,OAGzE,2BACEuM,KAAO,QACP/d,IAAM,IACNjC,IAAOrF,KAAKkY,IAAIvB,MAAM3U,QACtBujB,KAAO,IACPpG,MAASnf,KAAKkY,IAAIvB,MAAM5U,QACxBqf,UAAY,SACZ0B,SAAY,SAAC5hB,GAAD,OAAO,EAAK2kB,iBAAiB3kB,EAAE+hB,OAAO9D,QAClD6C,SAAYhiB,KAAKkY,IAAIvB,MAAM8G,UAE7B,uDACwBzd,KAAKkY,IAAIvB,MAAM5U,SAGvC,2BACEsjB,KAAO,QACP/d,IAAOtH,KAAKkY,IAAIvB,MAAM5U,QACtBsD,IAAM,KACNkgB,KAAO,IACPpG,MAASnf,KAAKkY,IAAIvB,MAAM3U,QACxBof,UAAY,SACZ0B,SAAY,SAAC5hB,GAAD,OAAO,EAAK4kB,iBAAiB5kB,EAAE+hB,OAAO9D,QAClD6C,SAAYhiB,KAAKkY,IAAIvB,MAAM8G,UAE7B,uDACwBzd,KAAKkY,IAAIvB,MAAM3U,SAGvC,uBAAGof,UAAY,eAAeC,MAAS,CAACjhB,MAAO,UAC7C,uBAAGihB,MAAS,CAACjhB,MAAO,UAApB,0CAGF,4BACAkX,OAAUtX,KAAK2W,MAAMW,OACrBD,MAASrX,KAAK2W,MAAMU,MACpBgK,MAAS,CAAC0E,gBAAiB/lB,KAAK2W,MAAM1R,YACtCmc,UAAY,gBAEZ,6BAEA,2BACEiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACNkgB,KAAO,IACPpG,MAASnf,KAAKkY,IAAIvB,MAAM6B,SACxB4I,UAAY,SACZ0B,SAAY,SAAC5hB,GAAD,OAAO,EAAK8kB,OAAO9kB,EAAE+hB,OAAO9D,QACxC6C,SAAYhiB,KAAKkY,IAAIvB,MAAM8G,UAE7B,wCACSzd,KAAKkY,IAAIvB,MAAM6B,UAExB,2BACE6M,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACNkgB,KAAO,IACPpG,MAASnf,KAAKkY,IAAIvB,MAAM8B,WACxB2I,UAAY,SACZ0B,SAAY,SAAC5hB,GAAD,OAAO,EAAK+kB,SAAS/kB,EAAE+hB,OAAO9D,QAC1C6C,SAAYhiB,KAAKkY,IAAIvB,MAAM8G,UAE7B,0CACWzd,KAAKkY,IAAIvB,MAAM8B,YAE1B,2BACE4M,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACNkgB,KAAO,IACPpG,MAASnf,KAAKkY,IAAIvB,MAAM+B,UACxB0I,UAAY,SACZ0B,SAAY,SAAC5hB,GAAD,OAAO,EAAKglB,QAAQhlB,EAAE+hB,OAAO9D,QACzC6C,SAAYhiB,KAAKkY,IAAIvB,MAAM8G,UAE7B,wCACSzd,KAAKkY,IAAIvB,MAAM+B,WAExB,uBAAG0I,UAAY,eAAeC,MAAS,CAACjhB,MAAO,UAC7C,uBAAGihB,MAAS,CAACjhB,MAAO,UAApB,yCAGF,4BACAkX,OAAUtX,KAAK2W,MAAMW,OACrBD,MAASrX,KAAK2W,MAAMU,MACpBgK,MAAS,CAAC0E,gBAAiB/lB,KAAK2W,MAAMzR,UACtCkc,UAAY,gBAEZ,6BACA,2BACEiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACNkgB,KAAO,IACPpG,MAASnf,KAAKkY,IAAIvB,MAAMgC,OACxByI,UAAY,SACZ0B,SAAY,SAAC5hB,GAAD,OAAO,EAAKilB,UAAUjlB,EAAE+hB,OAAO9D,QAC3C6C,SAAYhiB,KAAKkY,IAAIvB,MAAM8G,UAE7B,wCACSzd,KAAKkY,IAAIvB,MAAMgC,QAExB,2BACE0M,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACNkgB,KAAO,IACPpG,MAASnf,KAAKkY,IAAIvB,MAAMiC,SACxBwI,UAAY,SACZ0B,SAAY,SAAC5hB,GAAD,OAAO,EAAKklB,YAAYllB,EAAE+hB,OAAO9D,QAC7C6C,SAAYhiB,KAAKkY,IAAIvB,MAAM8G,UAE7B,0CACWzd,KAAKkY,IAAIvB,MAAMiC,UAE1B,2BACEyM,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACNkgB,KAAO,IACPpG,MAASnf,KAAKkY,IAAIvB,MAAMkC,QACxBuI,UAAY,SACZ0B,SAAY,SAAC5hB,GAAD,OAAO,EAAKmlB,WAAWnlB,EAAE+hB,OAAO9D,QAC5C6C,SAAYhiB,KAAKkY,IAAIvB,MAAM8G,UAE7B,wCACSzd,KAAKkY,IAAIvB,MAAMkC,gB,GArTD1B,IAAMsM,WA+T3C,SAASY,GAAmBpe,EAAKC,EAAOC,GACtC,MAAO,OAAOF,EAAIrF,WAAW,IAAIsF,EAAMtF,WAAW,IAAIuF,EAAKvF,WAAW,I,UCggBzD0lB,G,kDA15Bb,WAAYrP,GAAO,IAAD,8BAChB,cAAMA,IACDN,MAAQ,CACX4P,OAAS,SACTjP,OAAQ,GACRD,MAAO,GACPmP,WAAY,KACZjf,MAAO,EAAK0P,MAAMiB,IAAIvB,MAAMuD,SAASkB,OAAO7T,MAC5C+S,IAAM,EAAKrD,MAAMiB,IAAIvB,MAAMuD,SAASkB,OAAOd,IAC3CmM,KAAM,EAAKxP,MAAMiB,IAAIvB,MAAMuD,SAASkB,OAAO3P,GAC3Cib,QAAS,EAAKzP,MAAMiB,IAAIvB,MAAMuD,SAASkB,OAAOb,GAC9C3S,EAAG,EACHqT,KAAM,EACNC,KAAM,EACNK,MAAO,EAAKtE,MAAMiB,IAAIvB,MAAMuD,SAAS4B,YAAYP,MACjDhS,cAAe,EAAK0N,MAAMiB,IAAIvB,MAAMuD,SAAS4B,YAAYvS,cACzDod,YAAa,EAAK1P,MAAMiB,IAAIvB,MAAMuD,SAASkB,OAAOf,YAClDuM,UAAW,EACXhe,aAAc,EAAKqO,MAAMiB,IAAIvB,MAAMuD,SAASkB,OAAOxS,aACnD6C,GAAI,EAAKwL,MAAMiB,IAAIvB,MAAMuD,SAAS4C,YAAYf,GAC9CK,QAAS,EAAKnF,MAAMiB,IAAIvB,MAAMuD,SAAS4C,YAAYV,QACnDyK,YAAc,SACdnb,GAAI,EAAKuL,MAAMiB,IAAIvB,MAAMuD,SAAS4C,YAAYpR,GAC9CC,IAAK,EAAKsL,MAAMiB,IAAIvB,MAAMuD,SAAS4C,YAAYnR,IAC/CC,MAAO,EAAKqL,MAAMiB,IAAIvB,MAAMuD,SAAS4C,YAAYlR,MACjDkb,kBAAkB,EAClBC,WAAY,EAAK9P,MAAMiB,IAAIvB,MAAMuD,SAAS1M,QAAQvH,IAClD+gB,aAAc,EAAK/P,MAAMiB,IAAIvB,MAAMuD,SAAS1M,QAAQtH,MACpD+gB,YAAa,EAAKhQ,MAAMiB,IAAIvB,MAAMuD,SAAS1M,QAAQrH,KACnD+gB,QAAS,EAAKjQ,MAAMiB,IAAIvB,MAAMuD,SAASrL,KAAK5I,IAC5CkhB,UAAW,EAAKlQ,MAAMiB,IAAIvB,MAAMuD,SAASrL,KAAK3I,MAC9CkhB,SAAU,EAAKnQ,MAAMiB,IAAIvB,MAAMuD,SAASrL,KAAK1I,KAC7CkhB,YAAa,EAAKpQ,MAAMiB,IAAIvB,MAAMuD,SAAS3K,KAAKmO,QAChD4J,QAAS,EAAKrQ,MAAMiB,IAAIvB,MAAMuD,SAAS3K,KAAKtJ,IAC5CshB,UAAW,EAAKtQ,MAAMiB,IAAIvB,MAAMuD,SAAS3K,KAAKrJ,MAC9CshB,SAAU,EAAKvQ,MAAMiB,IAAIvB,MAAMuD,SAAS3K,KAAKpJ,KAC7CshB,qBAAsB,EAAKxQ,MAAMiB,IAAIvB,MAAMuD,SAAS2D,cAAcH,QAClEgK,wBAAyB,EAAKzQ,MAAMiB,IAAIvB,MAAMuD,SAAS2D,cAAc1N,WACrEwX,iBAAkB,EAAK1Q,MAAMiB,IAAIvB,MAAMuD,SAAS2D,cAAc5Y,WAAW,GACzE2iB,mBAAoB,EAAK3Q,MAAMiB,IAAIvB,MAAMuD,SAAS2D,cAAc5Y,WAAW,GAC3E4iB,kBAAmB,EAAK5Q,MAAMiB,IAAIvB,MAAMuD,SAAS2D,cAAc5Y,WAAW,GAC1E6iB,oBAAqB,EAAK7Q,MAAMiB,IAAIvB,MAAMuD,SAAS2D,cAAc3Y,SAAS,GAC1E6iB,sBAAuB,EAAK9Q,MAAMiB,IAAIvB,MAAMuD,SAAS2D,cAAc3Y,SAAS,GAC5E8iB,qBAAsB,EAAK/Q,MAAMiB,IAAIvB,MAAMuD,SAAS2D,cAAc3Y,SAAS,GAC3E+iB,YAAa,EAAKhR,MAAMiB,IAAIvB,MAAMuD,SAAS3J,KAAKmN,QAChDwK,QAAS,EAAKjR,MAAMiB,IAAIvB,MAAMuD,SAAS3J,KAAKtK,IAC5CkiB,UAAW,EAAKlR,MAAMiB,IAAIvB,MAAMuD,SAAS3J,KAAKrK,MAC9CkiB,SAAU,EAAKnR,MAAMiB,IAAIvB,MAAMuD,SAAS3J,KAAKpK,KAC7CkiB,eAAgB,EAAKpR,MAAMiB,IAAIvB,MAAMuD,SAASoO,OAAO9P,SACrD+P,iBAAkB,EAAKtR,MAAMiB,IAAIvB,MAAMuD,SAASoO,OAAO7P,WACvD+P,gBAAiB,EAAKvR,MAAMiB,IAAIvB,MAAMuD,SAASoO,OAAO5P,UACtD+P,aAAc,EAAKxR,MAAMiB,IAAIvB,MAAMuD,SAASoO,OAAO3P,OACnD+P,eAAgB,EAAKzR,MAAMiB,IAAIvB,MAAMuD,SAASoO,OAAO1P,SACrD+P,cAAe,EAAK1R,MAAMiB,IAAIvB,MAAMuD,SAASoO,OAAOzP,QACpD+P,UAAW,EAAK3R,MAAM2R,UACtBC,OAAQ,EAAK5R,MAAM4R,QAErB,EAAK1Q,KAAOhB,IAAMC,YAClB,EAAKc,IAAK,EAAKjB,MAAMiB,IACrB,EAAKgC,SAAW,EAAKjD,MAAMiD,SA3DX,E,oDA+DVxZ,I,uCACNooB,CAAYpoB,EAAGV,Q,iCAGNU,I,uCACTqoB,CAAeroB,EAAGV,Q,+BAGXU,I,uCACPsoB,CAAatoB,EAAGV,Q,iCAGPU,I,uCACTuoB,CAAevoB,EAAGV,Q,2BAGfU,I,uCACHwoB,CAASxoB,EAAGV,Q,+BAGLU,I,uCACPyoB,CAAazoB,EAAGV,Q,4BAGZU,I,uCACJ0oB,CAAU1oB,EAAEV,Q,iCAGHU,I,uCACT2oB,CAAe3oB,EAAGV,Q,qCAGLU,I,uCACb4oB,CAAmB5oB,EAAGV,Q,yCAGLU,I,uCACjB6oB,CAAuB7oB,EAAGV,Q,6BAGrBU,I,uCACL8oB,CAAW9oB,EAAGV,Q,+BAGPU,I,uCACP+oB,CAAa/oB,EAAGV,Q,0CAGEU,I,uCAClBgpB,CAAwBhpB,EAAGV,Q,uCAEZU,I,uCACfipB,CAAqBjpB,EAAGV,Q,mCAGbU,I,uCACXkpB,CAAiBlpB,EAAGV,Q,sCAGNU,I,uCACdmpB,CAAoBnpB,EAAGV,Q,oCAGXU,I,uCACZopB,CAAkBppB,EAAGV,Q,sCAGPU,I,uCACdqpB,CAAoBrpB,EAAGV,Q,qCAGVU,I,uCACbspB,CAAmBtpB,EAAGV,Q,iCAGbU,I,uCACTupB,CAAevpB,EAAGV,Q,mCAGPU,I,uCACXwpB,CAAiBxpB,EAAGV,Q,kCAGVU,I,uCACVypB,CAAgBzpB,EAAGV,Q,qCAGNU,I,uCACb0pB,CAAmB1pB,EAAGV,Q,iCAGbU,I,uCACT2pB,CAAe3pB,EAAGV,Q,mCAGPU,I,uCACX4pB,CAAiB5pB,EAAGV,Q,kCAGVU,I,uCACV6pB,CAAgB7pB,EAAGV,Q,qCAGNU,I,uCACb8pB,CAAmB9pB,EAAGV,Q,iCAGbU,I,uCACT+pB,CAAe/pB,EAAGV,Q,mCAGPU,I,uCACXgqB,CAAiBhqB,EAAGV,Q,kCAGVU,I,uCACViqB,CAAgBjqB,EAAGV,Q,wCAGHU,I,uCAChBkqB,CAAsBlqB,EAAGV,Q,0CAGPU,I,uCAClBmqB,CAAwBnqB,EAAGV,Q,yCAGVU,I,uCACjBoqB,CAAuBpqB,EAAGV,Q,sCAGZU,I,uCACdqqB,CAAoBrqB,EAAGV,Q,wCAGPU,I,uCAChBsqB,CAAsBtqB,EAAGV,Q,uCAGVU,I,uCACfuqB,CAAqBvqB,EAAGV,Q,6BAKnBkB,GACI,KAANA,GACDlB,KAAKsW,SAAS,CAACsS,WAAW,EAAOC,OAAQ3nB,IACzClB,KAAKkY,IAAI5B,SAAS,CAACsS,WAAW,EAAOC,OAAQ3nB,MAG7ClB,KAAKkY,IAAI5B,SAAS,CAACsS,WAAW,EAAMC,OAAQ3nB,IAC5ClB,KAAKsW,SAAS,CAACsS,WAAW,EAAMC,OAAQ3nB,O,+BAGnC,IAAD,OACJ,OAAO,yBAAKkgB,UAAY,cAExB,yBAAKA,UAAY,aACf,2BAAOA,UAAY,mBAAnB,2BACA,2BAAOjC,MAASnf,KAAK2W,MAAMkS,OAAQ/F,SAAY,SAAC5hB,GAAD,OAAO,EAAK2nB,OAAO3nB,EAAE+hB,OAAO9D,YAElD,IAAzBnf,KAAK2W,MAAMiS,YAAuF,IAAjE,mBAAmB3hB,QAAQjH,KAAK2W,MAAMkS,OAAOqC,iBAAqD,IAAzBlrB,KAAK2W,MAAMiS,UACtH,6BAAK,gDAAwB,yBAAKxH,UAAY,WACrC,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,MACNjC,IAAM,IACNkgB,KAAO,MACPpG,MAASnf,KAAK2W,MAAM+P,QACpB5D,SAAY,SAACC,GAAD,OAAU,EAAKoI,WAAWpI,EAAME,OAAO9D,QACnD6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,wDAA8Bzd,KAAK2W,MAAM+P,UAEzC,yBAAKtF,UAAY,WACjB,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,MACNjC,IAAM,IACNkgB,KAAO,MACPpG,MAAQnf,KAAK2W,MAAM8P,KACnB3D,SAAY,SAACC,GAAD,OAAU,EAAKqI,QAAQrI,EAAME,OAAO9D,QAChD6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,wDAA8Bzd,KAAK2W,MAAM8P,OAEzC,yBAAKrF,UAAY,WACjB,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,QACNjC,IAAM,IACN8Z,MAASnf,KAAK2W,MAAM2D,IACpBiL,KAAO,QACPzC,SAAY,SAACC,GAAD,OAAU,EAAKsI,WAAWtI,EAAME,OAAO9D,QACnD6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,uDAA6Bzd,KAAK2W,MAAM2D,MAExC,yBAAK8G,UAAY,WACjB,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,MACNjC,IAAM,IACNkgB,KAAO,MACPpG,MAASnf,KAAK2W,MAAMpP,MACpBub,SAAY,SAACC,GAAD,OAAU,EAAKuI,SAASvI,EAAME,OAAO9D,QACjD6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,wDAA8Bzd,KAAK2W,MAAMpP,QAEzC,yBAAK6Z,UAAY,WACjB,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAK2W,MAAMgQ,YACpBpB,KAAO,MACPzC,SAAY,SAACC,GAAD,OAAU,EAAKwI,KAAKxI,EAAME,OAAO9D,QAC7C6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,0DAAgCzd,KAAK2W,MAAMgQ,YAA3C,MAEA,yBAAKvF,UAAY,WACjB,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,IACN8Z,MAASnf,KAAK2W,MAAM/N,aACpB2c,KAAO,IACPzC,SAAY,SAACC,GAAD,OAAU,EAAKyI,gBAAgBzI,EAAME,OAAO9D,QACxD6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,6CAA+C,IAA5Bzd,KAAK2W,MAAM/N,aAAoB,aAAc,qBAG9D,sCACuB,IAAzB5I,KAAK2W,MAAMiS,YAA2F,IAArE,uBAAuB3hB,QAAQjH,KAAK2W,MAAMkS,OAAOqC,iBAAqD,IAAzBlrB,KAAK2W,MAAMiS,UAC1H,6BAAK,mDACN,yBAAKxH,UAAY,cACf,yBAAKA,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,MACNjC,IAAM,IACNkgB,KAAO,MACPpG,MAASnf,KAAK2W,MAAM4E,MACpBuH,SAAY,SAACC,GAAD,OAAU,EAAK0I,SAAS1I,EAAME,OAAO9D,QACjD6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,gEAAsCzd,KAAK2W,MAAM4E,QAEnD,yBAAK6F,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,IACN8Z,MAAsC,gBAA7Bnf,KAAK2W,MAAMpN,cAAgC,EAA+B,WAA7BvJ,KAAK2W,MAAMpN,cAA2B,EAAE,EAC9Fgc,KAAO,IACPzC,SAAY,SAACC,GAAD,OAAU,EAAK2I,iBAAiB3I,EAAME,OAAO9D,QACzD6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,wDAA8Bzd,KAAK2W,MAAMpN,eACzC,2BAAO6X,UAAY,SACnBiE,KAAO,QACP/d,IAAM,QACNjC,IAAM,IACN8Z,MAASnf,KAAK2W,MAAM2D,IACpBiL,KAAO,QACPzC,SAAY,SAACC,GAAD,OAAU,EAAKsI,WAAWtI,EAAME,OAAO9D,QACnD6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,uDAA6Bzd,KAAK2W,MAAM2D,QAI1C,sCACuB,IAAzBta,KAAK2W,MAAMiS,YAAkF,IAA5D,cAAc3hB,QAAQjH,KAAK2W,MAAMkS,OAAOqC,iBAAqD,IAAzBlrB,KAAK2W,MAAMiS,UACjH,6BAAK,4CACN,yBAAKxH,UAAY,cACb,yBAAKA,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,MACNjC,IAAM,MACNkgB,KAAO,MACPpG,MAASnf,KAAK2W,MAAMlL,GACpBqX,SAAY,SAACC,GAAD,OAAW,EAAK4I,MAAM5I,EAAME,OAAO9D,QAC/C6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,uDAA6Bzd,KAAK2W,MAAMlL,KAE1C,yBAAK2V,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,IACNkgB,KAAO,IACPpG,OAAgC,IAAvBnf,KAAK2W,MAAMyF,QAAkB,EAAE,EACxC0G,SAAY,SAACC,GAAD,OAAW,EAAK6I,WAAW7I,EAAME,OAAO9D,QACpD6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,6CAAyC,IAAvBzd,KAAK2W,MAAMyF,QAAkB,KAAM,QAEvD,yBAAKgF,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,KACNkgB,KAAO,MACPpG,MAASnf,KAAK2W,MAAMjL,GACpBoX,SAAY,SAACC,GAAD,OAAW,EAAK8I,mBAAmB9I,EAAME,OAAO9D,QAC5D6C,SAAYhiB,KAAK2W,MAAM8G,UAAazd,KAAK2W,MAAMyF,UAE/C,qDAA2Bpc,KAAK2W,MAAMjL,KAExC,yBAAK0V,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,MACNjC,IAAM,IACNkgB,KAAO,MACPpG,MAASnf,KAAK2W,MAAMhL,IACpBmX,SAAY,SAACC,GAAD,OAAW,EAAK+I,OAAO/I,EAAME,OAAO9D,QAChD6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,qDAA2Bzd,KAAK2W,MAAMhL,MAExC,yBAAKyV,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,KACNkgB,KAAO,MACPpG,MAASnf,KAAK2W,MAAM/K,MACpBkX,SAAY,SAACC,GAAD,OAAW,EAAKgJ,SAAShJ,EAAME,OAAO9D,QAClD6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,oDAA0Bzd,KAAK2W,MAAM/K,QAEvC,yBAAKwV,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,IACNkgB,KAAO,IACPpG,OAAyC,IAAhCnf,KAAK2W,MAAMmQ,iBAA2B,IAAI,IACnDhE,SAAY,SAACC,GAAD,OAAW,EAAKiJ,oBAAoBjJ,EAAME,OAAO9D,QAC7D6C,UAAY,IAEZ,mDAAwD,IAAhChiB,KAAK2W,MAAMmQ,iBAA2B,KAAM,UAIvE,0CACyB,IAAzB9mB,KAAK2W,MAAMiS,YAAuF,IAAjE,mBAAmB3hB,QAAQjH,KAAK2W,MAAMkS,OAAOqC,iBAAqD,IAAzBlrB,KAAK2W,MAAMiS,UACvH,6BAAK,+CACN,yBAAKxH,UAAY,cACb,yBAAKA,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,MACNjC,IAAM,MACNkgB,KAAO,MACPpG,MAASnf,KAAK2W,MAAMlL,GACpBqX,SAAY,SAACC,GAAD,OAAW,EAAK4I,MAAM5I,EAAME,OAAO9D,QAC/C6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,uDAA6Bzd,KAAK2W,MAAMlL,KAE1C,yBAAK2V,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,IACNkgB,KAAO,IACPpG,OAAgC,IAAvBnf,KAAK2W,MAAMyF,QAAkB,EAAE,EACxC0G,SAAY,SAACC,GAAD,OAAW,EAAK6I,WAAW7I,EAAME,OAAO9D,QACpD6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,6CAAyC,IAAvBzd,KAAK2W,MAAMyF,QAAkB,KAAM,QAEvD,yBAAKgF,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,KACNkgB,KAAO,MACPpG,MAASnf,KAAK2W,MAAMjL,GACpBoX,SAAY,SAACC,GAAD,OAAW,EAAK8I,mBAAmB9I,EAAME,OAAO9D,QAC5D6C,SAAYhiB,KAAK2W,MAAM8G,UAAazd,KAAK2W,MAAMyF,UAE/C,qDAA2Bpc,KAAK2W,MAAMjL,KAExC,yBAAK0V,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,MACNjC,IAAM,IACNkgB,KAAO,MACPpG,MAASnf,KAAK2W,MAAMhL,IACpBmX,SAAY,SAACC,GAAD,OAAW,EAAK+I,OAAO/I,EAAME,OAAO9D,QAChD6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,qDAA2Bzd,KAAK2W,MAAMhL,MAExC,yBAAKyV,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,KACNkgB,KAAO,MACPpG,MAASnf,KAAK2W,MAAM/K,MACpBkX,SAAY,SAACC,GAAD,OAAW,EAAKgJ,SAAShJ,EAAME,OAAO9D,QAClD6C,SAAYhiB,KAAK2W,MAAM8G,UAEvB,oDAA0Bzd,KAAK2W,MAAM/K,QAEvC,yBAAKwV,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,IACNkgB,KAAO,IACPpG,OAAyC,IAAhCnf,KAAK2W,MAAMmQ,iBAA2B,IAAI,IACnDhE,SAAY,SAACC,GAAD,OAAW,EAAKiJ,oBAAoBjJ,EAAME,OAAO9D,QAC7D6C,UAAY,IAEZ,mDAAwD,IAAhChiB,KAAK2W,MAAMmQ,iBAA2B,KAAM,UAKvE,sCACyB,IAAzB9mB,KAAK2W,MAAMiS,YAA0F,IAApE,sBAAsB3hB,QAAQjH,KAAK2W,MAAMkS,OAAOqC,iBAAqD,IAAzBlrB,KAAK2W,MAAMiS,UAC1H,iCAAM,oDACP,4BACAtR,OAAUtX,KAAK2W,MAAMW,OACrBD,MAASrX,KAAK2W,MAAMU,MACpBgK,MAAS,CAAC0E,gBAAiBpY,GAAW,CAAC3N,KAAK2W,MAAMoQ,WAAY/mB,KAAK2W,MAAMqQ,aAC/DhnB,KAAK2W,MAAMsQ,eACrB7F,UAAY,gBACZ,yBAAKA,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAAS1M,QAAQvH,IACzC6c,SAAY,SAAC5hB,GAAD,OAAO,EAAK+qB,cAAc/qB,EAAE+hB,OAAO9D,QAC/CoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,wCAAczd,KAAKkY,IAAIvB,MAAMuD,SAAS1M,QAAQvH,MAEhD,yBAAKmb,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAAS1M,QAAQtH,MACzC4c,SAAY,SAAC5hB,GAAD,OAAO,EAAKgrB,gBAAgBhrB,EAAE+hB,OAAO9D,QACjDoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,0CAAgBzd,KAAKkY,IAAIvB,MAAMuD,SAAS1M,QAAQtH,MAAhD,MAEF,yBAAKkb,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAAS1M,QAAQrH,KACzC2c,SAAY,SAAC5hB,GAAD,OAAO,EAAKirB,eAAejrB,EAAE+hB,OAAO9D,QAChDoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,yCAAezd,KAAKkY,IAAIvB,MAAMuD,SAAS1M,QAAQrH,KAA/C,OAGA,sCAEyB,IAAzBnG,KAAK2W,MAAMiS,YAAuF,IAAjE,mBAAmB3hB,QAAQjH,KAAK2W,MAAMkS,OAAOqC,iBAAqD,IAAzBlrB,KAAK2W,MAAMiS,UACvH,iCAAM,iDACP,4BACAtR,OAAUtX,KAAK2W,MAAMW,OACrBD,MAASrX,KAAK2W,MAAMU,MACpBgK,MAAS,CAAC0E,gBAAiBpY,GAAW,CAAC3N,KAAK2W,MAAMuQ,QAASlnB,KAAK2W,MAAMwQ,UAC5DnnB,KAAK2W,MAAMyQ,YACrBhG,UAAY,gBACZ,yBAAKA,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAASrL,KAAK5I,IACtC6c,SAAY,SAAC5hB,GAAD,OAAO,EAAKkrB,WAAWlrB,EAAE+hB,OAAO9D,QAC5CoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,wCAAczd,KAAKkY,IAAIvB,MAAMuD,SAASrL,KAAK5I,IAA3C,MAEF,yBAAKmb,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACNyd,SAAY,SAAC5hB,GAAD,OAAO,EAAKmrB,aAAanrB,EAAE+hB,OAAO9D,QAC9CA,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAASrL,KAAK3I,MACtCqf,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,0CAAgBzd,KAAKkY,IAAIvB,MAAMuD,SAASrL,KAAK3I,MAA7C,MAEF,yBAAKkb,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACNyd,SAAY,SAAC5hB,GAAD,OAAO,EAAKorB,YAAYprB,EAAE+hB,OAAO9D,QAC7CA,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAASrL,KAAK1I,KACtCof,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,yCAAezd,KAAKkY,IAAIvB,MAAMuD,SAASrL,KAAK1I,KAA5C,OAGA,sCAEyB,IAAzBnG,KAAK2W,MAAMiS,YAA4E,IAAtD,QAAQ3hB,QAAQjH,KAAK2W,MAAMkS,OAAOqC,iBAAqD,IAAzBlrB,KAAK2W,MAAMiS,UAC5G,kCAAO,sCACR,4BACAtR,OAAUtX,KAAK2W,MAAMW,OACrBD,MAASrX,KAAK2W,MAAMU,MACpBgK,MAAS,CAAC0E,gBAAiBpY,GAAW,CAAC3N,KAAK2W,MAAM2Q,QAAStnB,KAAK2W,MAAM4Q,UAC5DvnB,KAAK2W,MAAM6Q,YACrBpG,UAAY,gBACZ,yBAAKA,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,KACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAAS3K,KAAKmO,QACtCoF,SAAY,SAAC5hB,GAAD,OAAO,EAAKqrB,eAAerrB,EAAE+hB,OAAO9D,QAChDoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,6CAAmBzd,KAAKkY,IAAIvB,MAAMuD,SAAS3K,KAAKmO,UAElD,yBAAK0D,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAAS3K,KAAKtJ,IACtC6c,SAAY,SAAC5hB,GAAD,OAAO,EAAKsrB,WAAWtrB,EAAE+hB,OAAO9D,QAC5CoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,wCAAczd,KAAKkY,IAAIvB,MAAMuD,SAAS3K,KAAKtJ,IAA3C,MAEF,yBAAKmb,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAAS3K,KAAKrJ,MACtC4c,SAAY,SAAC5hB,GAAD,OAAO,EAAKurB,aAAavrB,EAAE+hB,OAAO9D,QAC9CoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,0CAAgBzd,KAAKkY,IAAIvB,MAAMuD,SAAS3K,KAAKrJ,QAE/C,yBAAKkb,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAAS3K,KAAKpJ,KACtC2c,SAAY,SAAC5hB,GAAD,OAAO,EAAKwrB,YAAYxrB,EAAE+hB,OAAO9D,QAC7CoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,yCAAezd,KAAKkY,IAAIvB,MAAMuD,SAAS3K,KAAKpJ,KAA5C,OAGA,sCAEyB,IAAzBnG,KAAK2W,MAAMiS,YAA4E,IAAtD,QAAQ3hB,QAAQjH,KAAK2W,MAAMkS,OAAOqC,iBAAqD,IAAzBlrB,KAAK2W,MAAMiS,UAC5G,iCAAM,sCACP,4BACAtR,OAAUtX,KAAK2W,MAAMW,OACrBD,MAASrX,KAAK2W,MAAMU,MACpBgK,MAAS,CAAC0E,gBAAiBpY,GAAW,CAAC3N,KAAK2W,MAAMuR,QAASloB,KAAK2W,MAAMwR,UAC5DnoB,KAAK2W,MAAMyR,YACrBhH,UAAY,gBACZ,yBAAKA,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,KACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAAS3J,KAAKmN,QACtCoF,SAAY,SAAC5hB,GAAD,OAAO,EAAKyrB,eAAezrB,EAAE+hB,OAAO9D,QAChDoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,6CAAmBzd,KAAKkY,IAAIvB,MAAMuD,SAAS3J,KAAKmN,UAElD,yBAAK0D,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAAS3J,KAAKtK,IACtC6c,SAAY,SAAC5hB,GAAD,OAAO,EAAK0rB,WAAW1rB,EAAE+hB,OAAO9D,QAC5CoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,wCAAczd,KAAKkY,IAAIvB,MAAMuD,SAAS3J,KAAKtK,IAA3C,MAEF,yBAAKmb,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAAS3J,KAAKrK,MACtC4c,SAAY,SAAC5hB,GAAD,OAAO,EAAK2rB,aAAa3rB,EAAE+hB,OAAO9D,QAC9CoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,0CAAgBzd,KAAKkY,IAAIvB,MAAMuD,SAAS3J,KAAKrK,MAA7C,MAEF,yBAAKkb,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAAS3J,KAAKpK,KACtC2c,SAAY,SAAC5hB,GAAD,OAAO,EAAK4rB,YAAY5rB,EAAE+hB,OAAO9D,QAC7CoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,yCAAezd,KAAKkY,IAAIvB,MAAMuD,SAAS3J,KAAKpK,KAA5C,OAGA,sCAEyB,IAAzBnG,KAAK2W,MAAMiS,YAAgG,IAA1E,4BAA4B3hB,QAAQjH,KAAK2W,MAAMkS,OAAOqC,iBAAqD,IAAzBlrB,KAAK2W,MAAMiS,UAChI,iCAAM,0DACP,yBAAKxH,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,KACNkgB,KAAO,IACPpG,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAcH,QAC/CsE,SAAYhiB,KAAK2W,MAAM8G,UAEvB,6CAAmBzd,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAcH,QAAzD,OAEF,yBAAK0D,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACNkgB,KAAO,IACPpG,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc7N,YAC/CgS,SAAYhiB,KAAK2W,MAAM8G,UAEvB,wDAA8Bzd,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc7N,cAEtE,yBAAKoR,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,SACNjC,IAAM,MACNkgB,KAAO,SACPpG,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc1N,WAC/C6R,SAAYhiB,KAAK2W,MAAM8G,UAEvB,+CAAqBzd,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc1N,aAE7D,4BACAmH,OAAUtX,KAAK2W,MAAMW,OACrBD,MAASrX,KAAK2W,MAAMU,MACpBgK,MAAS,CAAC0E,gBAAiBpY,GAAW,CAAC3N,KAAK2W,MAAMgR,iBAAkB3nB,KAAK2W,MAAMiR,mBACrE5nB,KAAK2W,MAAMkR,qBACrBzG,UAAY,gBACZ,uBAAGC,MAAO,CAAC0L,SAAU,KAArB,4BACA,yBAAK3L,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACNkgB,KAAO,IACPpG,MAAUnf,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc5Y,WAAW,GAC3D+c,SAAYhiB,KAAK2W,MAAM8G,UAEvB,wCAAczd,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc5Y,WAAW,KAEjE,yBAAKmc,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACNkgB,KAAO,IACPpG,MAAUnf,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc5Y,WAAW,GAC3D+c,SAAYhiB,KAAK2W,MAAM8G,UAEvB,0CAAgBzd,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc5Y,WAAW,KAEnE,yBAAKmc,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACNkgB,KAAO,IACPpG,MAAUnf,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc5Y,WAAW,GAC3D+c,SAAYhiB,KAAK2W,MAAM8G,UAEvB,yCAAezd,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc5Y,WAAW,KAElE,4BACAqS,OAAUtX,KAAK2W,MAAMW,OACrBD,MAASrX,KAAK2W,MAAMU,MACpBgK,MAAS,CAAC0E,gBAAiBpY,GAAW,CAAC3N,KAAK2W,MAAMmR,oBAAqB9nB,KAAK2W,MAAMoR,sBACxE/nB,KAAK2W,MAAMqR,wBACrB5G,UAAY,gBACZ,uBAAGC,MAAO,CAAC0L,SAAU,KAArB,0BACA,yBAAK3L,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACNkgB,KAAO,IACPpG,MAAUnf,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc3Y,SAAS,GACzD8c,SAAYhiB,KAAK2W,MAAM8G,UAEvB,wCAAczd,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc3Y,SAAS,KAE/D,yBAAKkc,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACNkgB,KAAO,IACPpG,MAAUnf,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc3Y,SAAS,GACzD8c,SAAYhiB,KAAK2W,MAAM8G,UAEvB,0CAAgBzd,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc3Y,SAAS,KAEjE,yBAAKkc,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACNkgB,KAAO,IACPpG,MAAUnf,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc3Y,SAAS,GACzD8c,SAAYhiB,KAAK2W,MAAM8G,UAEvB,yCAAezd,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc3Y,SAAS,MAG9D,sCAIyB,IAAzBlF,KAAK2W,MAAMiS,YAAsF,IAAhE,kBAAkB3hB,QAAQjH,KAAK2W,MAAMkS,OAAOqC,iBAAqD,IAAzBlrB,KAAK2W,MAAMiS,UACtH,iCAAM,gDACP,4BACAtR,OAAUtX,KAAK2W,MAAMW,OACrBD,MAASrX,KAAK2W,MAAMU,MACpBgK,MAAS,CAAC0E,gBAAiBpY,GAAW,CAAC3N,KAAK2W,MAAM0R,eAAgBroB,KAAK2W,MAAM4R,iBACnEvoB,KAAK2W,MAAM6R,mBACrBpH,UAAY,gBACZ,yBAAKA,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAASoO,OAAO9P,SACxCsK,SAAY,SAAC5hB,GAAD,OAAO,EAAK8rB,kBAAkB9rB,EAAE+hB,OAAO9D,QACnDoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,8CAAoBzd,KAAKkY,IAAIvB,MAAMuD,SAASoO,OAAO9P,WAErD,yBAAK4I,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAASoO,OAAO7P,WACxCqK,SAAY,SAAC5hB,GAAD,OAAO,EAAK+rB,oBAAoB/rB,EAAE+hB,OAAO9D,QACrDoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,gDAAsBzd,KAAKkY,IAAIvB,MAAMuD,SAASoO,OAAO7P,aAEvD,yBAAK2I,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAASoO,OAAO5P,UACxCoK,SAAY,SAAC5hB,GAAD,OAAO,EAAKgsB,mBAAmBhsB,EAAE+hB,OAAO9D,QACpDoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,+CAAqBzd,KAAKkY,IAAIvB,MAAMuD,SAASoO,OAAO5P,UAApD,MAEF,4BACApB,OAAUtX,KAAK2W,MAAMW,OACrBD,MAASrX,KAAK2W,MAAMU,MACpBgK,MAAS,CAAC0E,gBAAiBpY,GAAW,CAAC3N,KAAK2W,MAAM8R,aAAczoB,KAAK2W,MAAM+R,eACjE1oB,KAAK2W,MAAMgS,iBACrBvH,UAAY,gBACZ,yBAAKA,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAASoO,OAAO3P,OACxCmK,SAAY,SAAC5hB,GAAD,OAAO,EAAKisB,gBAAgBjsB,EAAE+hB,OAAO9D,QACjDoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,4CAAkBzd,KAAKkY,IAAIvB,MAAMuD,SAASoO,OAAO3P,OAAjD,MAEF,yBAAKyI,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAASoO,OAAO1P,SACxCkK,SAAY,SAAC5hB,GAAD,OAAO,EAAKksB,kBAAkBlsB,EAAE+hB,OAAO9D,QACnDoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,8CAAoBzd,KAAKkY,IAAIvB,MAAMuD,SAASoO,OAAO1P,WAErD,yBAAKwI,UAAY,WACf,2BAAOA,UAAY,SACnBiE,KAAO,QACP/d,IAAM,IACNjC,IAAM,MACN8Z,MAASnf,KAAKkY,IAAIvB,MAAMuD,SAASoO,OAAOzP,QACxCiK,SAAY,SAAC5hB,GAAD,OAAO,EAAKmsB,iBAAiBnsB,EAAE+hB,OAAO9D,QAClDoG,KAAO,IACPvD,SAAYhiB,KAAK2W,MAAM8G,UAEvB,6CAAmBzd,KAAKkY,IAAIvB,MAAMuD,SAASoO,OAAOzP,WAGlD,0C,GAr5ByB1B,IAAMsM,W,SA85BzB6J,G,mFAAf,WAA+BpV,EAAKhC,GAApC,SAAA9J,EAAA,sEACQ8L,EAAI5B,SAAS,CAAC4D,SAAU,CAC5BkB,OAAQ,CAACb,GAAIrE,EAAKS,MAAM+P,QAASjb,GAAIyK,EAAKS,MAAM8P,KAAMnM,IAAKpE,EAAKS,MAAM2D,IAC9D/S,MAAO2O,EAAKS,MAAMpP,MAAO8S,YAAanE,EAAKS,MAAMgQ,YACjD/d,aAAcsN,EAAKS,MAAM/N,cACjCkT,YAAa,CAACP,MAAOrF,EAAKS,MAAM4E,MACxBhS,cAAe2M,EAAKS,MAAMpN,cAAe+Q,IAAKpE,EAAKS,MAAM2D,KACjEwC,YAAa,CAACf,GAAI7F,EAAKS,MAAMlL,GAAI2Q,QAASlG,EAAKS,MAAMyF,QACvCyK,YAAa3Q,EAAKS,MAAMkQ,YAAanb,GAAIwK,EAAKS,MAAMjL,GACpDC,IAAKuK,EAAKS,MAAMhL,IAAKC,MAAOsK,EAAKS,MAAM/K,MACvCkb,iBAAkB5Q,EAAKS,MAAMmQ,kBAC3C9J,iBAAkB,CAACjB,GAAI7F,EAAKS,MAAMlL,GAAI2Q,QAASlG,EAAKS,MAAMyF,QAC5CyK,YAAa3Q,EAAKS,MAAMkQ,YAAanb,GAAIwK,EAAKS,MAAMjL,GACpDC,IAAKuK,EAAKS,MAAMhL,IAAKC,MAAOsK,EAAKS,MAAM/K,MACvCkb,iBAAkB5Q,EAAKS,MAAMmQ,kBAC3CtZ,QAAS,CAACvH,IAAKiQ,EAAKS,MAAMoQ,WAChB7gB,MAAOgQ,EAAKS,MAAMqQ,aAClB7gB,KAAM+P,EAAKS,MAAMsQ,aAC3BpY,KAAM,CAAC5I,IAAKiQ,EAAKS,MAAMuQ,QACjBhhB,MAAOgQ,EAAKS,MAAMwQ,UAClBhhB,KAAM+P,EAAKS,MAAMyQ,UACvB7X,KAAM,CAACmO,QAASxH,EAAKS,MAAM0Q,YACrBphB,IAAKiQ,EAAKS,MAAM2Q,QAChBphB,MAAOgQ,EAAKS,MAAM4Q,UAClBphB,KAAM+P,EAAKS,MAAM6Q,UACvBjX,KAAM,CAACmN,QAASxH,EAAKS,MAAMsR,YACrBhiB,IAAKiQ,EAAKS,MAAMuR,QAChBhiB,MAAOgQ,EAAKS,MAAMwR,UAClBhiB,KAAM+P,EAAKS,MAAMyR,UACvBE,OAAO,CAAC9P,SAAUtC,EAAKS,MAAM0R,eACrB5P,WAAYvC,EAAKS,MAAM4R,iBACvB7P,UAAWxC,EAAKS,MAAM6R,gBACtB7P,OAAQzC,EAAKS,MAAM8R,aACnB7P,SAAU1C,EAAKS,MAAM+R,eACrB7P,QAAS3C,EAAKS,MAAMgS,kBAlChC,4C,oEAuCA,WAAiCjoB,EAAGwV,GAApC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAACyQ,WAAY5H,IAFnC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAAmCxV,EAAGwV,GAAtC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAAC0Q,aAAc7H,IAFrC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAAkCxV,EAAGwV,GAArC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAAC2Q,YAAa9H,IAFpC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAA8BxV,EAAGwV,GAAjC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAAC4Q,QAAS/H,IAFhC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAAgCxV,EAAGwV,GAAnC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAAC6Q,UAAWhI,IAFlC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAA+BxV,EAAGwV,GAAlC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAAC8Q,SAAUjI,IAFjC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAAkCxV,EAAGwV,GAArC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAAC+Q,YAAalI,IAFpC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAA8BxV,EAAGwV,GAAjC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAACgR,QAASnI,IAFhC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAAgCxV,EAAGwV,GAAnC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAACiR,UAAWpI,IAFlC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAA+BxV,EAAGwV,GAAlC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAACkR,SAAUrI,IAFjC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAAkCxV,EAAGwV,GAArC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAAC2R,YAAa9I,IAFpC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAA8BxV,EAAGwV,GAAjC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAAC4R,QAAS/I,IAFhC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAAgCxV,EAAGwV,GAAnC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAAC6R,UAAWhJ,IAFlC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAA+BxV,EAAGwV,GAAlC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAAC8R,SAAUjJ,IAFjC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAAqCxV,EAAGwV,GAAxC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAAC+R,eAAgBlJ,IAFvC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAAuCxV,EAAGwV,GAA1C,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAACiS,iBAAkBpJ,IAFzC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAAsCxV,EAAGwV,GAAzC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAACkS,gBAAiBrJ,IAFxC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAKA,WAAmCxV,EAAGwV,GAAtC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAACmS,aAActJ,IAFrC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAAqCxV,EAAGwV,GAAxC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAACoS,eAAgBvJ,IAFvC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAAoCxV,EAAGwV,GAAvC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAACqS,cAAexJ,IAFtC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAA2BxV,EAAGwV,GAA9B,eAAA9J,EAAA,6DACQ+S,EAAQpM,WAAWrS,GAD3B,SAEQwV,EAAKI,SAAS,CAACmQ,KAAKtH,IAF5B,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAA8BxV,EAAGwV,GAAjC,eAAA9J,EAAA,6DACQ+S,EAAQpM,WAAWrS,GAD3B,SAEQwV,EAAKI,SAAS,CAACoQ,QAAQvH,IAF/B,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAA4BxV,EAAGwV,GAA/B,eAAA9J,EAAA,6DACQ+S,EAAQpM,WAAWrS,GAD3B,SAEQwV,EAAKI,SAAS,CAAC/O,MAAM4X,IAF7B,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAA8BxV,EAAGwV,GAAjC,eAAA9J,EAAA,6DACQ+S,EAAQpM,WAAWrS,GAD3B,SAEQwV,EAAKI,SAAS,CAACgE,IAAI6E,IAF3B,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAAwBxV,EAAGwV,GAA3B,eAAA9J,EAAA,6DACQ+S,EAAQpM,WAAWrS,GAD3B,SAEQwV,EAAKI,SAAS,CAACqQ,YAAaxH,IAFpC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAA4BxV,EAAGwV,GAA/B,eAAA9J,EAAA,6DACQ+S,EAAQpM,WAAWrS,GAD3B,SAEQwV,EAAKI,SAAS,CAACiF,MAAM4D,IAF7B,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAAyBxV,EAAGwV,GAA5B,eAAA9J,EAAA,6DACQ+S,EAAQpM,WAAWrS,GAD3B,SAEQwV,EAAKI,SAAS,CAAC7K,GAAI0T,IAF3B,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAA8BxV,EAAGwV,GAAjC,eAAA9J,EAAA,yDAEe,KADP+S,EAAQlM,SAASvS,IADzB,gCAEwBwV,EAAKI,SAAS,CAAC8F,SAAQ,IAF/C,UAGe,IAAV+C,EAHL,gCAGwBjJ,EAAKI,SAAS,CAAC8F,SAAS,IAHhD,OAIEkR,GAAgBpX,EAAKgC,IAAKhC,GAJ5B,4C,oEAOA,WAAkCxV,EAAGwV,GAArC,eAAA9J,EAAA,yDAEe,KADP+S,EAAQlM,SAASvS,IADzB,gCAEwBwV,EAAKI,SAAS,CAACuQ,YAAa,WAFpD,UAGe,IAAV1H,EAHL,gCAGwBjJ,EAAKI,SAAS,CAACuQ,YAAa,WAHpD,OAIEyG,GAAgBpX,EAAKgC,IAAKhC,GAJ5B,4C,oEAOA,WAAsCxV,EAAGwV,GAAzC,eAAA9J,EAAA,6DACQ+S,EAAQpM,WAAWrS,GAD3B,SAEQwV,EAAKI,SAAS,CAAC5K,GAAIyT,IAF3B,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAA0BxV,EAAGwV,GAA7B,eAAA9J,EAAA,6DACQ+S,EAAQpM,WAAWrS,GAD3B,SAEQwV,EAAKI,SAAS,CAAC3K,IAAIwT,IAF3B,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAA4BxV,EAAGwV,GAA/B,eAAA9J,EAAA,6DACQ+S,EAAQpM,WAAWrS,GAD3B,SAEQwV,EAAKI,SAAS,CAAC1K,MAAMuT,IAF7B,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAAuCxV,EAAGwV,GAA1C,eAAA9J,EAAA,yDAEe,KADP+S,EAAQlM,SAASvS,IADzB,gCAEwBwV,EAAKI,SAAS,CAACwQ,kBAAiB,IAFxD,UAGe,IAAV3H,EAHL,gCAGwBjJ,EAAKI,SAAS,CAACwQ,kBAAkB,IAHzD,OAIEwG,GAAgBpX,EAAKgC,IAAKhC,GAJ5B,4C,oEAMA,WAAoCxV,EAAGwV,GAAvC,eAAA9J,EAAA,yDAEa,KADL+S,EAAQlM,SAASvS,IADzB,gCAEsBwV,EAAKI,SAAS,CAAC/M,cAAe,gBAFpD,UAGa,IAAR4V,EAHL,gCAGsBjJ,EAAKI,SAAS,CAAC/M,cAAe,WAHpD,UAIa,IAAR4V,EAJL,kCAIsBjJ,EAAKI,SAAS,CAAC/M,cAAe,gBAJpD,WAKa,IAAR4V,EALL,kCAKsBjJ,EAAKI,SAAS,CAAC/M,cAAe,SALpD,QAME+jB,GAAgBpX,EAAKgC,IAAKhC,GAN5B,6C,oEASA,WAAgCxV,EAAGwV,GAAnC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAACsQ,UAAWzH,IAFlC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,oEAMA,WAAmCxV,EAAGwV,GAAtC,eAAA9J,EAAA,6DACQ+S,EAAQlM,SAASvS,GADzB,SAEQwV,EAAKI,SAAS,CAAC1N,aAAeuW,IAFtC,OAGEmO,GAAgBpX,EAAKgC,IAAKhC,GAH5B,4C,sBAMA,SAASvI,GAAWvN,GAClB,MAAO,OAASA,EAAM,GAAK,IAAMA,EAAM,GAAK,IAAMA,EAAM,GAAK,I,UChoChDmtB,G,kDAhCb,WAAYtW,GAAO,IAAD,8BAChB,cAAMA,IACDN,MAAQ,CACXyN,MAAM,GAER,EAAKlM,IAAM,EAAKjB,MAAMiB,IACtB,EAAKsV,WAAarW,IAAMC,YANR,E,oDASV1W,GACNV,KAAKsW,SAAS,CAAC8N,KAAK1jB,M,+BAIb,IAAD,OACN,OAAO,6BACG,kBAAC,KAAD,CACAwkB,OAAUllB,KAAK2W,MAAMyN,KACrBe,eAAkB,kBAAM,EAAKtB,SAAQ,IACrCzC,UAAY,oBACZgE,iBAAmB,4BACjB,kBAAC,GAAD,CACCwD,UAAa5oB,KAAKkY,IAAIvB,MAAMiS,UAC5BC,OAAU7oB,KAAKkY,IAAIvB,MAAMkS,OACzB3O,SAAYla,KACZuhB,IAAMvhB,KAAKwtB,WACXtV,IAAOlY,KAAKkY,Y,GA3BUf,IAAMsM,W,MCF7CgK,KAAMC,cAAc,S,IAmDLC,G,kDAhDb,WAAY1W,GAAO,IAAD,8BAChB,cAAMA,IACDN,MAAQ,CACXyN,MAAM,EACNwJ,SAAU,IAJI,E,oDASVltB,GACNV,KAAKsW,SAAS,CAAC8N,KAAK1jB,M,gCAGZQ,GACRoD,QAAQC,IAAIrD,GACZA,EAAE2sB,mB,kCAGQ3sB,GACVlB,KAAKsW,SAAS,CAACsX,SAAU1sB,EAAE+hB,OAAO6K,MAAM,GAAGtI,S,+BAGpC,IAAD,OACN,OAAO,6BACG,kBAAC,KAAD,CAAON,OAAUllB,KAAK2W,MAAMyN,KAC1Be,eAAkB,kBAAM,EAAKtB,SAAQ,IACrCzC,UAAY,SACZgE,iBAAmB,iBAEjB,uEACA,2FACA,6HAEA,yBAAKhE,UAAY,aACf,0BAAM2M,SAAY,SAAC7sB,GAAD,OAAO,EAAK8sB,UAAU9sB,KACtC,2BACC4hB,SAAY,SAAC5hB,GAAD,OAAO,EAAK+sB,YAAY/sB,IACpCmkB,KAAO,OACP/F,GAAK,SACLkG,KAAO,aACR,2BAAOH,KAAO,mB,GAzCTlO,IAAMsM,WCqClByK,I,wDAtCb,WAAYjX,GAAO,IAAD,8BAChB,cAAMA,IACDN,MAAQ,CACXyN,MAAM,EACN+J,SAAS,GAEX,EAAKlf,OAAS,EAAKgI,MAAMhI,OACzB,EAAKmf,IAAM,EAAKnX,MAAMmX,IAPN,E,gGAWD1tB,G,iFACTV,KAAKsW,SAAS,CAAC6X,QAASztB,I,OAC9BV,KAAKsW,SAAS,CAAC8N,MAAK,KACX,IAAN1jB,GAAYV,KAAKiX,MAAMoX,QAAQruB,KAAKiP,Q,qIAEjCvO,GACNV,KAAKsW,SAAS,CAAC8N,KAAK1jB,M,+BAGb,IAAD,OAEN,OAAO,6BACC,kBAAC,KAAD,CAAOwkB,QAA8B,IAApBllB,KAAK2W,MAAMyN,KAC5Be,eAAkB,kBAAM,EAAKtB,SAAQ,IACrCuB,iBAAmB,4BACnBhE,UAAY,sBACV,+BAAKphB,KAAKouB,IAAV,KACA,kEACA,4BAAQhN,UAAY,YACpBc,QAAW,kBAAM,EAAKoM,YAAW,KADjC,QAEA,4BAAQlN,UAAY,aACnBc,QAAW,kBAAM,EAAKoM,YAAW,KADlC,e,GAhCmBnX,IAAMsM,Y,MCKvCgK,KAAMC,cAAc,SAEb,IAAMa,GAAqB,SAAAtX,GAAK,OACrC,4BAAQiL,QAAWjL,EAAM0M,aAAcvC,UAAY,gBACnDC,MAAS,CAAC/J,OAAQL,EAAMK,OAAO,GAAID,MAAOJ,EAAMK,OAAO,GAAI2K,eAAgB,YAiF9DuM,G,kDA3Eb,WAAYvX,GAAO,IAAD,8BAChB,cAAMA,IACDN,MAAQ,CACXyN,MAAK,EACL3W,UAAW,GAEb,EAAK2K,SAAWjB,IAAMC,YACtB,EAAKwM,gBAAkBzM,IAAMC,YAC7B,EAAK0M,kBAAoB3M,IAAMC,YAC/B,EAAKqX,aAAetX,IAAMC,YAC1B,EAAKsX,uBAAyBvX,IAAMC,YACpC,EAAKuX,oBAAsBxX,IAAMC,YACjC,EAAKc,IAAM,EAAKjB,MAAMiB,IAZN,E,oDAgBVxX,GACNV,KAAKsW,SAAS,CAAC8N,KAAK1jB,M,2CAIpB+sB,KAAMC,cAAcjN,SAASmO,eAAe,S,+BAKrC,IAAD,OACN,OAAO,6BAEC,kBAAC,KAAD,CAAO1J,OAAUllB,KAAK2W,MAAMyN,KAC5Be,eAAkB,kBAAM,EAAKtB,SAAQ,IACrCzC,UAAY,aACZgE,iBAAmB,oBACnB/D,MAAS,CAACwN,QAAQ,CAACC,IAAsB,EAAlB9uB,KAAKiX,MAAMK,OAAS,MAEzC,kBAAC,GAAD,CACAiK,IAAOvhB,KAAK0uB,uBACZzf,OAAUjP,KACVquB,QAAWU,GACXX,IAAO,sCACP,kBAAC,GAAD,CACA7M,IAAOvhB,KAAK2uB,oBACZ1f,OAAUjP,KACVquB,QAAWW,GACXZ,IAAO,qCAEP,kBAAC,GAAD,CAAwB7M,IAAOvhB,KAAK4jB,gBAAiB1L,IAAOlY,KAAKkY,MACjE,kBAAC,GAAD,CAA0BqJ,IAAOvhB,KAAK8jB,kBAAmB5L,IAAOlY,KAAKkY,MACrE,kBAAC,GAAD,CAAcqJ,IAAOvhB,KAAKyuB,eAC1B,yBAAKrN,UAAY,YACf,6BACA,uBAAG6B,OAAS,SAAStC,KAAO,uEAA5B,cACA,6BACA,4BAAQuB,QAAU,kBAAM,EAAKwM,uBAAuBzV,QAAQ4K,SAAQ,KACtC,IAA7B7jB,KAAKkY,IAAIvB,MAAMlJ,WAAgD,WAA7BzN,KAAKkY,IAAIvB,MAAMlJ,UAAwB,EAAE,EAD5E,cAGA,6BACA,4BAAQyU,QAAW,kBAAM,EAAK0B,gBAAgB3K,QAAQ4K,SAAQ,KAA9D,sBACA,6BACA,4BAAQ3B,QAAW,kBAAM,EAAK4B,kBAAkB7K,QAAQ4K,SAAQ,KAAhE,wBACA,6BACA,4BAAQ3B,QAAW,kBAAM,EAAKuM,aAAaxV,QAAQ4K,SAAQ,KAA3D,qBACA,6BACA,4BAAQ3B,QAAW,kBAAM,EAAKyM,oBAAoB1V,QAAQ4K,SAAQ,KAAlE,2BACA,6BACA,uBAAGlD,KAAO,sGAAsGsC,OAAQ,UAAxH,0BACA,6BACA,uBAAGtC,KAAM,6EAA6EsC,OAAQ,UAA9F,kBACA,oC,GArEgB9L,IAAMsM,W,SA8EvBsL,G,iFAAf,WAA+B7Y,GAA/B,SAAA9J,EAAA,yDACkC,IAA7B8J,EAAKgC,IAAIvB,MAAMlJ,UADpB,gCAEUyI,EAAKgC,IAAI5B,SAAS,CAAC7I,UAAW,EAAGgQ,SAAS,IAFpD,gCAIsC,GAA5BvH,EAAKgC,IAAIvB,MAAMlJ,WAA+C,WAA7ByI,EAAKgC,IAAIvB,MAAMlJ,UAJ1D,gCAKUyI,EAAKgC,IAAI5B,SAAS,CAAC7I,UAAW,EAAGgQ,SAAS,IALpD,4C,+BASeuR,G,iFAAf,WAAgC9Y,GAAhC,SAAA9J,EAAA,sEACQ8J,EAAKgC,IAAI5B,SAAS,CAAC7I,UAAW,SAAUgQ,SAAQ,IADxD,4C,gCC/CewR,G,kDAlDb,WAAYhY,GAAO,IAAD,8BAChB,cAAMA,IACDiD,SAAW/C,IAAMC,YACtB,EAAKc,IAAM,EAAKjB,MAAMiB,IAHN,E,2DAOhB,IAAMkM,EAAOpkB,KAAKka,SAASjB,QAAQtC,MAAMyN,KACzCpkB,KAAKka,SAASjB,QAAQ4K,SAASO,K,+BAGxB,IAAD,OACN,OAAO,yBAAKhD,UAAY,YACd,kBAAC,GAAD,CAAmB9J,OAAUtX,KAAKiX,MAAMK,OACxCiK,IAAOvhB,KAAKka,SAAUhC,IAAOlY,KAAKkY,MAClC,4BAAQkJ,UAAY,UAAUC,MAAS,CAAC/J,OAA0B,EAAlBtX,KAAKiX,MAAMK,OAAS,KAClE,yBAAK8J,UAAW,uBACd,6BAAK,kBAAC,GAAD,CAAoBuC,aAAgB,kBAAM,EAAKA,gBACpDrM,OAAUtX,KAAKiX,MAAMK,UACrB,yBAAK8J,UAAY,gBACjBC,MAAS,CAAC0L,SAAU/sB,KAAKiX,MAAMK,OAAO,GAAIgK,UAAWthB,KAAKiX,MAAMK,OAAO,MACvE,gDAAuBtX,KAAKkY,IAAIvB,MAAMlJ,UAAwC,WAA7BzN,KAAKkY,IAAIvB,MAAMlJ,UAAuB,GAAG,MAE1F,yBAAK2T,UAAW,kBAChBC,MAAS,CAAC0L,SAAU/sB,KAAKiX,MAAMK,OAAO,GAAIgK,UAAWthB,KAAKiX,MAAMK,OAAO,MACnE,8BACA,4CAEA,2BAAO4X,UAAY,IAAIC,KAAO,kBAC9B,8BAAU7P,GAAK,iBACb,4BAAQH,MAAQ,2BAChB,4BAAQA,MAAQ,yBAChB,4BAAQA,MAAQ,kBAChB,4BAAQA,MAAQ,2BAChB,4BAAQA,MAAQ,qBAChB,4BAAQA,MAAQ,6CAChB,4BAAQA,MAAQ,wBAChB,4BAAQA,MAAQ,qBAChB,4BAAQA,MAAQ,UAChB,4BAAQA,MAAQ,UAChB,4BAAQA,MAAQ,wC,GAzCZhI,IAAMsM,W,sBCJ3B,SAAS2L,GAAsB9tB,EAAUC,EAAW8tB,EAAU7tB,EAAMC,EAAMC,EAAMC,EAAYC,EAAaC,EAAWC,EAAQC,EAASC,GAY1I,IAXA,IAAIC,EAAYP,EACZQ,EAAOP,EACLQ,EAAYX,EAAK,EACnBY,EAAWC,KAAKC,MAAOH,EAAUX,EAAM,GAEvCe,EAAW,GACXC,EAAqB,GACnBC,EAAS,CAACnB,EAAS,EAAGC,EAAU,EAAG8tB,EAAS,GAC5C3sB,EAAUnB,EAAU,EAAG,GAGrBoB,EAAI,EAAGA,EAAInB,EAAMmB,IAAK,CAC5B,IAAIC,EAAQ,CAAC,EAAE,GACH,WAATV,GAA8B,UAATA,IAAkBU,EAAQC,GAAgBvB,EAAUC,EAAW8tB,IAC3E,iBAATntB,IAAyBU,EAAQ0sB,GAAsB7sB,EAAQC,IAClE,IAAMhC,EAAI,IAAId,EAAOgD,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAC/ClC,EAAEP,KAAO,EAEToC,EAASQ,KAAKrC,GACd8B,EAAmBO,KAAKJ,GAE1B,IAAIK,EAAQ,GACRC,EAAoB,IAAIC,IAC5B,GAAc,UAAThB,EAAkB,CACrB,IAAIiB,EAAiB1B,EACrB,GAAiB,SAAdQ,EAAqB,CAEtB,IADA,IAAImB,EAAY,GACRT,EAAI,EAAGA,EAAInB,EAAMmB,IACvBS,EAAUL,KAAKJ,GAEjB,IAAIU,EAAU,GACVC,EAAUC,GAAiBH,GAC3BI,EAAKJ,EAAUE,GACnBD,EAAQN,KAAKS,GACbJ,EAAYK,GAAgBL,EAAWE,GAGvC,IADA,IAAII,EAAc,EACZA,EAAclC,GAAK,CACvB,IAAImC,EAAUJ,GAAiBH,GAC3BQ,EAAKR,EAAUO,GACnBN,EAAQN,KAAKa,GACb,IAAM1C,EAAI,IAAIL,EAAK2C,EAAGI,GACtB1C,EAAEC,SAAS,oBACX6B,EAAMD,KAAK7B,GACXqB,EAASiB,GAAIK,mBACbtB,EAASqB,GAAIC,mBACbV,IACAf,IACA,IAAM0B,EAAUN,EAAK,IAAMI,EACrBG,EAAYH,EAAI,IAAKJ,EAC3BP,EAAkBe,IAAIF,GAAS,GAC/Bb,EAAkBe,IAAID,GAAW,GAEjCX,EAAYK,GAAgBL,EAAWO,GAGvCH,EAAKH,EADLC,EAAUC,GAAiBF,IAE3BK,KAGJ,KAAMP,EAAiB,GAAKf,EAAW,GAAKI,EAAmByB,OAAS,GAAE,CAAC,IAAD,EAC7CC,GAAsB1B,EAAmB2B,SADI,mBACjEC,EADiE,KACxDC,EADwD,KAErED,IAAYC,GAASC,QAAQC,IAAI,mBACrBtE,IAAZmE,GAAuBE,QAAQC,IAAI,+BACvBtE,IAAZoE,GAAuBC,QAAQC,IAAI,0BAEtC,IAAMT,EAAUM,EAAQ,IAAKC,EACvBN,EAAYM,EAAQ,IAAKD,EAC/B,QAAsCnE,IAAnCgD,EAAkBuB,IAAIV,GAAwB,CAC/C,IAAM5C,EAAI,IAAIL,EAAKuD,EAASC,GAC5BnD,EAAEC,SAAS,oBACX6B,EAAMD,KAAK7B,GACXqB,EAAS6B,GAASP,mBAClBtB,EAAS8B,GAASR,mBACftB,EAAS6B,GAASlE,OAASiC,GAAWK,EAAmBiC,OAAOL,EAAS,GACzE7B,EAAS8B,GAASnE,OAASiC,GAAWK,EAAmBiC,OAAOJ,EAAS,GAC5EpB,EAAkBe,IAAIF,GAAS,GAC/Bb,EAAkBe,IAAID,GAAW,GACjCZ,IACAf,UAIF,CAGF,IAHE,MA0DN,SAA8BG,GAQ5B,IANA,IAAImC,EACAC,EAAe,GAIfnC,EAAqB,GACjBG,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCH,EAAmBO,KAAKJ,GAK1B+B,EAAOE,GAAkBpC,GACzBA,EAAqBqC,GAAkBrC,EAAoBkC,GAE3DC,EAAa5B,KAAK2B,GAClB,IAAI,IAAI/B,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQ,EAAGtB,IAAI,CACzC,IAAMmC,EAAYF,GAAkBpC,GACpCA,EAAqBqC,GAAkBrC,EAAoBsC,GAC3DH,EAAa5B,KAAK+B,GAIpB,OAFAH,EAAa5B,KAAK2B,GAEX,CAACC,EAAcD,GAjFFK,CAAqBxC,GAFrC,mBAEGyC,EAFH,KAGMrC,GAHN,KAGU,GAAGA,EAAIqC,EAAKf,OAAO,EAAGtB,IAChCK,EAAMD,KAAK,IAAIlC,EAAKmE,EAAKrC,GAAIqC,EAAKrC,EAAE,KACpCK,EAAML,GAAGxB,SAAS,oBAEpB,IAAI,IAAIwB,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCJ,EAASI,GAAGzC,OAAS,EAIzB,IAmKiB+E,EAAYC,EAnKzBC,GAoFN,SAAyB5C,GAEvB,IADA,IAAI4C,GAAcC,IACVzC,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCwC,EAAa9C,KAAKgD,IAAI9C,EAASI,GAAGzC,OAAQiF,GAE5C,OAAOA,EAzFUG,CAAgB/C,GAE7BgD,IAiKyBL,EAjKgBrD,KAiK5BoD,EAjKerD,GAkKlB,KAAOsD,EAAS,IAAMD,EAAW,KAAOC,EAAS,IAAMD,EAAW,KAAOC,EAAS,KA/JhG,IAAqB,IAAlBK,GAAwB,IAAIC,GAmGjC,SAA6BP,EAAYC,EAAU/C,GAWjD,IAX2D,MAETsD,GAAWR,GAFF,mBAEtDS,EAFsD,KAE5CC,EAF4C,KAE3BC,EAF2B,OAGfH,GAAWP,GAHI,mBAGtDW,EAHsD,KAOvDC,GAPuD,WAOvCD,EAAOH,GAAUvD,GAE/B4D,EAAW,GAETpD,EAAI,EAAGA,EAAIR,EAAWQ,IAAI,CAChC,IADgC,EAEPqD,IAAYN,EAASI,EAAanD,GAAG,IAAKgD,EAC3BC,GAHR,mBAEzBK,EAFyB,KAErBC,EAFqB,KAEfC,EAFe,KAIhCJ,EAAShD,KAAK,CAACV,KAAK+D,IAAIH,EAAI,KAAM5D,KAAK+D,IAAIF,EAAM,KAAM7D,KAAK+D,IAAID,EAAK,OAGvE,OAAOJ,EArHwCM,CAAoBzE,EAAaC,EAAWsD,IAE3F,IAAc,IAAXrD,IAAqC,IAAlByD,GACtB,IAAI,IAAI5C,GAAI,EAAGA,GAAIJ,EAAS0B,OAAQtB,MAClB,IAAXb,IAAiBS,EAASI,IAAGxC,KAAOmG,GAAY/D,EAASI,IAAGzC,OAAQiF,GAAYpD,EAASC,GAAS,IAChF,IAAlBuD,KAAwBhD,EAASI,IAAGvC,MAAQmG,GAAahE,EAASI,IAAGzC,OAAQiF,GAAYK,KAMhG,MAAO,CAACjD,EAASS,GAGnB,SAASH,GAAgBvB,EAAUC,EAAW8tB,GAC5C,MAAO,CAAChtB,KAAKmE,UAAUlF,EAAS,EAAE,GAAIe,KAAKmE,UAAUjF,EAAU,EAAE,GAAIc,KAAKmE,UAAU6oB,EAAS,EAAE,IAGjG,SAASC,GAAsB7sB,EAAQC,GACrC,IAAM+D,EAAcpE,KAAKmE,UAAU,EAAEnE,KAAKqE,IACpC3G,EAAIsC,KAAKmE,SAAS/D,EAAO,GAAKA,EAAO,GACrC8sB,EAAQltB,KAAKmtB,KAAKzvB,EAAE0C,EAAO,IACjC,MAAO,CAACA,EAAO,GAAIC,EAAOL,KAAKsE,IAAI4oB,GAAOltB,KAAKsE,IAAIF,GAAchE,EAAO,GAAGC,EAAOL,KAAKuE,IAAI2oB,GAAOltB,KAAKuE,IAAIH,GAAchE,EAAO,GAAG1C,GAGrI,SAASmE,GAAsB3B,GAC7B,IAAI6B,EAAU7B,EAASF,KAAKC,MAAMD,KAAKmE,SAASjE,EAAS0B,SAIzD,OAHA1B,EAASkC,OAAOL,EAAQ,GAGjB,CAACA,EAFM7B,EAASF,KAAKC,MAAMD,KAAKmE,SAASjE,EAAS0B,UAK3D,SAASV,GAAiBsD,GACxB,OAAOxE,KAAKC,MAAMD,KAAKmE,SAASK,EAAM5C,QAGxC,SAASR,GAAgBoD,EAAOC,GAC9B,OAAOD,EAAM1C,MAAM,EAAE2C,GAAOC,OAAOF,EAAM1C,MAAM2C,EAAM,IA+BvD,SAASjC,GAAkBgC,EAAOG,GAChC,IAAIF,EAASD,EAAMI,QAAQD,GAC3B,OAAOH,EAAM1C,MAAM,EAAE2C,GAAOC,OAAOF,EAAM1C,MAAM2C,EAAM,IAGvD,SAASlC,GAAkBiC,GACzB,OAAOA,EAAMxE,KAAKC,MAAMD,KAAKmE,SAASK,EAAM5C,SAY9C,SAASqC,GAAYpG,EAAQiF,EAAYpD,EAASC,GAEhD,OAAOD,EAA8B7B,EAAOiF,GAA3BnD,EAAUD,GAG7B,SAASwE,GAAarG,EAAQiF,EAAYY,GAExC,IAyDkB3F,EAzDd8G,EAAYnB,EAAS1D,KAAKC,MAAOpC,EAAOiF,GAAeY,EAAS9B,OAAO,KAE3E,OAuDkB7D,EAvDA8G,EAwDX,OAAS+L,SAAS7S,EAAM,IAAM,IAAM6S,SAAS7S,EAAM,IAAM,IAAM6S,SAAS7S,EAAM,IAAK,IAhC5F,SAASqF,GAAW0B,GAClB,IAAIlB,EAAMkB,EAAS,GAAG,IAClBjB,EAAQiB,EAAS,GAAG,IACpBhB,EAAOgB,EAAS,GAAG,IACnBC,EAAO/E,KAAKgD,IAAL,MAAAhD,KAAY,CAAC4D,EAAIC,EAAMC,IAC9BkB,EAAOhF,KAAKiF,IAAL,MAAAjF,KAAY,CAAC4D,EAAIC,EAAMC,IAC9BoB,EAAQH,EAAKC,EAIbG,GAAaJ,EAAKC,GAAM,EAG5B,MAAO,CAWT,SAAuBE,EAAOH,EAAMnB,EAAKC,EAAOC,GAC9C,GAAa,IAAVoB,EAAa,OAAO,EACvB,GAAGH,IAASnB,EAAK,OAAaC,EAAMC,GAAMoB,EAAO,EAAzB,GACxB,GAAGH,IAASlB,EAAO,OAAO,KAAKC,EAAKF,GAAKsB,EAAM,GAC/C,GAAGH,IAASjB,EAAM,OAAO,KAAKF,EAAKC,GAAOqB,EAAQ,GAnBxCE,CAAcF,EAAOH,EAAMnB,EAAKC,EAAOC,GAAM,IAE5B,IAAVoB,EAAa,EAAGA,GAAO,EAAElF,KAAK+D,IAAI,EAAEoB,EAAU,IAEtCA,GAG3B,SAASxB,GAAW0B,EAAKC,EAAYH,GACnC,IAAMI,GAAK,EAAIvF,KAAK+D,IAAI,EAAEoB,EAAU,IAAIG,EAElCE,EAAIL,EAAYI,EAAE,EAHqB,EA2B/C,SAAuBF,EAAKE,EAAGE,GAC7B,OAAIJ,GAAO,GAAKA,EAAM,IAAc,KAAPA,EAAmB,CAACE,EAAEE,EAAE,GAClDJ,GAAO,IAAMA,EAAM,IAAa,CAACI,EAAEF,EAAE,GACrCF,GAAO,KAAOA,EAAM,IAAa,CAAC,EAAGE,EAAGE,GACxCJ,GAAO,KAAOA,EAAM,IAAa,CAAC,EAAGI,EAAGF,GACxCF,GAAO,KAAOA,EAAM,IAAa,CAACI,EAAG,EAAGF,GACxCF,GAAO,KAAOA,EAAM,IAAa,CAACE,EAAG,EAAGE,GACpC,CAAC,EAAE,EAAE,GA9BwBC,CAAcL,EAAKE,EAF7CA,GAAK,EAAIvF,KAAK+D,IAAIsB,EAAI,IAAI,EAAG,IAFM,mBAK7C,MAAO,CAAc,KALwB,KAK3BG,GAAQ,IAAqB,KALF,KAKFA,GAAS,IAAoB,KAL3B,KAKsBA,GAAU,KCnP/E,IACImB,GAAI,IACJC,GAAa,IAsIjB,SAASZ,GAAS7E,EAAGI,EAAI2D,GACvB,IAAM2B,EAAaT,GAAWjF,EAAGI,GAEjC,MAAO,CAAGvB,KAAKwG,IAAIG,GAAE,GAAIzB,EAAO2B,EAAW,GAAM7G,KAAKwG,IAAIG,GAAE,GAAIzB,EAAO2B,EAAW,GAAM7G,KAAKwG,IAAIG,GAAE,GAAIzB,EAAO2B,EAAW,IAG3H,SAASP,GAASnF,EAAGI,EAAG2D,GACtB,IAAM2B,EAAaT,GAAWjF,EAAGI,GAEjC,MAAO,CAACsF,EAAW,GAAI7G,KAAKwG,IAAItB,EAAM,GAAIyB,GAAGE,EAAW,GAAI7G,KAAKwG,IAAItB,EAAM,GAAIyB,GAAGE,EAAW,GAAI7G,KAAKwG,IAAItB,EAAM,GAAIyB,IAGtH,SAAST,GAAS/E,EAAGI,GAEnB,IAAIuF,EAAQ9G,KAAKwG,IAAKrF,EAAG3D,EAAI+D,EAAG/D,EAAI,GAChCuJ,EAAQ/G,KAAKwG,IAAKrF,EAAG1D,EAAI8D,EAAG9D,EAAI,GAChC2vB,EAAQptB,KAAKwG,IAAKrF,EAAGzD,EAAI6D,EAAG7D,EAAI,GAGpC,OAFGoJ,EAAQC,EAAQqmB,IAAU,IAAGtmB,EAAQ,OAEhC9G,KAAKqG,KAAMS,EAAQC,EAAOqmB,GAKpC,SAAShnB,GAAWjF,EAAGI,GACrB,IAAMkF,EAAQlF,EAAG/D,EAAI2D,EAAG3D,EAClBkJ,EAAQnF,EAAG9D,EAAI0D,EAAG1D,EAClB4vB,EAAQ9rB,EAAG7D,EAAIyD,EAAGzD,EAClBuI,EAAOC,GAAS/E,EAAGI,GACzB,MAAO,CAACkF,EAAMR,EAAMS,EAAMT,EAAMonB,EAAMpnB,GAGxC,SAASe,GAAKC,EAAGC,EAAeC,GAC9B,MAAqB,WAAlBD,EACMD,EAAIE,EAAoBP,GAEZ,gBAAlBM,EACM,GAAKD,EAGLA,EChLX,IAAIrB,GAAO,GACPC,GAAU,GACVC,GAAK,EACLC,GAAK,EA2HT,SAASC,GAAS7E,EAAGI,GACnB,IAAI0E,EAAOC,GAAS3E,EAAGJ,GACjBgF,EAAQC,GAAW7E,EAAGJ,GAC5B,MAAO,CAAEyE,GAAKO,EAAM,GAAInG,KAAKqG,KAAKJ,GAASL,GAAKO,EAAM,GAAInG,KAAKqG,KAAKJ,GAC/CL,GAAKO,EAAM,GAAInG,KAAKqG,KAAKJ,IAIhD,SAASK,GAASnF,EAAGI,EAAIgF,GACvB,IAAIN,EAAOC,GAAS/E,EAAGI,GACjB4E,EAAQC,GAAWjF,EAAGI,GAE5B,MAAO,CAACsE,GAAS7F,KAAKkC,IAAI+D,EAAMH,IAAOK,EAAM,GACrCN,GAAS7F,KAAKkC,IAAI+D,EAAMF,IAAOI,EAAM,GACrCN,GAAS7F,KAAKkC,IAAI+D,EAAMF,IAAOI,EAAM,IAG/C,SAASD,GAAS/E,EAAGI,GACnB,IAAM0E,EAAOjG,KAAKqG,KAAKrG,KAAKwG,IAAKrF,EAAG3D,EAAI+D,EAAG/D,EAAI,GAAKwC,KAAKwG,IAAKrF,EAAG1D,EAAI8D,EAAG9D,EAAI,GAAKuC,KAAKwG,IAAKrF,EAAGzD,EAAE6D,EAAG7D,EAAG,IACtG,OAAgB,IAATuI,EAAY,MAAwBA,EAM7C,SAASG,GAAWjF,EAAGI,GACrB,IAAMkF,EAAQlF,EAAG/D,EAAI2D,EAAG3D,EAClBkJ,EAAQnF,EAAG9D,EAAI0D,EAAG1D,EAClB4vB,EAAQ9rB,EAAG7D,EAAIyD,EAAGzD,EAClBuI,EAAOC,GAAS/E,EAAGI,GACzB,MAAO,CAACkF,EAAMR,EAAMS,EAAMT,EAAMonB,EAAMpnB,GC7JxC,IACImD,GAAK,EACLC,GAAK,GAELC,GAAM,GACNC,GAAQ,GAgKZ,SAASvD,GAASxI,EAAEC,GAClB,IAAIwI,EAAOC,GAAS1I,EAAEC,GAChBoJ,EAAaT,GAAW3I,EAAED,GAChC,MAAO,CAACqJ,EAAW,GAAGuC,KAAM5L,EAAEK,OAAO,IAAIJ,EAAEI,OAAO,GAAIoI,GAC5CY,EAAW,GAAGuC,KAAM5L,EAAEK,OAAO,IAAIJ,EAAEI,OAAO,GAAIoI,GAC9CY,EAAW,GAAGuC,KAAM5L,EAAEK,OAAO,IAAIJ,EAAEI,OAAO,GAAIoI,IAI1D,SAASK,GAAS9I,EAAEC,GAClB,IAAIwI,EAAOC,GAAS1I,EAAEC,GAChBoJ,EAAaT,GAAW5I,EAAEC,GAChC,MAAO,CAACoJ,EAAW,GAAI7G,KAAKkC,IAAI,EAAE+D,GAAOY,EAAW,GAAG7G,KAAKkC,IAAI,EAAE+D,GAC5BY,EAAW,GAAG7G,KAAKkC,IAAI,EAAE+D,IAYjE,SAASuD,GAASnL,EAAG+B,GACnB,IAAIqJ,EAAcvD,GAAS7H,EAAE+B,GACzByG,EAAaT,GAAW/H,EAAE+B,GAC9B,MAAO,CAACyG,EAAW,GAAGwC,IAAIhL,EAAER,OAAO,GAAG4L,EAAa5C,EAAW,GAAGwC,IAAIhL,EAAER,OAAO,GAAG4L,EACnE5C,EAAW,GAAGwC,IAAIhL,EAAER,OAAO,GAAG4L,GAG9C,SAASvD,GAAS/E,EAAGI,GACnB,IAAI0E,EAAOjG,KAAKwG,IAAIrF,EAAG3D,EAAE+D,EAAG/D,EAAE,GAAKwC,KAAKwG,IAAKrF,EAAG1D,EAAE8D,EAAG9D,EAAG,GAAKuC,KAAKwG,IAAIrF,EAAGzD,EAAE6D,EAAG7D,EAAE,GAEhF,OADY,IAATuI,IAAYA,EAAO,OACdjG,KAAKqG,KAAKJ,GAMpB,SAASG,GAAWjF,EAAGI,GACrB,IAAMkF,EAAQlF,EAAG/D,EAAI2D,EAAG3D,EAClBkJ,EAAQnF,EAAG9D,EAAI0D,EAAG1D,EAClB4vB,EAAQ9rB,EAAG7D,EAAIyD,EAAGzD,EACpBuI,EAAOC,GAAS/E,EAAGI,GACvB,MAAO,CAACkF,EAAMR,EAAMS,EAAMT,EAAMonB,EAAMpnB,GCnNxC,IACImD,GAAK,EACLC,GAAK,GAELC,GAAM,GACNC,GAAQ,GA8JZ,SAASvD,GAASxI,EAAEC,GAClB,IAAIwI,EAAOC,GAAS1I,EAAEC,GAChBoJ,EAAaT,GAAW3I,EAAED,GAChC,MAAO,CAACqJ,EAAW,GAAGuC,KAAM5L,EAAEK,OAAO,IAAIJ,EAAEI,OAAO,GAAIoI,GAC5CY,EAAW,GAAGuC,KAAM5L,EAAEK,OAAO,IAAIJ,EAAEI,OAAO,GAAIoI,GAC9CY,EAAW,GAAGuC,KAAM5L,EAAEK,OAAO,IAAIJ,EAAEI,OAAO,GAAIoI,IAI1D,SAASK,GAAS9I,EAAEC,GAClB,IAAIwI,EAAOC,GAAS1I,EAAEC,GAChBoJ,EAAaT,GAAW5I,EAAEC,GAChC,MAAO,CAACoJ,EAAW,GAAIZ,EAAMY,EAAW,GAAGZ,EACLY,EAAW,GAAGZ,GAYtD,SAASuD,GAASnL,EAAG+B,GACnB,IAAIqJ,EAAcvD,GAAS7H,EAAE+B,GACzByG,EAAaT,GAAW/H,EAAE+B,GAC9B,MAAO,CAACyG,EAAW,GAAGwC,IAAIhL,EAAER,OAAO,GAAG4L,EAAa5C,EAAW,GAAGwC,IAAIhL,EAAER,OAAO,GAAG4L,EACnE5C,EAAW,GAAGwC,IAAIhL,EAAER,OAAO,GAAG4L,GAG9C,SAASvD,GAAS/E,EAAGI,GACnB,IAAI0E,EAAOjG,KAAKwG,IAAIrF,EAAG3D,EAAE+D,EAAG/D,EAAE,GAAKwC,KAAKwG,IAAKrF,EAAG1D,EAAE8D,EAAG9D,EAAG,GAAKuC,KAAKwG,IAAIrF,EAAGzD,EAAE6D,EAAG7D,EAAE,GAEhF,OADY,IAATuI,IAAYA,EAAO,OACdjG,KAAKqG,KAAKJ,GAMpB,SAASG,GAAWjF,EAAGI,GACrB,IAAMkF,EAAQlF,EAAG/D,EAAI2D,EAAG3D,EAClBkJ,EAAQnF,EAAG9D,EAAI0D,EAAG1D,EAClB4vB,EAAQ9rB,EAAG7D,EAAIyD,EAAGzD,EACpBuI,EAAOC,GAAS/E,EAAGI,GACvB,MAAO,CAACkF,EAAMR,EAAMS,EAAMT,EAAMonB,EAAMpnB,G,eC5LzB2N,G,yFAAf,WAAkCC,EAAKC,EAAYC,EAAU5E,EAAW6E,GAAxE,SAAAjK,EAAA,yDACoB,OAAfoF,EADL,gCACgC0E,EAAKI,SAAS,CAACC,kBAAmB/E,IADlE,uBAEQ0E,EAAKI,SAAS,CAACE,sBAAuBL,EAAYM,eAAgBL,EAAUM,QAAQ,IAF5F,OAI0B,WAArBR,EAAKS,MAAMC,OAAoBV,EAAKW,iBACf,aAArBX,EAAKS,MAAMC,OAAsBV,EAAKY,kBACjB,QAArBZ,EAAKS,MAAMC,OAAiBV,EAAKa,aANtC,4C,0BAu2Be4Y,G,kDA31Bb,WAAY1Y,GAAO,IAAD,gCAChB,cAAMA,IACDN,OAAL,GACEW,OAAQ,EACRD,MAAO,EACPuY,MAAO,EACPC,MAAQ,KACRC,OAAS,KACTC,SAAU,KACVxtB,SAAU,GACVS,MAAO,GACPgtB,QAAU,GACVC,MAAO,GACPxY,SAAU,SACV9V,WAAY,SACZiI,WAAY,IACZ4N,YAAa,EACbM,UAAU,EACVC,eAAiB,EACjBC,eAAgB,GAjBlB,0BAkBY,UAlBZ,4BAmBc,UAnBd,sBAoBO,GApBP,gCAqBiB,GArBjB,mCAsBqB,IAtBrB,uCAuByB,GAvBzB,gCAwBkB,GAxBlB,yBAyBU,GAzBV,uBA0BS,UA1BT,GA4BA,EAAKE,IAAM,EAAKjB,MAAMiB,IACtB,EAAKhB,OAASC,IAAMC,YA/BJ,E,gEAmChB,IAAM7C,EAAuB,IAAnB8D,OAAOC,YACXC,EAAuB,IAAnBF,OAAOC,YACX4X,EAAuB,IAAnB7X,OAAOC,YACjBtY,KAAKkX,OAAO+B,QAAQ3B,OAASiB,EAC7BvY,KAAKkX,OAAO+B,QAAQ5B,MAAQ9C,EAE5B,IAAIwb,EAAW,IAAII,KAAoB,CAACjZ,OAAQlX,KAAKkX,OAAO+B,QAAShY,OAAM,IAC3E8uB,EAASK,QAAQ7b,EAAGgE,GACpB,IAAIsX,EAAQ,IAAIM,KACZL,EAAS,IAAIK,KAAwB,GAAI5b,EAAEgE,EAAG,GAAK,KACnD8X,EAAa,IAAIF,KAAkB,SAAW,GAClDE,EAAWC,SAAStsB,IAAI,EAAE,EAAE,GAC5B8rB,EAAOthB,IAAI6hB,GACXP,EAAOQ,SAASvwB,EAAI,IAAImwB,EACxBJ,EAAOQ,SAASzwB,EAAI0U,EAAE,EACtBub,EAAOQ,SAASxwB,EAAIyY,EAAE,EACtBsX,EAAMrhB,IAAIshB,GACVC,EAASQ,OAAOV,EAAOC,GAUvB,IA5BiB,MAoBQV,GAAsB7a,EAAGgE,EAAE2X,EAAGlwB,KAAKkY,IAAIvB,MAAMnV,KACpExB,KAAKkY,IAAIvB,MAAMlV,KAAMzB,KAAKkY,IAAIvB,MAAM1U,UAAWjC,KAAK2W,MAAMhV,WAC1D,CAAC3B,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WAAYzY,KAAKkY,IAAIvB,MAAM+B,WACpE,CAAC1Y,KAAKkY,IAAIvB,MAAMgC,OAAQ3Y,KAAKkY,IAAIvB,MAAMiC,SAAU5Y,KAAKkY,IAAIvB,MAAMkC,SAChE7Y,KAAKkY,IAAIvB,MAAMmC,WAAY9Y,KAAKkY,IAAIvB,MAAM5U,QAAS/B,KAAKkY,IAAIvB,MAAM3U,SAxBnD,mBAoBVO,EApBU,KAoBDS,EApBC,KA0BXgtB,EAAU,GAERrtB,EAAI,EAAGA,EAAGJ,EAAS0B,OAAQtB,IAAI,CACvBJ,EAASI,GAAGvC,MAA1B,IAGIowB,EAAW,IAAIL,KAAqB5tB,EAASI,GAAGxC,KAAK,EAAE,GACvDswB,EAAW,IAAIN,KAA0B,IAAIA,KAAY5tB,EAASI,GAAGvC,QACrEswB,EAAS,IAAIP,KAAWK,EAAUC,GAChC/vB,EAAI6B,EAASI,GACnB+tB,EAAOJ,SAAStsB,IAAItD,EAAEb,EAAGa,EAAEZ,EAAGY,EAAEX,GAChCiwB,EAAQjtB,KAAK2tB,GACbb,EAAMrhB,IAAIkiB,GAKZ,IAFA,IAAMT,EAAQ,GAENjmB,EAAI,EAAGA,EAAIhH,EAAMiB,OAAQ+F,IAAI,EAC7BymB,EAAW,IAAIN,KAAwB,CAAC/vB,MAAQ,YAC3CuwB,QAAU,GACnB,IAAIC,EAAS,GACP1vB,EAAI8B,EAAMgH,GAEhB4mB,EAAO7tB,KAAKitB,EAAQ9uB,EAAEJ,OAAOwvB,UAC7BM,EAAO7tB,KAAKitB,EAAQ9uB,EAAEH,KAAKuvB,UACvBE,GAAW,IAAIL,MAAuBU,cAAcD,GAAxD,IAGIE,EAAO,IAAIX,KAAWK,EAAUC,GACpCZ,EAAMrhB,IAAIsiB,GACVb,EAAMltB,KAAK+tB,GAGff,EAASQ,OAAOV,EAAOC,GAGvB9vB,KAAKsW,SAAS,CACZe,MAAO9C,EACP+C,OAAQiB,EACRqX,MAAOM,EACPL,MAAOA,EACPC,OAAQA,EACRC,SAAUA,EACVxtB,SAAUA,EACVS,MAAOA,EACPgtB,QAASA,EACTC,MAAOA,M,6CAMP,IADA,IAAI3Q,EAAKtf,KAAK2W,MAAMa,YACd8H,GACJC,cAAcD,GACdA,M,2CAKJ,IAAI,IAAI3c,EAAI,EAAGA,EAAG3C,KAAK2W,MAAMpU,SAAS0B,OAAQtB,IAAI,CAChD,IAAMjC,EAAIV,KAAK2W,MAAMpU,SAASI,GAC9B3C,KAAK2W,MAAMqZ,QAAQrtB,GAAG2tB,SAAStsB,IAAItD,EAAEb,EAAGa,EAAEZ,EAAGY,EAAEX,GAE/CC,KAAK2W,MAAMqZ,QAAQrtB,GAAG8tB,SAASrwB,MAAQ,IAAI+vB,KAAYnwB,KAAK2W,MAAMpU,SAASI,GAAGvC,OAIhF,IAAI,IAAI4J,EAAI,EAAGA,EAAGhK,KAAK2W,MAAM3T,MAAMiB,OAAQ+F,IAAI,CAC7C,IAAM9I,EAAIlB,KAAK2W,MAAM3T,MAAMgH,GACrBtJ,EAAIV,KAAK2W,MAAMpU,SAEjBwuB,EAAM/wB,KAAK2W,MAAMsZ,MAAMjmB,GAAGwmB,SAAShD,WAAW8C,SAASzpB,MAC3DkqB,EAAI,GAAKrwB,EAAEQ,EAAEJ,OAAOjB,EACpBkxB,EAAI,GAAKrwB,EAAEQ,EAAEJ,OAAOhB,EACpBixB,EAAI,GAAKrwB,EAAEQ,EAAEJ,OAAOf,EACpBgxB,EAAI,GAAKrwB,EAAEQ,EAAEH,KAAKlB,EAClBkxB,EAAI,GAAKrwB,EAAEQ,EAAEH,KAAKjB,EAClBixB,EAAI,GAAKrwB,EAAEQ,EAAEH,KAAKhB,EAClBC,KAAK2W,MAAMsZ,MAAMjmB,GAAGwmB,SAAShD,WAAW8C,SAASU,aAAc,EAC/DhxB,KAAK2W,MAAMsZ,MAAMjmB,GAAGymB,SAASrwB,MAAQ,IAAI+vB,KAAYnwB,KAAK2W,MAAM3T,MAAMgH,GAAG5J,OAG3EJ,KAAK2W,MAAMoZ,SAASQ,OAAOvwB,KAAK2W,MAAMkZ,MAAO7vB,KAAK2W,MAAMmZ,U,oDAIxD,IAAMrf,EH3KH,SAA2BlO,EAASS,EAAM0G,EAAiBC,EAAiBC,EAAYsQ,GAE7F,IAAMC,EAAIzQ,EAAiB,EACrB0Q,EAAIzQ,EAAiB,EAC3BxB,GAAK,GAAM9F,KAAKqG,KAAKyR,GAAG,EAAE,GAAGD,EAASG,YAAa,IACnDjS,GAAK,GAAM/F,KAAKqG,KAAK0R,GAAG,EAAE,GAAGF,EAASG,YAAa,IACnD,IAAMrR,EAAIY,EAGJrC,GADU2S,EAASI,IACXJ,EAAS3S,OACvBU,GAAOiS,EAASzO,GAChBvD,GAAUgS,EAASK,GASnB,IARA,IAAMC,EAAWN,EAAStR,aAItBU,EAAI,EACJkI,EAAa,GACbiJ,EAAiB,GAEfnR,EAAEN,GAAE,CAER,IADA,IAAImB,EAAa,GACTxH,EAAG,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAI,CAIrC,IAHA,IAAI+X,EAAI,IAAI1S,EAAM,EAAE,EAAE,GAClB2S,EAAiB,GAEb3Q,EAAI,EAAGA,EAAIhH,EAAMiB,OAAQ+F,IAAI,CACnC,GAAGrH,IAAMK,EAAMgH,GAAGlJ,OAAS6B,IAAMK,EAAMgH,GAAGjJ,IAAI,CAC5C,IAAM6Z,EAAQjS,GAASpG,EAASS,EAAMgH,GAAGlJ,OAAQyB,EAASS,EAAMgH,GAAGjJ,KAAMyZ,GACzEE,EAAEG,UAAUD,GACZD,EAAe5X,KAAKC,EAAMgH,GAAGjJ,KAE/B,GAAG4B,IAAMK,EAAMgH,GAAGjJ,KAAO4B,IAAMK,EAAMgH,GAAGlJ,MAAM,CAC5C,IAAM8Z,EAAQjS,GAASpG,EAASS,EAAMgH,GAAGjJ,KAAMwB,EAASS,EAAMgH,GAAGlJ,OAAQ0Z,GACzEE,EAAEG,UAAUD,GACZD,EAAe5X,KAAKC,EAAMgH,GAAGlJ,QAIjC,IAAI,IAAIkJ,EAAG,EAAGA,EAAIzH,EAAS0B,OAAQ+F,IACjC,GAAGrH,IAAMqH,EAAT,CAEA,IADA,IAAI/H,GAAY,EACRgI,EAAI,EAAGA,EAAI0Q,EAAe1W,OAAQgG,IACrCD,IAAM2Q,EAAe1Q,KAAIhI,GAAY,GAE1C,IAAIA,EAAU,CACZ,IAAM2Y,EAAQvS,GAAS9F,EAASI,GAAIJ,EAASyH,IAC7C0Q,EAAEG,UAAUD,IAGhBzQ,EAAWpH,KAAK2X,GAclB,IATA,IAAMI,EAAsB,GAExBC,EAAO3V,IACP4V,EAAO5V,IACP6rB,EAAO7rB,IACP6V,EAAO,EACPC,EAAO,EACPgW,EAAO,EAEHvuB,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCwH,EAAWxH,GAAGyW,MAAM7R,GACpBhF,EAASI,GAAG6L,IAAIrE,EAAWxH,IAG3BoY,EAAQA,EAAO1Y,KAAKiF,IAAIyT,EAAMxY,EAASI,GAAG9C,GAC1Cmb,EAAO3Y,KAAKiF,IAAI0T,EAAMzY,EAASI,GAAG7C,GAClCmxB,EAAO5uB,KAAKiF,IAAI2pB,EAAM1uB,EAASI,GAAG5C,GAClCkb,EAAO1Y,EAASI,GAAG9C,EAAIob,EAAM1Y,EAASI,GAAG9C,EAAEob,EAC3CC,EAAO3Y,EAASI,GAAG7C,EAAIob,EAAM3Y,EAASI,GAAG7C,EAAEob,EAC3CgW,EAAO3uB,EAASI,GAAG5C,EAAImxB,EAAM3uB,EAASI,GAAG5C,EAAGmxB,EAE5CpW,EAAoB/X,KAAK,CAACR,EAASI,GAAG9C,EAAG0C,EAASI,GAAG7C,EAAGyC,EAASI,GAAG5C,IAEtE0a,EAAe1X,KAAK,EAAEgY,GAAOC,GAAOiW,EAAM9W,IAAKY,EAAME,GAAOb,IAAKY,EAAME,GAAOd,IAAK6W,EAAMC,KAGzF1f,EAAWzO,KAAK+X,GAChBxR,GAAK,EAGP,IAAI,IAAI3G,EAAI,EAAGA,EAAI6O,EAAWvN,OAAQtB,IACpC,IAAI,IAAIqH,EAAI,EAAGA,EAAIwH,EAAW7O,GAAGsB,OAAQ+F,IACvCwH,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GACrF6O,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GACrF6O,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GAIrFoY,EAAO3V,IACP4V,EAAO5V,IACP6rB,EAAO7rB,IACP6V,EAAO,EACPC,EAAO,EAEX,IANA,IAMQvY,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCoY,EAAO1Y,KAAKiF,IAAI/E,EAASI,GAAG9C,EAAGkb,GAC/BC,EAAO3Y,KAAKiF,IAAI/E,EAASI,GAAG7C,EAAGkb,GAC/BiW,EAAO5uB,KAAKiF,IAAI/E,EAASI,GAAG5C,EAAGkxB,GAC/BhW,EAAO1Y,EAASI,GAAG9C,EAAIob,EAAM1Y,EAASI,GAAG9C,EAAEob,EAC3CC,EAAO3Y,EAASI,GAAG9C,EAAIqb,EAAM3Y,EAASI,GAAG7C,EAAEob,EAC3CgW,EAAO3uB,EAASI,GAAG5C,EAAImxB,EAAM3uB,EAASI,GAAG5C,EAAGmxB,EAG9C,IAAI,IAAIvuB,EAAI,EAAGA,EAAGJ,EAAS0B,OAAQtB,IACjCJ,EAASI,GAAG9C,GAAK0C,EAASI,GAAG9C,GAAKkb,IAASZ,IAAIY,EAAKE,IACpD1Y,EAASI,GAAG7C,GAAKyC,EAASI,GAAG7C,GAAKkb,IAASZ,IAAIY,EAAKE,IACpD3Y,EAASI,GAAG5C,GAAKwC,EAASI,GAAG5C,GAAKkxB,IAAS7W,IAAI6W,EAAKC,IAEtD,MAAO,CAAC3uB,EAAUiP,GG0DD2f,CAAkBnxB,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,MAC7DhD,KAAK2W,MAAMU,MAAOrX,KAAK2W,MAAMW,OAAQtX,KAAK2W,MAAM/M,WAAY5J,KAAKkY,IAAIvB,MAAMuD,SAASkB,QAElF5J,GADiBf,EAAO,GACXA,EAAO,IAE1BwF,GAAmBjW,KAAM,EAAGwR,EAAWvN,OAAQuN,K,yCAI/C,IAAMf,EJvLH,SAA+BlO,EAASS,EAAM0G,EAAiBC,EAAiBC,EAAYsQ,GACjG,IAAMC,EAAIzQ,EAAiB,EACrB0Q,EAAIzQ,EAAiB,EACrB0R,EAAQzR,EACdX,GAAaoS,EACb,IAAMC,EAAcpB,EAAS3Q,cACvBA,EAAgB2Q,EAAS3Q,cAE/BP,GADI,EACG3G,KAAKqG,KAAMyR,EAAIC,EAAI7X,EAAS0B,QACnBiW,EAASI,IAAzB,IAIIhR,EAAI,EACJkI,EAAa,GACbxB,EAAe,GAAMmK,EAAID,EAASqB,MAClCC,EAAmB,GAEnBf,EAAiB,GACrB,GAAmB,gBAAhBa,EACD,IAAI,IAAI3Y,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClC6Y,EAAiBzY,KAAKiN,GAK1B,IAFA,IAAMxG,EAAsBwG,EAEtB1G,EAAE+R,GAAM,CAGZ,IAFA,IAAIlR,EAAa,GAETxH,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAK,CAEvC,IADA,IAAI+X,EAAI,IAAI1S,EAAM,EAAE,EAAE,GACdgC,EAAI,EAAGA,EAAIzH,EAAS0B,OAAQ+F,IAClC,GAAGrH,IAAKqH,EAAE,CACR,IAAMzC,EAAQgB,GAAShG,EAASI,GAAIJ,EAASyH,IACvC4Q,EAAQvS,GAAS9F,EAASI,GAAIJ,EAASyH,GAAIzC,GAGjDmT,EAAEG,UAAUD,GAGhBzQ,EAAWpH,KAAK2X,GAGlB,IAAI,IAAI/X,EAAI,EAAGA,EAAIK,EAAMiB,OAAQtB,IAAI,CACnC,IAAMzB,EAAI8B,EAAML,GACbzB,EAAEJ,QAAUI,EAAEH,KAAKuD,QAAQC,IAAI,aAClC,IAAMgD,EAAQgB,GAAShG,EAASrB,EAAEJ,OAAQyB,EAASrB,EAAEH,MAC/C6Z,EAAQjS,GAASpG,EAASrB,EAAEJ,OAAQyB,EAASrB,EAAEH,KAAMwG,GACrDkU,EAAS,EAAEb,EAAM,IAAKA,EAAM,IAAKA,EAAM,IAE7CzQ,EAAWjJ,EAAEH,KAAK8Z,UAAUD,GAC5BzQ,EAAWjJ,EAAEJ,OAAO+Z,UAAUY,GAahC,IAVA,IAAMC,EAAkB,GACpBX,EAAO3V,IACP4V,EAAO5V,IACP6rB,EAAO7rB,IACP6V,EAAO,EACPC,EAAO,EACPgW,EAAO,EAELvV,EAAS,IAAI/b,EAAO,EAAE,EAAE,GAEtB+C,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAI,CACtC,IAAMuG,EAAaT,GAAW0B,EAAWxH,GAAIgZ,GACvCC,EAAY,IAAI5T,EAAMkB,EAAW,GAAIA,EAAW,GAAIT,GAAW,IACrEmT,EAAUrb,KAAKqb,EAAU/b,EAAEwC,KAAKiF,IAAI0I,EAAa3N,KAAK+D,IAAI+D,EAAWxH,GAAG9C,KACxE+b,EAAUpb,KAAKob,EAAU9b,EAAEuC,KAAKiF,IAAI0I,EAAa3N,KAAK+D,IAAI+D,EAAWxH,GAAG7C,KACxE8b,EAAUnb,KAAKmb,EAAU7b,EAAEsC,KAAKiF,IAAI0I,EAAa3N,KAAK+D,IAAI+D,EAAWxH,GAAG5C,KACxEwC,EAASI,GAAG6L,IAAIoN,GAWhBb,EAAO1Y,KAAKiF,IAAIyT,EAAMxY,EAASI,GAAG9C,GAClCmb,EAAO3Y,KAAKiF,IAAI0T,EAAMzY,EAASI,GAAG7C,GAClCmxB,EAAO5uB,KAAKiF,IAAI2pB,EAAM1uB,EAASI,GAAG5C,GAClCkb,EAAO1Y,EAASI,GAAG9C,EAAIob,EAAM1Y,EAASI,GAAG9C,EAAEob,EAC3CC,EAAO3Y,EAASI,GAAG7C,EAAIob,EAAM3Y,EAASI,GAAG7C,EAAEob,EAC3CgW,EAAO3uB,EAASI,GAAG5C,EAAImxB,EAAM3uB,EAASI,GAAG5C,EAAEmxB,EAE3CxV,EAAgB3Y,KAAK,CAACR,EAASI,GAAG9C,EAAG0C,EAASI,GAAG7C,EAAGyC,EAASI,GAAG5C,IAGlE0a,EAAe1X,KAAK,EAAEgY,GAAMC,GAAOiW,EAAM9W,IAAIY,EAAKE,GAAOb,IAAIY,EAAKE,GAAOd,IAAI6W,EAAKC,KAClF1f,EAAWzO,KAAK2Y,GAEK,gBAAlBnS,IAAgCyG,EAAc3G,GAAK2G,EAAazG,EAAeC,IAClFF,GAAI,EAKN,IAFA,IAEQ3G,EAAI,EAAGA,EAAI6O,EAAWvN,OAAQtB,IACpC,IAAI,IAAIqH,EAAI,EAAGA,EAAIwH,EAAW7O,GAAGsB,OAAQ+F,IACvCwH,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GACrF6O,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GACrF6O,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAM8X,EAAe9X,GAAG,GAGvFoY,EAAO3V,IACP4V,EAAO5V,IACP6rB,EAAO7rB,IACP6V,EAAO,EACPC,EAAO,EACPgW,EAAO,EACX,IANA,IAMQvuB,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCoY,EAAO1Y,KAAKiF,IAAI/E,EAASI,GAAG9C,EAAGkb,GAC/BC,EAAO3Y,KAAKiF,IAAI/E,EAASI,GAAG7C,EAAGkb,GAC/BiW,EAAO5uB,KAAKiF,IAAI/E,EAASI,GAAG5C,EAAGkxB,GAC/BhW,EAAO1Y,EAASI,GAAG9C,EAAIob,EAAM1Y,EAASI,GAAG9C,EAAEob,EAC3CC,EAAO3Y,EAASI,GAAG7C,EAAIob,EAAM3Y,EAASI,GAAG7C,EAAEob,EAC3CgW,EAAO3uB,EAASI,GAAG5C,EAAImxB,EAAM3uB,EAASI,GAAG5C,EAAEmxB,EAI7C,IAAI,IAAIvuB,EAAI,EAAGA,EAAGJ,EAAS0B,OAAQtB,IACjCJ,EAASI,GAAG9C,GAAK0C,EAASI,GAAG9C,GAAMkb,GAASZ,IAAIY,EAAKE,GACrD1Y,EAASI,GAAG7C,GAAKyC,EAASI,GAAG7C,GAAMkb,GAASZ,IAAIY,EAAKE,GACrD3Y,EAASI,GAAG5C,GAAKwC,EAASI,GAAG5C,GAAMkxB,GAAQ7W,IAAI6W,EAAKC,GAGtD,MAAO,CAAC3uB,EAAUiP,GIsDD4f,CAAsBpxB,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,MAAOhD,KAAK2W,MAAMU,MACnFrX,KAAK2W,MAAMW,OAAQtX,KAAK2W,MAAM/M,WAAY5J,KAAKkY,IAAIvB,MAAMuD,SAAS4B,aAGhEtK,GADiBf,EAAO,GACXA,EAAO,IAC1BwF,GAAmBjW,KAAM,EAAGwR,EAAWvN,OAAQuN,K,2FAO3B,IAAD,EDjMhB,SAAuBjP,EAASS,EAAO0G,EAAiBC,EAAiBC,EAAYsQ,GAG1F,IAAMmB,EAAQzR,EACRuQ,EAAIzQ,EAAiB,EACrB0Q,EAAIzQ,EAAiB,EAE3B8B,GAAKyO,EAAS6B,GACdrQ,GAAKwO,EAASxO,GACdC,GAAMuO,EAASvO,IACfC,GAAQsO,EAAStO,MAYjB,IAPA,IAAItC,EAAI,EACJkI,EAAa,GACbiJ,EAAiB,GAIjBuB,EAAkB,GACdrZ,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCqZ,EAAgBjZ,KAAK,IAAIiF,EAAM,EAAE,EAAE,IAGrC,KAAMsB,EAAG+R,GAAM,CAIb,IAHA,IAAIlR,EAAa,GAGTxH,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAK,CAGvC,IAFA,IAAI+X,EAAI,IAAI1S,EAAM,EAAE,EAAE,GAEdgC,EAAI,EAAGA,EAAIzH,EAAS0B,OAAQ+F,IAClC,GAAGrH,IAAKqH,EAAE,CAER,IAAMiS,EAAgB5T,GAAS9F,EAASI,GAAIJ,EAASyH,IACrD0Q,EAAEG,UAAUoB,GAGhB9R,EAAWpH,KAAK2X,GAIlB,IAAI,IAAI/X,EAAI,EAAGA,EAAIK,EAAMiB,OAAQtB,IAAK,CACpC,IAAMzB,EAAI8B,EAAML,GACVuZ,EAAmBvT,GAASpG,EAASrB,EAAEJ,OAAQyB,EAASrB,EAAEH,MAC1Dob,EAAuB,EAAED,EAAiB,IAAKA,EAAiB,IAAKA,EAAiB,IAC5F/R,EAAWjJ,EAAEJ,OAAO+Z,UAAUqB,GAC9B/R,EAAWjJ,EAAEH,KAAK8Z,UAAUsB,GAK9B,IAAwB,IAArBjC,EAASkC,QAIV,IAHA,IAAM3Z,EAAgB,IAAN6G,EAAU,CAAC6Q,EAAE,EAAGC,EAAE,EAAGA,EAAE,GAAI,CAAED,EAAE,EAAK,EAAGM,EAAenR,EAAE,GAAG,GAAK8Q,EAAE,EAAK,EAAGK,EAAenR,EAAE,GAAG,GAAM8Q,EAAE,EAAK,EAAGK,EAAenR,EAAE,GAAG,IAC5I+S,EAAe,IAAIrU,EAAMvF,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAEpDE,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAK,CACvC,IAAM2Z,EAAgBzQ,GAAStJ,EAASI,GAAI0Z,GAC5ClS,EAAWxH,GAAGkY,UAAUyB,GAkB5B,IAbA,IAUIC,EAVEb,EAAkB,GACpBX,EAAO3V,IACP4V,EAAO5V,IACP6rB,EAAO7rB,IACP6V,EAAO,EACPC,EAAO,EACPgW,EAAO,EAKP1U,EAAO,EACPC,EAAO,EACH9Z,EAAI,EAAGA,EAAIwH,EAAWlG,OAAQtB,IAAI,CACxC,IAAMgZ,EAAS,IAAI3T,EAAM,EAAE,EAAE,GAGvB0U,EAAOnU,GAFW,IAAIP,EAAMmC,EAAWxH,GAAG9C,EAAImc,EAAgBrZ,GAAG9C,EAAGsK,EAAWxH,GAAG7C,EAAIkc,EAAgBrZ,GAAG7C,EAC7EqK,EAAWxH,GAAG5C,EAAIic,EAAgBrZ,GAAG5C,GACjC4b,GAAQ,EAC9Ca,IAASja,EAASI,GAAG9C,EAAE,GAAK6c,EAC5B,IAEMC,EAAOpU,GAFW,IAAIP,EAAMmC,EAAWxH,GAAG9C,EAAImc,EAAgBrZ,GAAG9C,EAAGsK,EAAWxH,GAAG7C,EAAIkc,EAAgBrZ,GAAG7C,EAC7EqK,EAAWxH,GAAG5C,EAAGic,EAAgBrZ,GAAG5C,GAC/B4b,GACvCc,IAASla,EAASI,GAAGzC,OAAO,GAAGyc,EAEjCJ,EAAK5Q,IAAK6Q,EAAKC,GAIf,IADA,IAAIG,EAAK,EACDja,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAI,CAEtC,IAAMgZ,EAAS,IAAI3T,EAAM,EAAE,EAAE,GAKvB2U,GAJalU,GAAWkT,EAAQxR,EAAWxH,IAIpC4F,GAFW,IAAIP,EAAMmC,EAAWxH,GAAG9C,EAAImc,EAAgBrZ,GAAG9C,EAAGsK,EAAWxH,GAAG7C,EAAIkc,EAAgBrZ,GAAG7C,EACzEqK,EAAWxH,GAAG5C,EAAIic,EAAgBrZ,GAAG5C,GACpC4b,IACvCiB,EAAKva,KAAKiF,IAzGP,GAyGeiV,GAAK,EAAEA,EAAGla,KAAKqG,KAAKiU,IAAO/Q,GAAMrD,GAAS4B,EAAWxH,GAAIgZ,IAE3EpZ,EAASI,GAAGpC,KAAKgC,EAASI,GAAG9C,EAAI+c,EAAGzS,EAAWxH,GAAG9C,GAClD0C,EAASI,GAAGnC,KAAK+B,EAASI,GAAG7C,EAAI8c,EAAGzS,EAAWxH,GAAG7C,GAClDyC,EAASI,GAAGlC,KAAK8B,EAASI,GAAG5C,EAAI6c,EAAGzS,EAAWxH,GAAG5C,GAGlDic,EAAgBrZ,GAAKwH,EAAWxH,GAGhCoY,EAAO1Y,KAAKiF,IAAIyT,EAAMxY,EAASI,GAAG9C,GAClCmb,EAAO3Y,KAAKiF,IAAI0T,EAAMzY,EAASI,GAAG7C,GAClCmxB,EAAO5uB,KAAKiF,IAAI2pB,EAAM1uB,EAASI,GAAG5C,GAClCkb,EAAO1Y,EAASI,GAAG9C,EAAGob,EAAM1Y,EAASI,GAAG9C,EAAGob,EAC3CC,EAAO3Y,EAASI,GAAG7C,EAAIob,EAAM3Y,EAASI,GAAG7C,EAAGob,EAC5CgW,EAAO3uB,EAASI,GAAG5C,EAAImxB,EAAM3uB,EAASI,GAAG5C,EAAGmxB,EAE5CxV,EAAgB3Y,KAAK,CAACR,EAASI,GAAG9C,EAAG0C,EAASI,GAAG7C,EAAGyC,EAASI,GAAG5C,IAElE0a,EAAe1X,KAAK,EAAEgY,GAAMC,GAAOiW,EAAM9W,IAAIY,EAAKE,GAAOb,IAAIY,EAAKE,GAAOd,IAAI6W,EAAKC,KAClF1f,EAAWzO,KAAK2Y,GAChBpS,GAAG,EAGL,IAAI,IAAI3G,EAAI,EAAGA,EAAI6O,EAAWvN,OAAQtB,IACpC,IAAI,IAAIqH,EAAI,EAAGA,EAAIwH,EAAW7O,GAAGsB,OAAQ+F,IACvCwH,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GACrF6O,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GACrF6O,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GAGrFoY,EAAO3V,IACP4V,EAAO5V,IACP6rB,EAAO7rB,IACP6V,EAAO,EACPC,EAAO,EACPgW,EAAO,EACX,IANA,IAMQvuB,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCoY,EAAO1Y,KAAKiF,IAAI/E,EAASI,GAAG9C,EAAGkb,GAC/BC,EAAO3Y,KAAKiF,IAAI/E,EAASI,GAAG7C,EAAGkb,GAC/BiW,EAAO5uB,KAAKiF,IAAI/E,EAASI,GAAG5C,EAAGkxB,GAC/BhW,EAAO5Y,KAAKgD,IAAI9C,EAASI,GAAG9C,EAAGob,GAC/BC,EAAO7Y,KAAKgD,IAAI9C,EAASI,GAAG7C,EAAGob,GAC/BgW,EAAO7uB,KAAKgD,IAAI9C,EAASI,GAAG5C,EAAGmxB,GAEjC,IAAI,IAAIvuB,EAAI,EAAGA,EAAGJ,EAAS0B,OAAQtB,IACjCJ,EAASI,GAAG9C,GAAK0C,EAASI,GAAG9C,GAAMkb,IAAUZ,GAAGc,GAAOF,IACvDxY,EAASI,GAAG7C,GAAKyC,EAASI,GAAG7C,GAAMkb,IAAUZ,GAAGc,GAASF,IACzDzY,EAASI,GAAG5C,GAAKwC,EAASI,GAAG5C,GAAMkxB,IAAU7W,GAAG8W,GAASD,IAG3D,MAAO,CAAC1uB,EAAUiP,GC0CqB6f,CAAcrxB,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,MACvEhD,KAAK2W,MAAMU,MAAOrX,KAAK2W,MAAMW,OAAQtX,KAAK2W,MAAM/M,WAAY5J,KAAKkY,IAAIvB,MAAMuD,SAAS4C,aAF7E,mBACItL,GADJ,WAGnByE,GAAmBjW,KAAM,EAAGwR,EAAWvN,OAAQuN,K,iDAI/C,IAAMf,EFxMH,SAA4BlO,EAASS,EAAO0G,EAAiBC,EAAiBC,EAAYsQ,GAG/F,IAAMmB,EAAQzR,EACRuQ,EAAIzQ,EAAiB,EACrB0Q,EAAIzQ,EAAiB,EAE3B8B,GAAKyO,EAAS6B,GACdrQ,GAAKwO,EAASxO,GACdC,GAAMuO,EAASvO,IACfC,GAAQsO,EAAStO,MAYjB,IAPA,IAAItC,EAAI,EACJkI,EAAa,GACbiJ,EAAiB,GAIjBuB,EAAkB,GACdrZ,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCqZ,EAAgBjZ,KAAK,IAAIiF,EAAM,EAAE,EAAE,IAGrC,KAAMsB,EAAG+R,GAAM,CAIb,IAHA,IAAIlR,EAAa,GAGTxH,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAK,CAGvC,IAFA,IAAI+X,EAAI,IAAI1S,EAAM,EAAE,EAAE,GAEdgC,EAAI,EAAGA,EAAIzH,EAAS0B,OAAQ+F,IAClC,GAAGrH,IAAKqH,EAAE,CAER,IAAMiS,EAAgB5T,GAAS9F,EAASI,GAAIJ,EAASyH,IACrD0Q,EAAEG,UAAUoB,GAGhB9R,EAAWpH,KAAK2X,GAIlB,IAAI,IAAI/X,EAAI,EAAGA,EAAIK,EAAMiB,OAAQtB,IAAK,CACpC,IAAMzB,EAAI8B,EAAML,GACVuZ,EAAmBvT,GAASpG,EAASrB,EAAEJ,OAAQyB,EAASrB,EAAEH,MAC1Dob,EAAuB,EAAED,EAAiB,IAAKA,EAAiB,IAAKA,EAAiB,IAC5F/R,EAAWjJ,EAAEJ,OAAO+Z,UAAUqB,GAC9B/R,EAAWjJ,EAAEH,KAAK8Z,UAAUsB,GAK9B,IAAwB,IAArBjC,EAASkC,QAKV,IAHA,IAAM3Z,EAAgB,IAAN6G,EAAU,CAAC6Q,EAAE,EAAGC,EAAE,EAAGA,EAAE,GAAI,CAAED,EAAE,EAAK,EAAGM,EAAenR,EAAE,GAAG,GAAK8Q,EAAE,EAAK,EAAGK,EAAenR,EAAE,GAAG,GAAM8Q,EAAE,EAAK,EAAGK,EAAenR,EAAE,GAAG,IAC5I+S,EAAe,IAAIrU,EAAMvF,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAEpDE,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAK,CACvC,IAAM2Z,EAAgBzQ,GAAStJ,EAASI,GAAI0Z,GAE5ClS,EAAWxH,GAAGkY,UAAUyB,GAkB5B,IAbA,IAUIC,EAVEb,EAAkB,GACpBX,EAAO3V,IACP4V,EAAO5V,IACP6rB,EAAO7rB,IACP6V,EAAO,EACPC,EAAO,EACPgW,EAAO,EAKP1U,EAAO,EACPC,EAAO,EACH9Z,EAAI,EAAGA,EAAIwH,EAAWlG,OAAQtB,IAAI,CACxC,IAAMgZ,EAAS,IAAI3T,EAAM,EAAE,EAAE,GAGvB0U,EAAOnU,GAFW,IAAIP,EAAMmC,EAAWxH,GAAG9C,EAAImc,EAAgBrZ,GAAG9C,EAAGsK,EAAWxH,GAAG7C,EAAIkc,EAAgBrZ,GAAG7C,EAC7EqK,EAAWxH,GAAG5C,EAAIic,EAAgBrZ,GAAG5C,GACjC4b,GAAQ,EAC9Ca,IAASja,EAASI,GAAG9C,EAAE,GAAK6c,EAC5B,IAEMC,EAAOpU,GAFW,IAAIP,EAAMmC,EAAWxH,GAAG9C,EAAImc,EAAgBrZ,GAAG9C,EAAGsK,EAAWxH,GAAG7C,EAAIkc,EAAgBrZ,GAAG7C,EAC7EqK,EAAWxH,GAAG5C,EAAGic,EAAgBrZ,GAAG5C,GAC/B4b,GACvCc,IAASla,EAASI,GAAGzC,OAAO,GAAGyc,EAEjCJ,EAAK5Q,IAAK6Q,EAAKC,GAIf,IADA,IAAIG,EAAK,EACDja,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAAI,CAEtC,IAAMgZ,EAAS,IAAI3T,EAAM,EAAE,EAAE,GAKvB2U,GAJalU,GAAWkT,EAAQxR,EAAWxH,IAIpC4F,GAFW,IAAIP,EAAMmC,EAAWxH,GAAG9C,EAAImc,EAAgBrZ,GAAG9C,EAAGsK,EAAWxH,GAAG7C,EAAIkc,EAAgBrZ,GAAG7C,EACzEqK,EAAWxH,GAAG5C,EAAIic,EAAgBrZ,GAAG5C,GACpC4b,IACvCiB,EAAKva,KAAKiF,IA3GP,GA2GeiV,GAAK,EAAEA,EAAGla,KAAKqG,KAAKiU,IAAO/Q,GAAMrD,GAAS4B,EAAWxH,GAAIgZ,IAE3EpZ,EAASI,GAAGpC,KAAKgC,EAASI,GAAG9C,EAAI+c,EAAGzS,EAAWxH,GAAG9C,GAClD0C,EAASI,GAAGnC,KAAK+B,EAASI,GAAG7C,EAAI8c,EAAGzS,EAAWxH,GAAG7C,GAClDyC,EAASI,GAAGlC,KAAK8B,EAASI,GAAG5C,EAAI6c,EAAGzS,EAAWxH,GAAG5C,GAGlDic,EAAgBrZ,GAAKwH,EAAWxH,GAGhCoY,EAAO1Y,KAAKiF,IAAIyT,EAAMxY,EAASI,GAAG9C,GAClCmb,EAAO3Y,KAAKiF,IAAI0T,EAAMzY,EAASI,GAAG7C,GAClCmxB,EAAO5uB,KAAKiF,IAAI2pB,EAAM1uB,EAASI,GAAG5C,GAClCkb,EAAO1Y,EAASI,GAAG9C,EAAGob,EAAM1Y,EAASI,GAAG9C,EAAGob,EAC3CC,EAAO3Y,EAASI,GAAG7C,EAAIob,EAAM3Y,EAASI,GAAG7C,EAAGob,EAC5CgW,EAAO3uB,EAASI,GAAG5C,EAAImxB,EAAM3uB,EAASI,GAAG5C,EAAGmxB,EAE5CxV,EAAgB3Y,KAAK,CAACR,EAASI,GAAG9C,EAAG0C,EAASI,GAAG7C,EAAGyC,EAASI,GAAG5C,IAElE0a,EAAe1X,KAAK,EAAEgY,GAAMC,GAAOiW,EAAM9W,IAAIY,EAAKE,GAAOb,IAAIY,EAAKE,GAAOd,IAAI6W,EAAKC,KAClF1f,EAAWzO,KAAK2Y,GAChBpS,GAAG,EAGL,IAAI,IAAI3G,EAAI,EAAGA,EAAI6O,EAAWvN,OAAQtB,IACpC,IAAI,IAAIqH,EAAI,EAAGA,EAAIwH,EAAW7O,GAAGsB,OAAQ+F,IACvCwH,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GACrF6O,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GACrF6O,EAAW7O,GAAGqH,GAAG,IAAMwH,EAAW7O,GAAGqH,GAAG,GAAKyQ,EAAe9X,GAAG,IAAI8X,EAAe9X,GAAG,GAGrFoY,EAAO3V,IACP4V,EAAO5V,IACP6rB,EAAO7rB,IACP6V,EAAO,EACPC,EAAO,EACPgW,EAAO,EACX,IANA,IAMQvuB,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCoY,EAAO1Y,KAAKiF,IAAI/E,EAASI,GAAG9C,EAAGkb,GAC/BC,EAAO3Y,KAAKiF,IAAI/E,EAASI,GAAG7C,EAAGkb,GAC/BiW,EAAO5uB,KAAKiF,IAAI/E,EAASI,GAAG5C,EAAGkxB,GAC/BhW,EAAO5Y,KAAKgD,IAAI9C,EAASI,GAAG9C,EAAGob,GAC/BC,EAAO7Y,KAAKgD,IAAI9C,EAASI,GAAG7C,EAAGob,GAC/BgW,EAAO7uB,KAAKgD,IAAI9C,EAASI,GAAG5C,EAAGmxB,GAEjC,IAAI,IAAIvuB,EAAI,EAAGA,EAAGJ,EAAS0B,OAAQtB,IACjCJ,EAASI,GAAG9C,GAAK0C,EAASI,GAAG9C,GAAMkb,IAAUZ,GAAGc,GAAOF,IACvDxY,EAASI,GAAG7C,GAAKyC,EAASI,GAAG7C,GAAMkb,IAAUZ,GAAGc,GAASF,IACzDzY,EAASI,GAAG5C,GAAKwC,EAASI,GAAG5C,GAAMkxB,IAAU7W,GAAG8W,GAASD,IAG3D,MAAO,CAAC1uB,EAAUiP,GE8CD8f,CAAmBtxB,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,MACtDhD,KAAK2W,MAAMU,MAAOrX,KAAK2W,MAAMW,OAAQtX,KAAK2W,MAAM/M,WAAY5J,KAAKkY,IAAIvB,MAAMuD,SAAS8C,kBAC1FxL,EAAaf,EAAO,GAEHA,EAAO,GAC9BwF,GAAmBjW,KAAM,EAAGwR,EAAWvN,OAAQuN,K,yLAe/B,IAAD,EACoBhE,GAAQxN,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,MAAO,EAChF,CAAChD,KAAKkY,IAAIvB,MAAMuD,SAAS1M,QAAQvH,IAAKjG,KAAKkY,IAAIvB,MAAMuD,SAAS1M,QAAQtH,MACpElG,KAAKkY,IAAIvB,MAAMuD,SAAS1M,QAAQrH,OAHrB,mBACRqL,EADQ,M,yCAKfgM,CADaxd,KAJE,KAKkBwR,K,qCAIjC,IAAMA,EAAa3C,GAAK7O,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,MAAO,EAC7D,CAAChD,KAAKkY,IAAIvB,MAAMuD,SAASrL,KAAK5I,IAAKjG,KAAKkY,IAAIvB,MAAMuD,SAASrL,KAAK3I,MAChElG,KAAKkY,IAAIvB,MAAMuD,SAASrL,KAAK1I,OAC/B8P,GAAmBjW,KAAK,EAAEwR,EAAWvN,OAAOuN,K,qCAI5C,IAAMA,EAAa,GACnBxR,KAAKkY,IAAI5B,SAAS,CAACmH,SAAQ,IAK3B,IAJA,IAAMhO,EAAiB,CAACzP,KAAKkY,IAAIvB,MAAMuD,SAAS3K,KAAKtJ,IAAKjG,KAAKkY,IAAIvB,MAAMuD,SAAS3K,KAAKrJ,MACrElG,KAAKkY,IAAIvB,MAAMuD,SAAS3K,KAAKpJ,MAC3CnD,EAAQhD,KAAK2W,MAAM3T,MAEfL,EAAI,EAAGA,EAA0C,IAArC3C,KAAKkY,IAAIvB,MAAMuD,SAAS3K,KAAKmO,QAAc1d,KAAKkY,IAAIvB,MAAMgH,eAAgBhb,IAAI,CAAC,IAAD,EACtE4M,GAAKvP,KAAK2W,MAAMpU,SACxCS,EAAOhD,KAAKkY,IAAIvB,MAAMlJ,UAAWgC,GAF6D,mBAC/FzM,EAD+F,UAGhGwO,EAAWzO,KAAKC,GAElBiT,GAAmBjW,KAAM,EAAGwR,EAAWvN,OAAQuN,K,8CAI/C,IAAMA,EAAa,GACnBxR,KAAKkY,IAAI5B,SAAS,CAACmH,SAAQ,IAI3B,IAHA,IAAIG,EAAsB5d,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc7N,YAC1D8N,EAAkBF,EAEhBjb,EAAI,EAAGA,EAAmD,IAA9C3C,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAcH,QAAc1d,KAAKkY,IAAIvB,MAAMgH,eAAgBhb,IAC9F,KAOT,IALA,IAGIK,EAAQhD,KAAK2W,MAAM3T,MAEfL,EAAI,EAAGA,EAAmD,IAA9C3C,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAcH,QAAc1d,KAAKkY,IAAIvB,MAAMgH,eAAgBhb,IAAI,CAAC,IAAD,EAC9EoN,GAAc/P,KAAK2W,MAAMpU,SAChDS,EAAOhD,KAAKkY,IAAIvB,MAAMlJ,UAAWzN,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc5Y,WACvEjF,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc3Y,SAAU0Y,EAChDG,EAAiBD,EACjB9d,KAAKkY,IAAIvB,MAAMuD,SAAS2D,cAAc1N,YAL+D,mBACxGnN,EADwG,UAMzGwO,EAAWzO,KAAKC,GAChB4a,GAAsB,KAExB3H,GAAmBjW,KAAM,EAAGwR,EAAWvN,OAAQuN,K,qCAI/C,IAAMA,EAAa,GACnBxR,KAAKkY,IAAI5B,SAAS,CAACmH,SAAQ,IAK3B,IAJA,IAAMhO,EAAiB,CAACzP,KAAKkY,IAAIvB,MAAMuD,SAAS3J,KAAKtK,IAAKjG,KAAKkY,IAAIvB,MAAMuD,SAAS3J,KAAKrK,MACrElG,KAAKkY,IAAIvB,MAAMuD,SAAS3J,KAAKpK,MAC3CnD,EAAQhD,KAAK2W,MAAM3T,MAEfL,EAAI,EAAGA,EAA0C,IAArC3C,KAAKkY,IAAIvB,MAAMuD,SAAS3J,KAAKmN,QAAc1d,KAAKkY,IAAIvB,MAAMgH,eAAgBhb,IAAI,CAAC,IAAD,EACtE4N,GAAKvQ,KAAK2W,MAAMpU,SACxCS,EAAOhD,KAAKkY,IAAIvB,MAAMlJ,UAAWgC,GAF6D,mBAC/FzM,EAD+F,UAGhGwO,EAAWzO,KAAKC,GAElBiT,GAAmBjW,KAAM,EAAGwR,EAAWvN,OAAQuN,K,6CAG1B,IAAD,EACWH,GAAerR,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,MAAOhD,KAAKkY,IAAIvB,MAAMlJ,WADhF,mBACH+D,GADG,WAEpByE,GAAmBjW,KAAK,EAAEwR,EAAWvN,OAAOuN,K,2CAK5C,IAAMA,EAAa0B,GAAWlT,KAAK2W,MAAMpU,SAAUvC,KAAK2W,MAAM3T,OAC9DiT,GAAmBjW,KAAM,EAAGwR,EAAWvN,OAAQuN,K,sCAIjB,IAA3BxR,KAAKkY,IAAIvB,MAAM8G,SACW,WAAxBzd,KAAK2W,MAAMc,UAAuBzX,KAAKge,8BACf,wBAAxBhe,KAAK2W,MAAMc,UAAoCzX,KAAKie,mBAC5B,gBAAxBje,KAAK2W,MAAMc,UAA4BzX,KAAKke,sBACpB,gBAAxBle,KAAK2W,MAAMc,UAA4BzX,KAAKme,sBACpB,qBAAxBne,KAAK2W,MAAMc,UAAiCzX,KAAKoe,2BACzB,SAAxBpe,KAAK2W,MAAMc,UAAqBzX,KAAKqe,eACb,oBAAxBre,KAAK2W,MAAMc,UAAgCzX,KAAKse,0BACxB,uBAAxBte,KAAK2W,MAAMc,UAAmCzX,KAAKue,6BAC3B,YAAxBve,KAAK2W,MAAMc,UAAwBzX,KAAKwe,kBAChB,SAAxBxe,KAAK2W,MAAMc,UAAqBzX,KAAKye,eACb,SAAxBze,KAAK2W,MAAMc,UAAqBzX,KAAK0e,eACb,kBAAxB1e,KAAK2W,MAAMc,UAA8BzX,KAAK2e,wBACtB,SAAxB3e,KAAK2W,MAAMc,UAAqBzX,KAAK4e,eACb,iBAAxB5e,KAAK2W,MAAMc,UAA6BzX,KAAK6e,uBACrB,UAAxB7e,KAAK2W,MAAMc,UAAsBzX,KAAK8e,sBAGzC7I,GAAmBjW,KAAMA,KAAK2W,MAAMH,sBAAuBxW,KAAK2W,MAAMJ,kBAAkBtS,OAAO,EAAG,Q,uCAKrF,IAAD,OACVpE,EAAI,EACRG,KAAKkY,IAAI5B,SAAS,CAACmH,SAAQ,IAG3B,IAFA,IAAM3c,EAAQd,KAAK2W,MAAMH,sBACnBzV,EAAMf,KAAK2W,MAAMF,eAJT,WAKNxM,GAENpK,EAAIkf,YAAW,WAEb,IADA,IAAMxc,EAAW,EAAKoU,MAAMpU,SACpBI,EAAI,EAAGA,EAAGJ,EAAS0B,OAAQtB,IACjCJ,EAASI,GAAGqc,UAAU,EAAKrI,MAAMJ,kBAAkBtM,GAAGtH,IAExD,EAAK2T,SAAS,CAAC/T,SAAUA,EAAUiU,sBAAuB,EAAKG,MAAMH,sBAAsB,IACxFvM,IAAMlJ,EAAI,GAAG,EAAKuV,SAAS,CAACI,QAAQ,EAAMF,sBAAuBzV,OAElEkJ,EAAEnJ,GAAS,EAAKoX,IAAIvB,MAAMgH,iBAVxB1T,EAAInJ,EAAOmJ,EAAIlJ,EAAKkJ,IAAK,EAAzBA,GAYRjK,KAAKsW,SAAS,CAACkB,YAAa3X,M,wCAGZ,IAAD,OACXA,EAAI,EACRG,KAAKkY,IAAI5B,SAAS,CAACmH,SAAQ,IAK3B,IAHA,IAAM3c,EAAQd,KAAK2W,MAAMH,sBACnBzV,EAAMf,KAAK2W,MAAMF,eALR,WAOPxM,GACNpK,EAAIkf,YAAW,WACI,EAAKpI,MAAMpU,SACf,EAAKoU,MAAM3T,MADxB,IAEMwO,EAAa,EAAKmF,MAAMJ,kBAE9B,EAAKD,SAAS,CAAC/T,SAAUiP,EAAWvH,GAAG1H,SAAUS,MAAMwO,EAAWvH,GAAGjH,MAAOwT,sBAAuB,EAAKG,MAAMH,sBAAwB,IAEnIvM,IAAMlJ,EAAI,GAEX,EAAKuV,SAAS,CAACI,QAAQ,EAAKF,sBAAuBzV,OAInDkJ,EAAEnJ,GAAS,EAAKoX,IAAIvB,MAAMgH,iBAdxB1T,EAAGnJ,EAAOmJ,EAAIlJ,EAAKkJ,IAAK,EAAxBA,GAgBRjK,KAAKsW,SAAS,CAACkB,YAAa3X,M,iCAGnBwW,GAAM,IAAD,OACVxW,EAAI,EACRG,KAAKkY,IAAI5B,SAAS,CAACmH,SAAQ,IAI3B,IAFA,IAAM3c,EAAQd,KAAK2W,MAAMH,sBACnBzV,EAAMf,KAAK2W,MAAMF,eALT,WAMNxM,GACNpK,EAAIkf,YAAW,WACI,EAAKpI,MAAMpU,SACf,EAAKoU,MAAM3T,MADxB,IAEMwO,EAAa,EAAKmF,MAAMJ,kBAE9B,EAAKD,SAAS,CAACtT,MAAOwO,EAAWvH,GAAIuM,sBAAuB,EAAKG,MAAMH,sBAAwB,IAE5FvM,IAAMlJ,EAAI,GAEX,EAAKuV,SAAS,CAACI,QAAQ,EAAKF,sBAAuBzV,OAInDkJ,EAAEnJ,GAAS,EAAKoX,IAAIvB,MAAMgH,iBAdxB1T,EAAGnJ,EAAOmJ,EAAIlJ,EAAKkJ,IAAK,EAAxBA,GAiBRjK,KAAKsW,SAAS,CAACkB,YAAa3X,M,qCAI5B,IAAIkwB,EAAW,IAAII,KAAoB,CAACjZ,OAAQlX,KAAKkX,OAAO+B,QAAShY,OAAM,IAC3E8uB,EAASK,QAAQpwB,KAAK2W,MAAMU,MAAOrX,KAAK2W,MAAMW,QAC9C,IAAIuY,EAAQ,IAAIM,KACZL,EAAS,IAAIK,KAAwB,GAAInwB,KAAK2W,MAAMU,MAAMrX,KAAK2W,MAAMW,OAAQ,GAAK,KAClF+Y,EAAa,IAAIF,KAAkB,SAAW,GAClDE,EAAWC,SAAStsB,IAAI,EAAE,EAAE,GAC5B8rB,EAAOthB,IAAI6hB,GACXP,EAAOQ,SAASvwB,EAAI,IAAIC,KAAK2W,MAAMiZ,MACnCE,EAAOQ,SAASzwB,EAAIG,KAAK2W,MAAMU,MAAM,EACrCyY,EAAOQ,SAASxwB,EAAIE,KAAK2W,MAAMW,OAAO,EACtCuY,EAAMrhB,IAAIshB,GACVC,EAASQ,OAAOV,EAAOC,GAUvB,IAtBY,MAcaV,GAAsBpvB,KAAK2W,MAAMU,MAAMrX,KAAK2W,MAAMW,OACzEtX,KAAK2W,MAAMiZ,MAAO5vB,KAAKkY,IAAIvB,MAAMnV,KAAMxB,KAAKkY,IAAIvB,MAAMlV,KAAMzB,KAAKkY,IAAIvB,MAAM1U,UACrEjC,KAAK2W,MAAMhV,WACX,CAAC3B,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WAAYzY,KAAKkY,IAAIvB,MAAM+B,WACpE,CAAC1Y,KAAKkY,IAAIvB,MAAMgC,OAAQ3Y,KAAKkY,IAAIvB,MAAMiC,SAAU5Y,KAAKkY,IAAIvB,MAAMkC,SAChE7Y,KAAKkY,IAAIvB,MAAMmC,WAAY9Y,KAAKkY,IAAIvB,MAAM5U,QAAS/B,KAAKkY,IAAIvB,MAAM3U,SAnB9D,mBAcLO,EAdK,KAcIS,EAdJ,KAoBNgtB,EAAU,GAERrtB,EAAI,EAAGA,EAAGJ,EAAS0B,OAAQtB,IAAI,CACvBJ,EAASI,GAAGvC,MAA1B,IAGIowB,EAAW,IAAIL,KAAqB5tB,EAASI,GAAGxC,KAAK,EAAE,GACvDswB,EAAW,IAAIN,KAA0B,IAAIA,KAAY5tB,EAASI,GAAGvC,QACrEswB,EAAS,IAAIP,KAAWK,EAAUC,GAChC/vB,EAAI6B,EAASI,GACnB+tB,EAAOJ,SAAStsB,IAAItD,EAAEb,EAAGa,EAAEZ,EAAGY,EAAEX,GAChCiwB,EAAQjtB,KAAK2tB,GACbb,EAAMrhB,IAAIkiB,GAKZ,IAFA,IAAMT,EAAQ,GAENjmB,EAAI,EAAGA,EAAIhH,EAAMiB,OAAQ+F,IAAI,EAC7BymB,EAAW,IAAIN,KAAwB,CAAC/vB,MAAQ,YAC3CuwB,QAAU,GACnB,IAAIC,EAAS,GACP1vB,EAAI8B,EAAMgH,GAEhB4mB,EAAO7tB,KAAKitB,EAAQ9uB,EAAEJ,OAAOwvB,UAC7BM,EAAO7tB,KAAKitB,EAAQ9uB,EAAEH,KAAKuvB,UACvBE,GAAW,IAAIL,MAAuBU,cAAcD,GAAxD,IAGIE,EAAO,IAAIX,KAAWK,EAAUC,GACpCZ,EAAMrhB,IAAIsiB,GACVb,EAAMltB,KAAK+tB,GAEff,EAASQ,OAAOV,EAAMC,GAEtB9vB,KAAKsW,SAAS,CACZ/T,SAAUA,EACVS,MAAOA,EACP6sB,MAAOA,EACPC,OAAQA,EACRC,SAAUA,EACVC,QAASA,EACTC,MAAOA,IAGTjwB,KAAKkY,IAAI5B,SAAS,CAAC9U,KAAMe,EAAS0B,OAAQxC,KAAMuB,EAAMiB,W,iCAG7CvD,GACT,IAAM6G,EAAQlF,KAAK4d,KAAKvf,GACxBV,KAAK2W,MAAMmZ,OAAOQ,SAASvwB,GAAK,GAAGwH,EACnCvH,KAAK2W,MAAMoZ,SAASQ,OAAOvwB,KAAK2W,MAAMkZ,MAAO7vB,KAAK2W,MAAMmZ,SACxB,IAA7B9vB,KAAK2W,MAAM4a,eAAyBvxB,KAAKsW,SAAS,CAACib,eAAe,M,oCAIrEvxB,KAAK2W,MAAMmZ,OAAOQ,SAASvwB,EAAuB,IAAnBC,KAAK2W,MAAMiZ,MAC1C5vB,KAAK2W,MAAMmZ,OAAOQ,SAASzwB,EAAIG,KAAK2W,MAAMU,MAAM,EAChDrX,KAAK2W,MAAMmZ,OAAOQ,SAASxwB,EAAIE,KAAK2W,MAAMW,OAAO,EACjDtX,KAAK2W,MAAMoZ,SAASQ,OAAOvwB,KAAK2W,MAAMkZ,MAAO7vB,KAAK2W,MAAMmZ,QACxD9vB,KAAKsW,SAAS,CAACib,eAAc,M,gCAGrBrwB,GACRlB,KAAK2W,MAAMoB,eAAiB7W,EAAEwe,QAC9B1f,KAAK2W,MAAMqB,eAAiB9W,EAAEye,QAC9B3f,KAAK2W,MAAMmB,UAAW,I,gCAItB9X,KAAK2W,MAAMmB,UAAW,I,mCAGX5W,GACX,GAAGlB,KAAK2W,MAAMmB,SAAS,CACrB,IAAM8H,EAAS1e,EAAEwe,QAAU1f,KAAK2W,MAAMoB,eAChC8H,EAAS3e,EAAEye,QAAU3f,KAAK2W,MAAMqB,eACtChY,KAAK2W,MAAMoB,eAAiB7W,EAAEwe,QAC9B1f,KAAK2W,MAAMqB,eAAiB9W,EAAEye,QAC9B3f,KAAK2W,MAAMmZ,OAAOQ,SAASxwB,GAAK+f,EAChC7f,KAAK2W,MAAMmZ,OAAOQ,SAASzwB,IAAM+f,EACjC5f,KAAK2W,MAAMoZ,SAASQ,OAAOvwB,KAAK2W,MAAMkZ,MAAO7vB,KAAK2W,MAAMmZ,SACxB,IAA7B9vB,KAAK2W,MAAM4a,eAAyBvxB,KAAKsW,SAAS,CAACib,eAAc,O,kCAI5D7wB,GAEVV,KAAKsW,SAAS,CAACmB,SAAU/W,IAChB,SAANA,GAAsB,SAANA,GACT,kBAANA,GAA+B,kBAANA,GACvBV,KAAKsW,SAAS,CAACM,MAAM,QACQ,UAA1B5W,KAAK2W,MAAMhV,YAAwB3B,KAAKif,kBAAkB,UAErD,WAANve,GAAwB,gBAANA,GAA6B,gBAANA,GACtB,qBAANA,EACjBV,KAAKsW,SAAS,CAACM,MAAM,WAEX,YAANlW,GAAyB,SAANA,GAAsB,iBAANA,GACD,UAANA,GAChCV,KAAKsW,SAAS,CAACM,MAAM,e,wCAITlW,I,uCAEhBwe,CADalf,KACeU,K,wCAK5B,IADA,IAAI4e,EAAKtf,KAAK2W,MAAMa,YACd8H,GACJC,cAAcD,GACdA,M,wCAKFtf,KAAKsW,SAAS,CAACC,kBAAmB,GAAIG,QAAQ,IAC9C1W,KAAKwf,kBACLxf,KAAKkY,IAAI5B,SAAS,CAACmH,SAAS,M,uCAI5Bzd,KAAKsW,SAAS,CAACI,QAAO,IACtB1W,KAAKwf,oB,sCAOL,IAAqB,KAFGC,GAAU,CAACzf,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WAAYzY,KAAKkY,IAAIvB,MAAM+B,WAC5E,CAAC1Y,KAAKkY,IAAIvB,MAAMgC,OAAQ3Y,KAAKkY,IAAIvB,MAAMiC,SAAU5Y,KAAKkY,IAAIvB,MAAMkC,UAChE,CAMxB,IALA,IAAM/O,EAAe9J,KAAK2W,MAAMpU,SAAS4B,QACnCgB,EAAaG,GAAgBtF,KAAK2W,MAAMpU,UAC1CwD,EAAWM,GAAoB,CAACrG,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WACxCzY,KAAKkY,IAAIvB,MAAM+B,WAAY,CAAC1Y,KAAKkY,IAAIvB,MAAMgC,OAC3C3Y,KAAKkY,IAAIvB,MAAMiC,SAAU5Y,KAAKkY,IAAIvB,MAAMkC,SAAU1T,GAC9ExC,EAAI,EAAGA,EAAImH,EAAa7F,OAAQtB,IACtCmH,EAAanH,GAAGvC,MAAQmG,GAAauD,EAAanH,GAAGzC,OAAQiF,EAAYY,GAG3E,IADA,IAAMgE,EAAY,GACVC,EAAI,EAAGA,EAAIhK,KAAK2W,MAAM3T,MAAMiB,OAAQ+F,IAAI,CAC9C,IAAM9I,EAAI,IAAIL,EAAKb,KAAK2W,MAAM3T,MAAMgH,GAAGlJ,MAAOd,KAAK2W,MAAM3T,MAAMgH,GAAGjJ,KAClEG,EAAEC,SAAS,oBACX4I,EAAUhH,KAAK7B,GAEjBlB,KAAKsW,SAAS,CAAC/T,SAAUuH,EAAc9G,MAAO+G,QAE5C,CAGF,IAFA,IAAMD,EAAe9J,KAAK2W,MAAMpU,SAAS4B,QACnC/D,EAAQuN,GAAW,CAAC3N,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WAAYzY,KAAKkY,IAAIvB,MAAM+B,YACrF/V,EAAI,EAAGA,EAAImH,EAAa7F,OAAQtB,IACtCmH,EAAanH,GAAGvC,MAAQA,EAG1B,IADA,IAAM2J,EAAY,GACVC,EAAI,EAAGA,EAAIhK,KAAK2W,MAAM3T,MAAMiB,OAAQ+F,IAAI,CAC9C,IAAM9I,EAAI,IAAIL,EAAKb,KAAK2W,MAAM3T,MAAMgH,GAAGlJ,MAAOd,KAAK2W,MAAM3T,MAAMgH,GAAGjJ,KAClEG,EAAEC,SAAS,oBACX4I,EAAUhH,KAAK7B,GAEjBlB,KAAKsW,SAAS,CAAC/T,SAAUuH,EAAc9G,MAAO+G,IAC9C/J,KAAKsW,SAAS,CAAC/T,SAAUuH,O,yCAK3B,IAAiC,IAA9B9J,KAAKkY,IAAIvB,MAAMmC,WAAqB,CAGrC,IAFA,IACMhP,EAAe9J,KAAK2W,MAAMpU,SAAS4B,QACjCxB,EAAI,EAAGA,EAAImH,EAAa7F,OAAQtB,IAAI,CAC1C,IAAM6uB,EAAW1nB,EAAanH,GAAGxC,KACjCH,KAAK2W,MAAMqZ,QAAQrtB,GAAGyW,MAAMvZ,EAJb,EAI0B2xB,EACzCxxB,KAAK2W,MAAMqZ,QAAQrtB,GAAGyW,MAAMtZ,EALb,EAK0B0xB,EACzCxxB,KAAK2W,MAAMqZ,QAAQrtB,GAAGyW,MAAMrZ,EANb,EAM0ByxB,EAG3CxxB,KAAKsW,SAAS,CAAC/T,SAAUuH,QAEvB,CAGF,IAFA,IAAM3E,EAAaG,GAAgBtF,KAAK2W,MAAMpU,UACxCuH,EAAe9J,KAAK2W,MAAMpU,SAAS4B,QACjCxB,EAAI,EAAGA,EAAImH,EAAa7F,OAAQtB,IACtCmH,EAAanH,GAAGxC,KAAOkC,KAAKC,MAAMgE,GAAYwD,EAAanH,GAAGzC,OAC5DiF,EAAYnF,KAAKkY,IAAIvB,MAAM5U,QAAS/B,KAAKkY,IAAIvB,MAAM3U,SAAS,GAC9DhC,KAAK2W,MAAMqZ,QAAQrtB,GAAGyW,MAAMvZ,EAAIiK,EAAanH,GAAGxC,KAAK,EACrDH,KAAK2W,MAAMqZ,QAAQrtB,GAAGyW,MAAMtZ,EAAIgK,EAAanH,GAAGxC,KAAK,EACrDH,KAAK2W,MAAMqZ,QAAQrtB,GAAGyW,MAAMrZ,EAAI+J,EAAanH,GAAGxC,KAAK,EAEvDH,KAAKsW,SAAS,CAAC/T,SAAUuH,O,uCAO3B,IAAqB,KAFG2V,GAAU,CAACzf,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WAAYzY,KAAKkY,IAAIvB,MAAM+B,WAC5E,CAAC1Y,KAAKkY,IAAIvB,MAAMgC,OAAQ3Y,KAAKkY,IAAIvB,MAAMiC,SAAU5Y,KAAKkY,IAAIvB,MAAMkC,UAChE,CAMxB,IALA,IAAM/O,EAAe9J,KAAK2W,MAAMpU,SAAS4B,QACnCgB,EAAaG,GAAgBtF,KAAK2W,MAAMpU,UAC1CwD,EAAWM,GAAoB,CAACrG,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WACxCzY,KAAKkY,IAAIvB,MAAM+B,WAAY,CAAC1Y,KAAKkY,IAAIvB,MAAMgC,OAC3C3Y,KAAKkY,IAAIvB,MAAMiC,SAAU5Y,KAAKkY,IAAIvB,MAAMkC,SAAU1T,GAC9ExC,EAAI,EAAGA,EAAImH,EAAa7F,OAAQtB,IACtCmH,EAAanH,GAAGvC,MAAQmG,GAAauD,EAAanH,GAAGzC,OAAQiF,EAAYY,GAE3E/F,KAAKsW,SAAS,CAAC/T,SAAUuH,QAEvB,CAGF,IAFA,IAAMA,EAAe9J,KAAK2W,MAAMpU,SAAS4B,QACnC/D,EAAQuN,GAAW,CAAC3N,KAAKkY,IAAIvB,MAAM6B,SAAUxY,KAAKkY,IAAIvB,MAAM8B,WAAYzY,KAAKkY,IAAIvB,MAAM+B,YACrF/V,EAAI,EAAGA,EAAImH,EAAa7F,OAAQtB,IACtCmH,EAAanH,GAAGvC,MAAQA,EAE1BJ,KAAKsW,SAAS,CAAC/T,SAAUuH,O,kCAK3B9J,KAAKwf,kBACL,IAAMW,EAAmB9d,KAAKiF,IAAItH,KAAK2W,MAAMH,sBAAwB,EACnCxW,KAAK2W,MAAMJ,kBAAkBtS,OAAO,GACtEgS,GAAmBjW,KAAMmgB,EAAkBA,EAAiB,EAAG,Q,oCAI/DngB,KAAKwf,kBACL,IAAMW,EAAmB9d,KAAKgD,IAAIrF,KAAK2W,MAAMH,sBAAuB,EAAG,GACvEP,GAAmBjW,KAAMmgB,EAAkBA,EAAiB,EAAG,Q,oCAI/DngB,KAAKwf,kBACL,IAAMW,EAAmB9d,KAAKiF,IAAItH,KAAK2W,MAAMJ,kBAAkBtS,OAAO,EAClEjE,KAAK2W,MAAMH,sBAAwBnU,KAAKC,MAAM,IAAKtC,KAAKkY,IAAIvB,MAAMgH,iBAGtE1H,GAAmBjW,KAAMmgB,GAFe,IAAtBngB,KAAK2W,MAAMD,OAAiByJ,EAAiB,EACrCngB,KAAK2W,MAAMJ,kBAAkBtS,OACD,Q,qCAItDjE,KAAKwf,kBACL,IAAMW,EAAmB9d,KAAKgD,IAAI,EAC9BrF,KAAK2W,MAAMH,sBAAwBnU,KAAKC,MAAM,IAAKtC,KAAKkY,IAAIvB,MAAMgH,iBAGtE1H,GAAmBjW,KAAMmgB,GAFe,IAAtBngB,KAAK2W,MAAMD,OAAiByJ,EAAiB,EACvCngB,KAAK2W,MAAMJ,kBAAkBtS,OAAO,EACN,Q,wCAItDjE,KAAKwf,kBAELxf,KAAKsW,SAAS,CAACE,sBAAsB,IACrCP,GAAmBjW,KAAM,EAAG,EAAE,Q,kCAG9BA,KAAKwf,kBACL,IAAMW,EAAmBngB,KAAK2W,MAAMJ,kBAAkBtS,OAAO,EAC7DgS,GAAmBjW,KAAMmgB,EAAkBA,EAAiB,EAAG,Q,kFAI/DC,CAAwBpgB,Q,oFAIxBqgB,CAA0BrgB,Q,kCAQ1B,IAJA,IAAIsgB,EAAa,+BACX/d,EAAWvC,KAAK2W,MAAMpU,SACtBS,EAAQhD,KAAK2W,MAAM3T,MAEjBL,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClC2d,GAAc/d,EAASI,GAAG4d,QAE5B,IAAI,IAAI5d,EAAI,EAAGA,EAAIK,EAAMiB,OAAQtB,IAC/B2d,GAAetd,EAAML,GAAG4d,QAE1B,IAAIC,EAAOC,SAASC,cAAc,KAClCF,EAAKG,KAAOL,EACZE,EAAKI,SAAW,cAChBH,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACLN,SAASI,KAAKG,YAAYR,K,6BAIrBS,GACL,IACMC,EADkBlhB,KAAK2W,MAAMoZ,SAAS0B,WACdtQ,UAAU,WAAWF,GAC/CT,EAAOC,SAASC,cAAc,KAClCF,EAAKG,KAAOO,EACZV,EAAKI,SAAW,WAAWK,EAC3BR,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACLN,SAASI,KAAKG,YAAYR,K,+BAGnB,IAAD,OACN,OAAO,6BACG,4BAAQa,MAAS,CAACC,UAA6B,EAAlBthB,KAAKiX,MAAMK,OAAS,GAAGtX,KAAKiX,MAAMK,OAAO,IACtE8J,UAAY,WACZG,IAAOvhB,KAAKkX,OACZ2K,QAAW,SAAC3gB,GAAD,OAAO,EAAK4gB,WAAW5gB,EAAE2e,SACpC2B,YAAe,SAACtgB,GAAD,OAAO,EAAKwwB,UAAUxwB,IACrCwgB,UAAa,kBAAM,EAAKiQ,WACxBhQ,YAAe,SAACzgB,GAAD,OAAO,EAAK0wB,aAAa1wB,MAExC,6BACA,yBAAKkgB,UAAY,oBACjB,4BAAQA,UAAY,cAAcW,MAAQ,0BAC1CC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,SAA0D,IAArCzd,KAAK2W,MAAMH,sBAC3D6K,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,SAC1DC,QAAW,kBAAM,EAAKC,qBACxB,4BAAQf,UAAY,YAAYW,MAAQ,4BACxCC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,SAA0D,IAArCzd,KAAK2W,MAAMH,sBACzD6K,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,SAC1DC,QAAW,kBAAM,EAAKE,kBAC1B,4BAAQhB,UAAY,iBAAiBW,MAAQ,iBAC7CC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,SAA0D,IAArCzd,KAAK2W,MAAMH,sBACzD6K,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,SAC1DC,QAAW,kBAAM,EAAKG,iBAC1B,4BAAQjB,UAAY,SAASkB,QAAgC,IAAtBtiB,KAAK2W,MAAMD,OAAkBqL,MAAQ,gBAC5EC,SAAahiB,KAAK2W,MAAMH,wBAA0BxW,KAAK2W,MAAMJ,kBAAkBtS,QACpC,IAAxCjE,KAAK2W,MAAMJ,kBAAkBtS,OAChCie,QAAS,kBAAM,EAAKK,gBAClBlB,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,WAC9D,4BAAQb,UAAY,SAASkB,QAAgC,IAAtBtiB,KAAK2W,MAAMD,OAAiBqL,MAAQ,kBAC3EG,QAAW,kBAAM,EAAKM,kBACpBnB,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC3CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,WAC/D,4BAAQb,UAAY,QACpBW,MAAQ,kBACRC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,QAC3ByE,QAAW,kBAAM,EAAKjI,mBACpBoH,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,WAC9D,4BAAQb,UAAY,aACpBW,MAAQ,aACRC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,SACZzd,KAAK2W,MAAMH,wBAA0BxW,KAAK2W,MAAMJ,kBAAkBtS,OAC/Eod,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,SAC1DC,QAAW,kBAAM,EAAKO,eAC1B,4BAAQrB,UAAY,eACpBW,MAAQ,wBACRC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,SACZzd,KAAK2W,MAAMH,wBAA0BxW,KAAK2W,MAAMJ,kBAAkBtS,OAC/Eod,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,SAC1DC,QAAW,kBAAM,EAAKQ,iBAC1B,4BAAQtB,UAAY,aACpBW,MAAQ,gCACRC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,SACZzd,KAAK2W,MAAMH,wBAA0BxW,KAAK2W,MAAMJ,kBAAkBtS,OAC/Eod,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,SAC1DC,QAAW,kBAAM,EAAKS,eAC1B,4BAAQvB,UAAW,UACnBW,MAAQ,eACRC,SAAmC,IAAvBhiB,KAAK2W,MAAMiB,SAAwC,IAAvB5X,KAAK2W,MAAMkB,SAA4C,IAA3B7X,KAAK2W,MAAMsB,YAC/EiK,QAAW,kBAAM,EAAKU,eACpBvB,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,WAC9D,4BAAQb,UAAY,iBACpBW,MAAQ,iBACRC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,QAC3ByE,QAAW,kBAAM,EAAKW,iBACpBxB,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,YAE9D,6BACA,yBAAKb,UAAY,mBACf,yBAAKA,UAAY,iBACjB,4BAAQA,UAAY,aACpB0B,SAAY,SAACC,GAAD,OAAW,EAAKC,YAAYD,EAAME,OAAO9D,QACrDkC,MAAS,CAAChK,MAA0B,EAAlBrX,KAAK2W,MAAMW,OAAU,KACrC,8BAAU4L,MAAQ,6BAClB,4BAAQ/D,MAAQ,UAAhB,4BACA,4BAAQA,MAAQ,uBAAhB,0BACA,4BAAQA,MAAQ,cAAc6C,UAAY,EAAMM,QAAU,GAA1D,kBACA,4BAAQnD,MAAQ,eAAhB,mBACA,4BAAQA,MAAQ,oBAAhB,6BAEA,8BAAU+D,MAAQ,8BAClB,4BAAQ/D,MAAQ,OAAO6C,UAAY,GAAnC,sBACA,4BAAQ7C,MAAQ,kBAAkB6C,UAAY,GAA9C,qCAEA,8BAAUkB,MAAQ,oBAAoBZ,QAAU,GAC9C,4BAAQnD,MAAQ,qBAAqB6C,UAAY,GAAjD,4BAEF,8BAAUkB,MAAQ,0BAChB,4BAAQ/D,MAAO,WAAf,yBACA,4BAAQA,MAAQ,QAAhB,uBAEF,8BAAU+D,MAAQ,OAChB,4BAAQ/D,MAAQ,QAAhB,WACA,4BAAQA,MAAQ,QAAhB,WACA,4BAAQA,MAAQ,iBAAhB,+BACA,4BAAQA,MAAQ,gBAAgB6C,UAAY,EAAMM,QAAU,GAA5D,gCAEF,8BAAUY,MAAQ,4BAChB,4BAAQ/D,MAAQ,SAAhB,0CAEF,8BAAU+D,MAAQ,8BAChB,4BAAQ/D,MAAQ,gBAAhB,uBAGJ,yBAAKiC,UAAY,YACf,4BAAQA,UAAY,QACpBW,MAAQ,UACRV,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC9CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,WAE1D,yBAAKb,UAAY,oBACf,uBAAGA,UAAY,QAAQc,QAAW,kBAAM,EAAKiB,cAA7C,UAMJ,4BAAQ/B,UAAY,QACpBW,MAAQ,qBACRG,QAAW,kBAAM,EAAKmB,yBACtBrB,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,QACzB4D,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,YAG9D,6BACA,yBAAKb,UAAY,gBAAgBjC,MAASnf,KAAK2W,MAAMhV,YACrD,4BAAQyf,UAAY,aACpBC,MAAS,CAAChK,MAA0B,EAAlBrX,KAAK2W,MAAMW,OAAU,IACvC0K,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,QAC3BqF,SAAY,SAACC,GAAD,OAAW,EAAK9D,kBAAkB8D,EAAME,OAAO9D,QAC3DA,MAASnf,KAAK2W,MAAMhV,YAClB,4BAAQwd,MAAQ,SAAS6C,UAA+B,IAAnBhiB,KAAK2W,MAAMgB,KAAhD,YACA,4BAAQwH,MAAQ,eAAe6C,UAA+B,IAAnBhiB,KAAK2W,MAAMgB,KAAtD,mBACA,4BAAQwH,MAAQ,SAAhB,8BACA,4BAAQA,MAAQ,mBAAmB6C,UAAY,GAA/C,wBAEF,4BAAQZ,UAAY,SACpBc,QAAW,kBAAM,EAAKqB,gBACtBxB,MAAQ,qBACRC,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,QACzB4D,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,WAE9D,4BAAQb,UAAY,WACpBW,MAAQ,mBACRG,QAAW,kBAAM,EAAKsB,uBACtBxB,UAAuC,IAA3BhiB,KAAKkY,IAAIvB,MAAM8G,QACzB4D,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAC5CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAAM,GAAG,KAAM4K,eAAgB,kB,GAl1B5C9K,IAAMsM,W,8CA81BxC,WAAqCvN,EAAKxV,GAA1C,SAAA0L,EAAA,sEACQ8J,EAAKI,SAAS,CAAC3U,WAAYjB,IADnC,OAEEwV,EAAKqN,eAFP,4C,sBASA,SAASje,GAAgB/C,GAEvB,IADA,IAAI4C,GAAcC,IACVzC,EAAI,EAAGA,EAAIJ,EAAS0B,OAAQtB,IAClCwC,EAAa9C,KAAKgD,IAAI9C,EAASI,GAAGzC,OAAQiF,GAE5C,OAAOA,EAGT,SAASmB,GAAYpG,EAAQiF,EAAYpD,EAASC,GAEhD,OAAOD,EAA8B7B,EAAOiF,GAA3BnD,EAAUD,GAG7B,SAAS0d,GAAUxa,EAAYC,GAC7B,OAAGD,EAAW,KAAOC,EAAS,IAAMD,EAAW,KAAOC,EAAS,IAAMD,EAAW,KAAOC,EAAS,GAIlG,SAASyI,GAAWvN,GAClB,MAAO,OAAS6S,SAAS7S,EAAM,IAAM,IAAM6S,SAAS7S,EAAM,IAAM,IAAM6S,SAAS7S,EAAM,IAAK,IAG5F,SAASiG,GAAoBpB,EAAYC,EAAU/C,GAWjD,IAX2D,MAETsD,GAAWR,GAFF,mBAEtDS,EAFsD,KAE5CC,EAF4C,KAE3BC,EAF2B,OAGfH,GAAWP,GAHI,mBAGtDW,EAHsD,KAOvDC,GAPuD,WAOvCD,EAAOH,GAAUvD,GAE/B4D,EAAW,GAETpD,EAAI,EAAGA,EAAIR,EAAWQ,IAAI,CAChC,IADgC,EAEPqD,IAAYN,EAASI,EAAanD,GAAG,IAAKgD,EAC3BC,GAHR,mBAEzBK,EAFyB,KAErBC,EAFqB,KAEfC,EAFe,KAIhCJ,EAAShD,KAAK,CAACV,KAAK+D,IAAIH,EAAI,KAAM5D,KAAK+D,IAAIF,EAAM,KAAM7D,KAAK+D,IAAID,EAAK,OAGvE,OAAOJ,EAGT,SAASN,GAAW0B,GAClB,IAAIlB,EAAMkB,EAAS,GAAG,IAClBjB,EAAQiB,EAAS,GAAG,IACpBhB,EAAOgB,EAAS,GAAG,IACnBC,EAAO/E,KAAKgD,IAAL,MAAAhD,KAAY,CAAC4D,EAAIC,EAAMC,IAC9BkB,EAAOhF,KAAKiF,IAAL,MAAAjF,KAAY,CAAC4D,EAAIC,EAAMC,IAC9BoB,EAAQH,EAAKC,EAIbG,GAAaJ,EAAKC,GAAM,EAG5B,MAAO,CAWT,SAAuBE,EAAOH,EAAMnB,EAAKC,EAAOC,GAC9C,GAAa,IAAVoB,EAAa,OAAO,EACvB,GAAGH,IAASnB,EAAK,OAAaC,EAAMC,GAAMoB,EAAO,EAAzB,GACxB,GAAGH,IAASlB,EAAO,OAAO,KAAKC,EAAKF,GAAKsB,EAAM,GAC/C,GAAGH,IAASjB,EAAM,OAAO,KAAKF,EAAKC,GAAOqB,EAAQ,GAnBxCE,CAAcF,EAAOH,EAAMnB,EAAKC,EAAOC,GAAM,IAE5B,IAAVoB,EAAa,EAAGA,GAAO,EAAElF,KAAK+D,IAAI,EAAEoB,EAAU,IAEtCA,GAG3B,SAASxB,GAAW0B,EAAKC,EAAYH,GACnC,IAAMI,GAAK,EAAIvF,KAAK+D,IAAI,EAAEoB,EAAU,IAAIG,EAElCE,EAAIL,EAAYI,EAAE,EAHqB,EAe/C,SAAuBF,EAAKE,EAAGE,GAC7B,OAAIJ,GAAO,GAAKA,EAAM,IAAc,KAAPA,EAAmB,CAACE,EAAEE,EAAE,GAClDJ,GAAO,IAAMA,EAAM,IAAa,CAACI,EAAEF,EAAE,GACrCF,GAAO,KAAOA,EAAM,IAAa,CAAC,EAAGE,EAAGE,GACxCJ,GAAO,KAAOA,EAAM,IAAa,CAAC,EAAGI,EAAGF,GACxCF,GAAO,KAAOA,EAAM,IAAa,CAACI,EAAG,EAAGF,GACxCF,GAAO,KAAOA,EAAM,IAAa,CAACE,EAAG,EAAGE,GACpC,CAAC,EAAE,EAAE,GAlBwBC,CAAcL,EAAKE,EAF7CA,GAAK,EAAIvF,KAAK+D,IAAIsB,EAAI,IAAI,EAAG,IAFM,mBAK7C,MAAO,CAAc,KALwB,KAK3BG,GAAQ,IAAqB,KALF,KAKFA,GAAS,IAAoB,KAL3B,KAKsBA,GAAU,KAoB/E,SAAStB,GAAarG,EAAQiF,EAAYY,GAIxC,OAAO4H,GAFS5H,EAAS1D,KAAKC,MAAOpC,EAAOiF,GAAeY,EAAS9B,OAAO,M,8CAK7E,WAA4BiS,EAAMpI,EAAa0D,GAA/C,SAAApF,EAAA,sEACQ8J,EAAKI,SAAS,CAACtT,MAAO8K,IAD9B,OAEEmI,GAAmBC,EAAM,EAAG1E,EAAWvN,OAAOuN,GAFhD,4C,oEAKA,WAAuC0E,GAAvC,SAAA9J,EAAA,sEACQ8J,EAAKgC,IAAIwL,OAAOzK,QAAQ0K,eADhC,OAEEzN,EAAKgC,IAAIwL,OAAOzK,QAAQiB,SAASjB,QAAQ2K,gBAAgB3K,QAAQ4K,SAAQ,GAF3E,4C,oEAKA,WAAyC3N,GAAzC,SAAA9J,EAAA,sEACQ8J,EAAKgC,IAAIwL,OAAOzK,QAAQ0K,eADhC,OAEEzN,EAAKgC,IAAIwL,OAAOzK,QAAQiB,SAASjB,QAAQ6K,kBAAkB7K,QAAQ4K,SAAQ,GAF7E,4C,4BC1QA,SAASgO,GAAa3b,GAGpB,IAFA,IAAM3T,EAAW,GACXiO,EAAI0F,EAAKS,MAAMmb,aACbnvB,EAAI,EAAGA,EAAI6N,EAAG7N,IACpB,IAAI,IAAIqH,EAAI,EAAGA,EAAIwG,EAAGxG,IACpBzH,EAAS,CAACI,EAAEqH,IAAM,GAGtBkM,EAAKI,SAAS,CAAC/T,SAAUA,EAAUS,MAAO,GAAI+uB,UAAW,CAAC,KAAK,MAAOC,IAAI,KAC1EC,kBAAmB,KAAMC,YAAa,GAAIve,UAAW,GAAIwe,iBAAkB,GACzEC,uBAAuB,IAG3B,SAAS7pB,GAAS8pB,EAAGC,EAAGC,EAAGC,GACzB,OAAOnwB,KAAKwG,IAAIwpB,EAAGE,EAAG,GAAKlwB,KAAKwG,IAAIypB,EAAGE,EAAI,GAS9BC,O,kDA9uBb,WAAYxb,GAAO,IAAD,8BAChB,cAAMA,IACDN,MAAQ,CACXW,OAAQ,EACRD,MAAO,EACPya,aAAc,GACdY,MAAO,EACPC,MAAO,EACP5Z,OAAQ,EACRC,OAAQ,EACRjB,eAAgB,EAChBC,eAAgB,EAChBF,UAAU,EACVia,UAAW,CAAC,KAAK,MACjBa,eAAgB,EAChBC,YAAY,EACZX,YAAa,GACbve,UAAW,GACXpR,SAAU,GACVS,MAAO,GACP8vB,cAAe,YACfX,iBAAkB,GAClBC,uBAAwB,EACxBH,kBAAmB,KACnBD,IAAK,KACLe,iBAAkB,MAEpB,EAAK7a,IAAM,EAAKjB,MAAMiB,IACtB,EAAKhB,OAASC,IAAMC,YACpB,EAAK4b,aAAe7b,IAAMC,YA7BV,E,gEAwChB,IAPA,IAAM7C,EAAyB,IAArB8D,OAAOC,YACXC,EAAyB,IAArBF,OAAOC,YAEX9H,EAAIxQ,KAAK2W,MAAMmb,aACfY,EAAQne,EAAE/D,EACVmiB,EAAQpa,EAAE/H,EACVjO,EAAW,GACTI,EAAI,EAAGA,EAAI6N,EAAG7N,IAEpB,IAAI,IAAIqH,EAAI,EAAGA,EAAIwG,EAAGxG,IAEpBzH,EAAS,CAACI,EAAEqH,IAAM,GAGtBhK,KAAKsW,SAAS,CAACgB,OAAQiB,EAAGlB,MAAO9C,EAAGhS,SAAUA,EAAUmwB,MAAOA,EAAOC,MAAOA,M,2CAI7E3yB,KAAKkX,OAAO+B,QAAQ5B,MAAQrX,KAAK2W,MAAMU,MACvCrX,KAAKkX,OAAO+B,QAAQ3B,OAAStX,KAAK2W,MAAMW,OAExC,IAkrBgBlX,EAlrBV8Y,EAAMlZ,KAAKkX,OAAO+B,QAAQE,WAAW,MAC3CD,EAAIE,MAAMpZ,KAAK2W,MAAMyC,MAAOpZ,KAAK2W,MAAMyC,OACvCF,EAAI+Z,UAAU,EAAE,EAAEjzB,KAAK2W,MAAMU,MAAOrX,KAAK2W,MAAMW,QAC/C,IAAI,IAAI3U,EAAI,EAAGA,EAAI3C,KAAK2W,MAAMub,YAAYjuB,OAAQtB,IAAI,CACpD,IAAMjC,EAAIV,KAAK2W,MAAMub,YAAYvvB,GACjCuW,EAAIG,YACJH,EAAII,UAAY5Y,EAAEN,MAClB8Y,EAAIK,IAAI7Y,EAAEb,EAAEa,EAAEZ,EAAGY,EAAEP,KAAM,EAAW,EAARkC,KAAKqE,IACjCwS,EAAIM,OACJN,EAAIO,YAoBN,IAAI,IAAI9W,EAAI,EAAGA,EAAI3C,KAAK2W,MAAMhD,UAAU1P,OAAQtB,IAAI,CAElD,IAAMzB,EAAIlB,KAAK2W,MAAMhD,UAAUhR,GACzBa,EAAKxD,KAAK2W,MAAMub,YAAYhxB,EAAE,IAC9B0C,EAAK5D,KAAK2W,MAAMub,YAAYhxB,EAAE,IAEpCgY,EAAIG,YACJH,EAAII,UAAY,aAChBJ,EAAIU,OAAOpW,EAAG3D,EAAG2D,EAAG1D,GACpBoZ,EAAIW,OAAOjW,EAAG/D,EAAG+D,EAAG9D,GACpBoZ,EAAIY,YAAc,GAClBZ,EAAIc,SACJd,EAAIO,YAG0B,cAA7BzZ,KAAK2W,MAAMmc,gBAA2D,IAA1B9yB,KAAK2W,MAAMkc,aACxD3Z,EAAIG,YACJH,EAAII,WAooBUlZ,EApoBaJ,KAAKkY,IAAIvB,MAAM6B,SAASxY,KAAKkY,IAAIvB,MAAM8B,WACpCzY,KAAKkY,IAAIvB,MAAM+B,UAooB1C,OAAOtY,EAAM,GAAG,IAAMA,EAAM,GAAG,IAAIA,EAAM,GAAG,KAnoB/C8Y,EAAIY,YAAa,GACjBZ,EAAIK,IAAIvZ,KAAK2W,MAAMoC,OAAQ/Y,KAAK2W,MAAMqC,OA5GxB,EA4G6C,EAAG,EAAE3W,KAAKqE,IACrEwS,EAAIM,OACJN,EAAIO,aAE0B,gBAA7BzZ,KAAK2W,MAAMmc,gBAA2D,IAAxB9yB,KAAK2W,MAAMmB,UAC3B,OAA5B9X,KAAK2W,MAAMob,UAAU,IAA2C,OAA5B/xB,KAAK2W,MAAMob,UAAU,KAC1D7Y,EAAIG,YACJH,EAAIY,YAAc,GAClBZ,EAAIU,OAAO5Z,KAAK2W,MAAMob,UAAU,GAAI/xB,KAAK2W,MAAMob,UAAU,IACzD7Y,EAAIW,OAAO7Z,KAAK2W,MAAMoC,OAAQ/Y,KAAK2W,MAAMqC,QACzCE,EAAIa,YAAc,aAClBb,EAAIc,SACJd,EAAIO,aAGc,OAAnBzZ,KAAK2W,MAAMqb,MACZ9Y,EAAIG,YACJH,EAAIga,UAAY,EAChBha,EAAIia,YAAY,CAAC,EAAG,KACpBja,EAAIU,OAAO5Z,KAAK2W,MAAMqb,IAAI,GAAIhyB,KAAK2W,MAAMqb,IAAI,IAC7C9Y,EAAIW,OAAO7Z,KAAK2W,MAAMqb,IAAI,GAAIhyB,KAAK2W,MAAMqb,IAAI,IAC7C9Y,EAAIU,OAAO5Z,KAAK2W,MAAMqb,IAAI,GAAIhyB,KAAK2W,MAAMqb,IAAI,IAC7C9Y,EAAIW,OAAO7Z,KAAK2W,MAAMqb,IAAI,GAAIhyB,KAAK2W,MAAMqb,IAAI,IAC7C9Y,EAAIU,OAAO5Z,KAAK2W,MAAMqb,IAAI,GAAIhyB,KAAK2W,MAAMqb,IAAI,IAC7C9Y,EAAIW,OAAO7Z,KAAK2W,MAAMqb,IAAI,GAAIhyB,KAAK2W,MAAMqb,IAAI,IAC7C9Y,EAAIU,OAAO5Z,KAAK2W,MAAMqb,IAAI,GAAIhyB,KAAK2W,MAAMqb,IAAI,IAC7C9Y,EAAIW,OAAO7Z,KAAK2W,MAAMqb,IAAI,GAAIhyB,KAAK2W,MAAMqb,IAAI,IAE7C9Y,EAAIc,SACJd,EAAIO,e,0CAIYvY,GAClB,IAAMrB,EAAIG,KAAK2W,MAAMoC,OACfjZ,EAAIE,KAAK2W,MAAMqC,OACfoa,EAAQpzB,KAAK2W,MAAM0c,UACnBC,EAAQtzB,KAAK2W,MAAM4c,UACnBhxB,EAAWvC,KAAK2W,MAAMpU,SAEtBqwB,GADO5yB,KAAK2W,MAAM3T,MACDhD,KAAK2W,MAAMic,gBAC5BY,EAASxzB,KAAK2W,MAAMob,UAAU,GAC9B0B,EAASzzB,KAAK2W,MAAMob,UAAU,GAC9B2B,EAAO1zB,KAAKkX,OAAO+B,QAAQ0a,sBAAsB9zB,EAAEC,GACnDkyB,EAAMhyB,KAAK2W,MAAMqb,IAES,gBAA7BhyB,KAAK2W,MAAMmc,gBAA2D,IAAxB9yB,KAAK2W,MAAMmB,UAC1D9X,KAAK4zB,eAAeJ,EAAQC,EAAQb,EAAgB/yB,EAAGC,EAAGyC,GAE5B,eAA7BvC,KAAK2W,MAAMmc,gBAA0D,IAAxB9yB,KAAK2W,MAAMmB,UACzD9X,KAAK6zB,UAAUh0B,EAAEC,EAAG0zB,EAAQC,EAAQzB,EAAKoB,EAAOE,GAGlD,IAAMQ,EAAQ5yB,EAAEwe,QAASgU,EAAKK,KACxBC,EAAQ9yB,EAAEye,QAAU+T,EAAK5E,IAE/B9uB,KAAKsW,SAAS,CAACyC,OAAQ+a,EAAK9a,OAAOgb,EAAMX,UAAWxzB,EAAG0zB,UAAUzzB,EAAG+yB,YAAY,M,uCAIjEnyB,GAEf,GAAoC,OAAjCV,KAAK2W,MAAMsb,kBACZ,IAAI,IAAItvB,EAAI,EAAGA,EAAI3C,KAAK2W,MAAMsb,kBAAkBhuB,OAAQtB,IACtD3C,KAAK2W,MAAMsb,kBAAkBtvB,GAAGuM,OAAO9O,MA3K1B,iBA8KjBJ,KAAKsW,SAAS,CAACwc,cAAepyB,EAAGsxB,IAAI,KAAMC,kBAAmB,KAAMF,UAAW,CAAC,KAAM,U,0CAGpE7wB,GACc,cAA7BlB,KAAK2W,MAAMmc,eAA+B9yB,KAAKi0B,YAAY/yB,K,yCAG7CA,GACjBlB,KAAKsW,SAAS,CAACwB,UAAS,M,kCAId5W,GACV,GAAGlB,KAAK2W,MAAMub,YAAYjuB,QAAU,IAClCiwB,MAAM,iDADR,CAaA,IATA,IAAMR,EAAO1zB,KAAKkX,OAAO+B,QAAQ0a,wBAC3BpxB,EAAWvC,KAAK2W,MAAMpU,SACtB2vB,EAAclyB,KAAK2W,MAAMub,YACzBryB,EAAIqB,EAAEwe,QAASgU,EAAKK,KACpBj0B,EAAIoB,EAAEye,QAAU+T,EAAK5E,IATf,EAUe9uB,KAAKm0B,QAAQt0B,EAAGC,GAV/B,mBAULs0B,EAVK,KAUIC,EAVJ,KAaRC,GAAW,EACP3xB,EAAI,EAAGA,EAAIJ,EAAS,CAAC6xB,EAAQC,IAAUpwB,OAAQtB,IAAI,CACzD,IAAMjC,EAAIV,KAAK2W,MAAMub,YAAY3vB,EAAS,CAAC6xB,EAAQC,IAAU1xB,IAC1D4F,GAAS7H,EAAEb,EAAEa,EAAEZ,EAAED,EAAGC,GAAK,MAC1Bw0B,GAAW,GAGf,IAAgB,IAAbA,EAAmB,CACpB,IAAM5zB,EAAI,IAAId,EAAOC,EAAGC,GACxBY,EAAEP,KAjNY,EAkNdO,EAAEN,MAjNa,iBAkNf,IAAIm0B,EAAU,GACdrC,EAAYnvB,KAAKrC,GACjB6B,EAAS,CAAC6xB,EAASC,IAAUtxB,KAAKmvB,EAAYjuB,OAAO,GACrDswB,EAAQrlB,OAASxO,EAAEiO,cACnB4lB,EAAQC,YAActC,EAAYjuB,OAAO,EACzCswB,EAAQE,KAAO,CAACL,EAASC,GACzBE,EAAQG,UAAY,CAACnyB,EAAS,CAAC6xB,EAASC,KAAWpwB,OAAO,EAC1DjE,KAAK20B,kBAAkB,SAAUJ,GACjCv0B,KAAKsW,SAAS,CAAC/T,SAASA,EAAU2vB,YAAaA,Q,qCAIpC0C,EAAaC,EAAajC,EAAgB/yB,EAAGC,EAAGyC,GAG7D,GAAmB,OAAhBqyB,GAAwC,OAAhBC,EAGzB,IAH+C,IAAD,EACxB70B,KAAKm0B,QAAQt0B,EAAEC,GADS,mBACvCgJ,EADuC,KACjCC,EADiC,KAGtCpG,EAAI,EAAGA,EAAIJ,EAAS,CAACuG,EAAMC,IAAQ9E,OAAQtB,IAAI,CACrD,IAAMjC,EAAIV,KAAK2W,MAAMub,YAAY3vB,EAAS,CAACuG,EAAMC,IAAQpG,IACzD,GAAG4F,GAAS7H,EAAEb,EAAEa,EAAEZ,EAAED,EAAGC,GAAK,GAAgC,CAC1DE,KAAKsW,SAAS,CAACyb,UAAW,CAACrxB,EAAEb,EAAEa,EAAEZ,GAAI8yB,eAAgBrwB,EAAS,CAACuG,EAAMC,IAAQpG,KAC7E,YAQJ,IAJG,IAAD,EACoB3C,KAAKm0B,QAAQt0B,EAAEC,GADnC,mBACKgJ,EADL,KACWC,EADX,KAIMpG,EAAI,EAAGA,EAAIJ,EAAS,CAACuG,EAAMC,IAAQ9E,OAAQtB,IAAI,CACrD,IAAMjC,EAAIV,KAAK2W,MAAMub,YAAY3vB,EAAS,CAACuG,EAAMC,IAAQpG,IAEzD,GAAG4F,GAAS7H,EAAEb,EAAEa,EAAEZ,EAAED,EAAGC,GAAK,GAAgC,CAE1D,IAAMkD,EAAQhD,KAAK2W,MAAM3T,MACnB2Q,EAAY3T,KAAK2W,MAAMhD,UAH6B,EAIvB3T,KAAK80B,QAAQ9xB,EACtC2Q,EAAW3T,KAAK2W,MAAMic,eAAgBrwB,EAAS,CAACuG,EAAMC,IAAQpG,IALd,mBAInDoH,EAJmD,KAIxCgrB,EAJwC,KAM1D/0B,KAAKsW,SAAS,CAACyb,UAAW,CAACrxB,EAAEb,EAAEa,EAAEZ,GAC/B8yB,eAAgBrwB,EAAS,CAACuG,EAAOC,IAAQpG,GAAGK,MAAO+G,EACb4J,UAAWohB,IACnD,U,8BAMA/xB,EAAO2Q,EAAWqhB,EAAkBC,GAE1C,QAAgDh1B,IAA7C+C,EAAM,CAACgyB,EAAiBC,UACqBh1B,IAA9C+C,EAAM,CAACiyB,EAAgBD,KACTA,IAAqBC,EAAe,CAElD,GAAGthB,EAAU1P,OAAS,IAEpB,OADAiwB,MAAM,yCACC,CAAClxB,EAAM2Q,GAEhB3Q,EAAM,CAACgyB,EAAkBC,KAAmB,EAC5CthB,EAAU5Q,KAAK,CAACiyB,EAAkBC,IAClC,IAAMV,EAAU,GAChBA,EAAQE,KAAO,CAACO,EAAkBC,GAClCV,EAAQ1gB,KAAO,CAACmhB,EAAkBC,GAClCV,EAAQztB,MAAQ6M,EAAU1P,OAAO,EACjCjE,KAAK20B,kBAAkB,OAAQJ,GAEjC,MAAO,CAACvxB,EAAO2Q,K,gCAGP9T,EAAEC,EAAG0zB,EAAOC,EAAQzB,EAAKqB,EAAWE,GAC5C,GAAc,OAAXC,GAA8B,OAAXC,EACpB,GAAW,OAARzB,EAAa,CACd,IAAMC,EAAoBjyB,KAAK2W,MAAMsb,kBACrC,GAAyB,OAAtBA,EACD,IAAI,IAAItvB,EAAI,EAAGA,EAAIsvB,EAAkBhuB,OAAQtB,IAC3CsvB,EAAkBtvB,GAAGuM,OAAO9O,MA7RnB,iBAgSfJ,KAAKsW,SAAS,CAACyb,UAAW,CAAClyB,EAAEC,GAAImyB,kBAAmB,YAGlD,GAAG5vB,KAAKiF,IAAI0qB,EAAI,GAAIA,EAAI,IAAMnyB,GAAKA,EAAIwC,KAAKgD,IAAI2sB,EAAI,GAAIA,EAAI,KAC1D3vB,KAAKiF,IAAI0qB,EAAI,GAAIA,EAAI,IAAKlyB,GAAKA,EAAEuC,KAAKgD,IAAI2sB,EAAI,GAAIA,EAAI,IAAI,CACxD,IAAIpS,EAAS/f,EAAIwzB,EACbxT,EAAS/f,EAAIyzB,EACXtB,EAAoBjyB,KAAK2W,MAAMsb,mBAClCD,EAAI,GAAGpS,EAAO,GAAKoS,EAAI,GAAGpS,EAAS5f,KAAK2W,MAAMU,SAAOuI,EAAS,IAC9DoS,EAAI,GAAGnS,EAAO,GAAKmS,EAAI,GAAGnS,EAAS7f,KAAK2W,MAAMW,UAAQuI,EAAS,GAClE,IAAMtd,EAAWvC,KAAK2W,MAAMpU,SAC5BvC,KAAKk1B,uBAAuB3yB,EAAU0vB,EAAmBrS,EAAQC,GACjE7f,KAAKsW,SAAS,CAAC0b,IAAK,CAACA,EAAI,GAAGpS,EAAQoS,EAAI,GAAGnS,EAAQmS,EAAI,GAAGpS,EAAQoS,EAAI,GAAGnS,UAGzE7f,KAAKsW,SAAS,CAAC0b,IAAI,YAMzBhyB,KAAKsW,SAAS,CAAC0b,IAAK,CAAC3vB,KAAKiF,IAAIksB,EAAO3zB,GAAIwC,KAAKiF,IAAImsB,EAAO3zB,GAAIuC,KAAKgD,IAAIxF,EAAE2zB,GAASnxB,KAAKgD,IAAIvF,EAAE2zB,Q,6CAIzElxB,EAAS0vB,EAAmBlnB,EAAIC,GAErD,IADA,IAAIlB,EAAevH,EACXI,EAAI,EAAGA,EAAIsvB,EAAkBhuB,OAAQtB,IAAI,CAC/CsvB,EAAkBtvB,GAAGuM,OAAOrP,GAAKkL,EACjCknB,EAAkBtvB,GAAGuM,OAAOpP,GAAKkL,EACjC,IAAMmqB,EAAWn1B,KAAKm0B,QAAQlC,EAAkBtvB,GAAGuM,OAAOrP,EAC5BoyB,EAAkBtvB,GAAGuM,OAAOpP,GAEvDq1B,EAAS,KAAOlD,EAAkBtvB,GAAG8xB,KAAK,IAAMU,EAAS,KACtDlD,EAAkBtvB,GAAG8xB,KAAK,KAC5B3qB,EAAe9J,KAAKo1B,kBAAkB7yB,EAAS0vB,EAAkBtvB,GAAIwyB,IAG3En1B,KAAKsW,SAAS,CAAC/T,SAAUuH,M,wCAGTvH,EAAS8yB,EAAiBF,GAC1C,IAAMG,EAAWD,EAAgBZ,KAE3Bc,EAAchzB,EAAS+yB,GAAUruB,QAAQouB,EAAgBvuB,OAQ/D,OANAvE,EAAS+yB,GAAU7wB,OAAO8wB,EAAY,GAEtChzB,EAAS4yB,GAAUpyB,KAAKsyB,EAAgBvuB,OAExCuuB,EAAgBZ,KAAOU,EAEhB5yB,I,yCAKPvC,KAAKsW,SAAS,CAACwB,UAAS,EAAOia,UAAW,CAAC,KAAK,MAAOa,eAAgB,OACvE,IAAMZ,EAAMhyB,KAAK2W,MAAMqb,IACjBC,EAAoBjyB,KAAK2W,MAAMsb,kBACrC,GAAW,OAARD,GAAuC,OAAtBC,EAClBjyB,KAAKw1B,eAAexD,QAEjB,GAAU,OAAPA,EAAY,CAGlB,IAFA,IAAMC,EAAoBjyB,KAAK2W,MAAMsb,kBAC/BwD,EAAyB,GACvB9yB,EAAI,EAAGA,EAAIsvB,EAAkBhuB,OAAQtB,IAAK,CAChD,IAAM+yB,EAAc,GACpBA,EAAYxmB,OAAS+iB,EAAkBtvB,GAAGuM,OAAOP,cACjD+mB,EAAYxmB,OAAO9O,MArWN,iBAsWbs1B,EAAYjB,KAAOxC,EAAkBtvB,GAAG8xB,KACxCiB,EAAY5uB,MAAQmrB,EAAkBtvB,GAAGmE,MACzC2uB,EAAuB1yB,KAAK2yB,GAE9B,IAAMC,EAAa,GACbC,EAAW51B,KAAK2W,MAAMoc,iBAE5B4C,EAAW70B,MAAQ80B,EACnBD,EAAW50B,IAAM00B,GAEO,IADCz1B,KAAK61B,eAAeD,EAAUH,IACzBz1B,KAAK20B,kBAAkB,MAAOgB,GAC5D31B,KAAKsW,SAAS,CAACyc,iBAAkB,U,qCAItBjyB,EAAOC,GACpB,YAAad,IAAVa,QAA+Bb,IAARc,GACZ,OAAVD,GAA0B,OAARC,IACF,IAAjBD,EAAMmD,QAA+B,IAAflD,EAAIkD,SAE1BnD,EAAM,GAAGoO,OAAOrP,IAAMkB,EAAI,GAAGmO,OAAOrP,GAC7BiB,EAAM,GAAGoO,OAAOpP,IAAMiB,EAAI,GAAGmO,OAAOpP,M,8BAIxCD,EAAEC,GACR,IAAM4yB,EAAQ1yB,KAAK2W,MAAM+b,MACnBC,EAAQ3yB,KAAK2W,MAAMgc,MAEnB7pB,EAAQzG,KAAKC,MAAMzC,EAAE6yB,GACrB3pB,EAAQ1G,KAAKC,MAAMxC,EAAE6yB,GAC3B,MAAO,CAACtwB,KAAKiF,IAAIjF,KAAKgD,IAAI,EAAEyD,GAAQ9I,KAAK2W,MAAMmb,aAAa,GAC1DzvB,KAAKiF,IAAIjF,KAAKgD,IAAI0D,EAAM,GAAG/I,KAAK2W,MAAMmb,aAAa,M,kCAG3CgE,EAAIC,EAAI1D,EAAIE,GACtB,IAAMyD,EAAYh2B,KAAKm0B,QAAQ2B,EAAGC,GAC5BE,EAAUj2B,KAAKm0B,QAAQ9B,EAAGE,GAGhC,GAAGyD,EAAU,KAAOC,EAAQ,IAAMD,EAAU,KAAOC,EAAQ,GAAI,MAAO,CAACD,GAClE,GAAGA,EAAU,KAAOC,EAAQ,GAAG,CAElC,IADA,IAAMC,EAAM,GACJvzB,EAAIqzB,EAAU,GAAIrzB,GAAKszB,EAAQ,GAAItzB,IACzCuzB,EAAInzB,KAAK,CAACizB,EAAU,GAAIrzB,IAE1B,OAAOuzB,EAEJ,GAAGF,EAAU,KAAOC,EAAQ,GAAG,CAElC,IADA,IAAMC,EAAM,GACJlsB,EAAIgsB,EAAU,GAAIhsB,GAAKisB,EAAQ,GAAIjsB,IACzCksB,EAAInzB,KAAK,CAACiH,EAAGgsB,EAAU,KAEzB,OAAOE,EAIP,IADA,IAAMA,EAAM,GACJvzB,EAAIqzB,EAAU,GAAIrzB,GAAKszB,EAAQ,GAAItzB,IACzC,IAAI,IAAIqH,EAAIgsB,EAAU,GAAIhsB,GAAKisB,EAAQ,GAAIjsB,IACzCksB,EAAInzB,KAAK,CAACiH,EAAGrH,IAGjB,OAAOuzB,I,qCAIIlE,GAYb,IAXA,IAAI8D,EAAKzzB,KAAKiF,IAAI0qB,EAAI,GAAIA,EAAI,IAC1B+D,EAAK1zB,KAAKiF,IAAI0qB,EAAI,GAAIA,EAAI,IAC1BK,EAAKhwB,KAAKgD,IAAI2sB,EAAI,GAAIA,EAAI,IAC1BO,EAAKlwB,KAAKgD,IAAI2sB,EAAI,GAAIA,EAAI,IAGxBmE,EAAen2B,KAAKo2B,YAAYN,EAAGC,EAAG1D,EAAGE,GAEzCN,EAAoBjyB,KAAKq2B,qBAAqBF,EAAcL,EAAIC,EAAI1D,EAAGE,GAEvEkD,EAAyB,GACvB9yB,EAAI,EAAGA,EAAIsvB,EAAkBhuB,OAAQtB,IAAI,CAC/C,IAAM+yB,EAAc,GACpBA,EAAYxmB,OAAS+iB,EAAkBtvB,GAAGuM,OAAOP,cACjD+mB,EAAYjB,KAAOxC,EAAkBtvB,GAAG8xB,KACxCiB,EAAY5uB,MAAQmrB,EAAkBtvB,GAAGmE,MACzC2uB,EAAuB1yB,KAAK2yB,GAE9B,IAAI,IAAI/yB,EAAI,EAAGA,EAAIsvB,EAAkBhuB,OAAQtB,IAC3CsvB,EAAkBtvB,GAAGuM,OAAO9O,MA3bX,iBA6bnBJ,KAAKsW,SAAS,CAAC2b,kBAAmBA,EAAmBc,iBAAkB0C,M,2CAGpDa,EAAWR,EAAIC,EAAI1D,EAAIE,GAG1C,IAFA,IAAMN,EAAoB,GAElBtvB,EAAI,EAAGA,EAAI2zB,EAAUryB,OAAQtB,IAEnC,IADA,IAAI4zB,EAAav2B,KAAK2W,MAAMpU,SAAS+zB,EAAU3zB,IACvCqH,EAAI,EAAGA,EAAIusB,EAAWtyB,OAAQ+F,IAAI,CACxC,IAAMtJ,EAAIV,KAAK2W,MAAMub,YAAYqE,EAAWvsB,IACzCtJ,EAAEb,GAAKi2B,GAAMp1B,EAAEZ,GAAKi2B,GAAMr1B,EAAEb,GAAIwyB,GAAM3xB,EAAEZ,GAAKyyB,GAAGN,EAAkBlvB,KAAK,CAACmM,OAAQxO,EACrD+zB,KAAM6B,EAAU3zB,GAAImE,MAAOyvB,EAAWvsB,KAGxE,OAAOioB,I,wCASS5M,EAAMkP,GACtB,IAAIiC,EAASx2B,KAAK2W,MAAMwb,iBACpBsE,EAAcz2B,KAAK2W,MAAMyb,sBAC7B,GAAGqE,IAAgBD,EAAOvyB,OAAO,EAC/BuyB,EAAOzzB,KAAK,CAACsiB,KAAKA,EAAMkP,QAASA,IACjCkC,IAGAz2B,KAAKsW,SAAS,CAAC6b,iBAAkBqE,EAAQpE,sBAAuBqE,QAG9D,CAIF,IADA,IAAMC,EAAY,GACV/zB,EAAI,EAAGA,EAAI8zB,EAAY,EAAG9zB,IAChC+zB,EAAW3zB,KAAKyzB,EAAO7zB,IAIzB+zB,EAAW3zB,KAAK,CAACsiB,KAAMA,EAAMkP,QAASA,IAEtCkC,IAEAz2B,KAAKsW,SAAS,CAAC6b,iBAAkBuE,EAAYtE,sBAAuBqE,O,6CAMtEz2B,KAAK22B,iBAAiB,QACtB,IAAIF,EAAcz2B,KAAK2W,MAAMyb,sBACvBoE,EAASx2B,KAAK2W,MAAMwb,iBAE1B,GAAgC,WAA7BqE,EAAOC,GAAapR,KAAkB,CACvC,IAAM6M,EAAclyB,KAAK2W,MAAMub,YACzB3vB,EAAWvC,KAAK2W,MAAMpU,SAC5B2vB,EAAYztB,OAAO+xB,EAAOC,GAAalC,QAAQC,YAAa,GAC5DjyB,EAASi0B,EAAOC,GAAalC,QAAQE,MAAMhwB,OAAO+xB,EAAOC,GAAa/B,UAAU,GAChF+B,IACAz2B,KAAKsW,SAAS,CAAC4b,YAAaA,EAAa3vB,SAAUA,EAAU6vB,sBAAuBqE,SAEjF,GAAgC,SAA7BD,EAAOC,GAAapR,KAAgB,CAC1C,IAAM1R,EAAY3T,KAAK2W,MAAMhD,UACvB3Q,EAAQhD,KAAK2W,MAAM3T,MACzB2Q,EAAUlP,OAAO+xB,EAAOC,GAAalC,QAAQztB,MAAM,GACnD9D,EAAMwzB,EAAOC,GAAalC,QAAQE,WAAQx0B,EAC1Cw2B,IACAz2B,KAAKsW,SAAS,CAAC3C,UAAWA,EAAW3Q,MAAOA,EAAOovB,sBAAuBqE,SAEvE,GAAgC,QAA7BD,EAAOC,GAAapR,KAAe,CAMzC,IALA,IAAMuQ,EAAWY,EAAOC,GAAalC,QAAQzzB,MACvC81B,EAASJ,EAAOC,GAAalC,QAAQxzB,IACrCwB,EAAWvC,KAAK2W,MAAMpU,SACtB2vB,EAAclyB,KAAK2W,MAAMub,YAEvBvvB,EAAI,EAAGA,EAAIi0B,EAAO3yB,OAAQtB,IAAI,CACpC,IAAM4yB,EAAchzB,EAASq0B,EAAOj0B,GAAG8xB,MAAMxtB,QAAQ2vB,EAAOj0B,GAAGmE,OAC/DvE,EAASq0B,EAAOj0B,GAAG8xB,MAAMhwB,OAAO8wB,EAAY,GAC5ChzB,EAASqzB,EAASjzB,GAAG8xB,MAAM1xB,KAAK6zB,EAAOj0B,GAAGmE,OAC1CorB,EAAY0E,EAAOj0B,GAAGmE,OAAS8uB,EAASjzB,GAAGuM,OAE7CunB,IACAz2B,KAAKsW,SAAS,CAAC/T,SAAUA,EAAU2vB,YAAaA,EAAaE,sBAAuBqE,O,6CAMtFz2B,KAAK22B,iBAAiB,QACtB,IAAIF,EAAcz2B,KAAK2W,MAAMyb,sBACvBoE,EAASx2B,KAAK2W,MAAMwb,iBAE1B,GAAkC,WAA/BqE,EAAOC,EAAY,GAAGpR,KAAkB,CACzCoR,IACA,IAAMvE,EAAclyB,KAAK2W,MAAMub,YACzB3vB,EAAWvC,KAAK2W,MAAMpU,SAC5B2vB,EAAYnvB,KAAKyzB,EAAOC,GAAalC,QAAQrlB,QAC7C3M,EAASi0B,EAAOC,GAAalC,QAAQE,MAAM1xB,KAAKmvB,EAAYjuB,OAAO,GACnEjE,KAAKsW,SAAS,CAAC4b,YAAaA,EAAa3vB,SAAUA,EAAU6vB,sBAAuBqE,SAEjF,GAAkC,SAA/BD,EAAOC,EAAY,GAAGpR,KAAgB,CAC5CoR,IACA,IAAM9iB,EAAY3T,KAAK2W,MAAMhD,UACvB3Q,EAAQhD,KAAK2W,MAAM3T,MACzB2Q,EAAU5Q,KAAKyzB,EAAOC,GAAalC,QAAQ1gB,MAC3C7Q,EAAMwzB,EAAOC,GAAalC,QAAQE,OAAQ,EAC1Cz0B,KAAKsW,SAAS,CAAC3C,UAAWA,EAAW3Q,MAAOA,EAAOovB,sBAAuBqE,SAEvE,GAAkC,QAA/BD,EAAOC,EAAY,GAAGpR,KAAe,CAK3C,IAJA,IAAMuQ,EAAWY,EAAOC,EAAY,GAAGlC,QAAQzzB,MACzC81B,EAASJ,EAAOC,EAAY,GAAGlC,QAAQxzB,IACvCwB,EAAWvC,KAAK2W,MAAMpU,SACtB2vB,EAAclyB,KAAK2W,MAAMub,YACvBvvB,EAAI,EAAGA,EAAIizB,EAAS3xB,OAAQtB,IAAI,CACtC,IAAM4yB,EAAchzB,EAASqzB,EAASjzB,GAAG8xB,MAAMxtB,QAAQ2uB,EAASjzB,GAAGmE,OACnEvE,EAASqzB,EAASjzB,GAAG8xB,MAAMhwB,OAAO8wB,EAAa,GAC/ChzB,EAASq0B,EAAOj0B,GAAG8xB,MAAM1xB,KAAK6yB,EAASjzB,GAAGmE,OAC1CorB,EAAY0D,EAASjzB,GAAGmE,OAAQ8vB,EAAOj0B,GAAGuM,OAE5CunB,IACAz2B,KAAKsW,SAAS,CAAC/T,SAAUA,EAAU2vB,YAAaA,EAAaE,sBAAuBqE,O,0CAKtFz2B,KAAKsW,SAAS,CAACuc,YAAW,IAC1B7yB,KAAK62B,qB,kCAQL,IAJA,IAAIvW,EAAa,+BACX4R,EAAclyB,KAAK2W,MAAMub,YACzBve,EAAY3T,KAAK2W,MAAMhD,UAErBhR,EAAI,EAAIA,EAAIuvB,EAAYjuB,OAAQtB,IACtCuvB,EAAYvvB,GAAGzC,OAAS,EAE1B,IAAI,IAAIyC,EAAI,EAAGA,EAAIgR,EAAU1P,OAAQtB,IACnCuvB,EAAYve,EAAUhR,GAAG,IAAIzC,SAC7BgyB,EAAYve,EAAUhR,GAAG,IAAIzC,SAG/B,IAAI,IAAIyC,EAAI,EAAGA,EAAIuvB,EAAYjuB,OAAQtB,IACrC2d,GAAc4R,EAAYvvB,GAAG4d,QAE/B,IAAI,IAAI5d,EAAI,EAAGA,EAAIgR,EAAU1P,OAAQtB,IAAI,CACvC,IAAMkR,EAAO,IAAIhT,EAAK8S,EAAUhR,GAAI,aAAc,GAClDkR,EAAK5S,MAAQ,GACbqf,GAAezM,EAAK0M,QAEtB,IAAIC,EAAOC,SAASC,cAAc,KAClCF,EAAKG,KAAOL,EACZE,EAAKI,SAAW,cAChBH,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACLN,SAASI,KAAKG,YAAYR,K,6BAIrBS,GACL,IACMC,EADSlhB,KAAKkX,OAAO+B,QACNkI,UAAU,WAAWF,GACtCT,EAAOC,SAASC,cAAc,KAClCF,EAAKG,KAAOO,EACZV,EAAKI,SAAW,WAAWK,EAC3BR,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACLN,SAASI,KAAKG,YAAYR,K,+BAMnB,IAAD,OAEN,OAAO,6BACC,kBAAC,GAAD,CACAe,IAAOvhB,KAAKgzB,aACZ/jB,OAAQjP,KACRquB,QAAUwD,GACVzD,IAAO,sCACP,4BAAQ/M,MAAS,CAACC,UAA6B,EAAlBthB,KAAKiX,MAAMK,OAAS,GAAGtX,KAAKiX,MAAMK,OAAO,IACtE4K,QAAW,SAAChhB,GAAD,OAAO,EAAK41B,oBAAoB51B,IAC3CygB,YAAe,SAACzgB,GAAD,OAAO,EAAK61B,oBAAoB71B,IAC/C81B,aAAgB,kBAAM,EAAKC,qBAC3BzV,YAAe,SAACtgB,GAAD,OAAO,EAAKg2B,mBAAmBh2B,IAC9CwgB,UAAa,kBAAM,EAAKmV,oBACxBzV,UAAY,gBACZG,IAAOvhB,KAAKkX,SAEZ,6BACA,yBAAKkK,UAAY,qBACjB,4BAAQA,UAAY,SACpBY,SAAyC,cAA7BhiB,KAAK2W,MAAMmc,cACvB/Q,MAAQ,iBACRG,QAAW,kBAAM,EAAKyU,iBAAiB,cACvCtV,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAtB/B,GAsB2C,KAC/CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAvBvB,GAuBmC,KAAM4K,eAAgB,WAE/D,4BAAQb,UAAY,WACpBY,SAAyC,gBAA7BhiB,KAAK2W,MAAMmc,cACvB/Q,MAAQ,mBACRG,QAAW,kBAAM,EAAKyU,iBAAiB,gBACvCtV,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MA7B/B,GA6B2C,KAC/CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MA9BvB,GA8BmC,KAAM4K,eAAgB,WAE/D,4BAAQb,UAAY,UACpBY,SAAyC,eAA7BhiB,KAAK2W,MAAMmc,cACvB/Q,MAAQ,qBACRG,QAAW,kBAAM,EAAKyU,iBAAiB,eACvCtV,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MApC/B,GAoC2C,KAC/CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MArCvB,GAqCmC,KAAM4K,eAAgB,WAgB/D,4BAAQb,UAAY,SACpBW,MAAQ,cACRG,QAAW,kBAAM,EAAK8Q,aAAa/Z,QAAQ4K,SAAQ,IACnDxC,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAxD/B,GAwD2C,KAC/CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAzDvB,GAyDmC,KAAM4K,eAAgB,WAE/D,4BAAQb,UAAY,YACpBW,MAAQ,qBACRV,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MA7D/B,GA6D2C,KAC/CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MA9DvB,GA8DmC,KAAM4K,eAAgB,WAE/D,4BAAQb,UAAY,QACpBc,QAAW,kBAAM,EAAKiV,wBACtBnV,UAAkD,IAAtChiB,KAAK2W,MAAMyb,sBACvBrQ,MAAQ,OACRV,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MApE/B,GAoE2C,KAC/CA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MArEvB,GAqEmC,KAAM4K,eAAgB,WAE/D,4BAAQb,UAAY,QACpBc,QAAW,kBAAM,EAAKkV,wBACtBpV,SAAYhiB,KAAK2W,MAAMwb,iBAAiBluB,OAAO,IAAMjE,KAAK2W,MAAMyb,sBAChErQ,MAAQ,OACRV,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MA3E/B,GA2E2C,KACjDA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MA5ErB,GA4EiC,KAAM4K,eAAgB,WAE7D,yBAAKb,UAAY,YACf,4BAAQA,UAAY,QACpBW,MAAQ,UACRV,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAjFjC,GAiF6C,KACjDA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAlFvB,GAkFmC,KAAM4K,eAAgB,WAE7D,yBAAKb,UAAY,oBACf,uBAAGA,UAAY,QAAQc,QAAW,kBAAM,EAAKiB,cAA7C,QACA,uBAAG/B,UAAY,QAAQc,QAAW,kBAAM,EAAKkB,OAAO,SAApD,QACA,uBAAGhC,UAAY,QAAQc,QAAW,kBAAM,EAAKkB,OAAO,SAApD,UAGJ,4BAAQhC,UAAY,UACpBY,UAAY,EACZD,MAAQ,SACRV,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MA7F/B,GA6F2C,KACjDA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MA9FrB,GA8FiC,KAAM4K,eAAgB,WAE7D,4BAAQb,UAAY,UACpBW,MAAQ,+BACRV,MAAS,CAAC/J,OAAOjV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAlG/B,GAkG2C,KACjDA,MAAOhV,KAAKiF,IAAItH,KAAK2W,MAAMU,MAnGrB,GAmGiC,KAAM4K,eAAgB,YAG7D,kC,GAntB0B9K,IAAMsM,WC+G7B4T,G,kDAlHb,WAAYpgB,GAAO,IAAD,8BAChB,cAAMA,IACDN,MAAQ,CACX8G,SAAQ,EACRE,eAAgB,GAChBnc,KAAM,IACNC,KAAM,IACNQ,UAAW,OACXq1B,KAAM,IACNC,KAAM,GACNjgB,OAAQ,EACRD,MAAO,EACP6C,SAAU,CACRkB,OAAQ,CAACb,GAAI,EAAG9O,GAAI,EAAG6O,IAAK,GACpB/S,MAAO,GAAK8S,YAAa,EACzBzR,aAAc,GACtBkT,YAAa,CAACP,MAAO,EACbhS,cAAe,cAAe+Q,IAAK,IAC3CwC,YAAa,CAACf,GAAI,GAAIK,SAAS,EACjByK,YAAa,SAAUnb,GAAI,GAC3BC,IAAK,GAAKC,MAAO,GACjBkb,kBAAkB,GAChC9J,iBAAkB,CAACjB,GAAI,GAAIK,SAAS,EACtByK,YAAa,SAAUnb,GAAI,GAC3BC,IAAK,GAAKC,MAAO,GACjBkb,kBAAkB,GAChCtZ,QAAS,CAACvH,IAAK,IACLC,MAAO,EACPC,KAAM,GAChB0I,KAAM,CAAC5I,IAAI,IACJC,MAAO,EACPC,KAAM,GACboJ,KAAK,CACHmO,QAAS,GACTzX,IAAI,IACJC,MAAO,EACPC,KAAM,GAER0X,cAAc,CACZH,QAAS,GACT1N,YAAa,IACbG,WAAY,KACZlL,WAAY,CAAC,IAAI,EAAE,GACnBC,SAAU,CAAC,EAAE,EAAE,MAEjBqL,KAAK,CACHmN,QAAS,GACTzX,IAAI,IACJC,MAAO,EACPC,KAAM,GAERmiB,OAAO,CACL9P,SAAU,EACVC,WAAY,IACZC,UAAW,EACXC,OAAQ,IACRC,SAAU,EACVC,QAAS,IAKbpL,UAAW,EACXqL,YAAY,EACZ/W,QAAS,EACTC,QAAS,GACTwW,SAAU,EACVC,WAAY,IACZC,UAAW,IACXC,OAAQ,EACRC,SAAU,IACVC,QAAS,IACTgQ,OAAQ,GACRD,WAAW,GAEb,EAAK7E,QAAU5M,IAAMC,YACrB,EAAK4M,UAAY7M,IAAMC,YACvB,EAAKogB,cAAgBrgB,IAAMC,YAC3B,EAAKsM,OAASvM,IAAMC,YA9EJ,E,gEAkFhB,IAAM7C,EAAI8D,OAAOgH,WACX9G,EAAIF,OAAOC,YACjBtY,KAAKsW,SAAS,CAACgB,OAAQiB,EAAGlB,MAAO9C,M,+BAIjC,IAAIwP,EAeJ,OAd4B,IAAzB/jB,KAAK2W,MAAMlJ,UACZsW,EAAU,kBAAC,GAAD,CAAmBzM,OAAUtX,KAAK2W,MAAMW,OAClDiK,IAAOvhB,KAAK+jB,QAAS7L,IAAOlY,OAEG,IAAzBA,KAAK2W,MAAMlJ,UACjBsW,EAAU,kBAAC,GAAD,CACVzM,OAAUtX,KAAK2W,MAAMW,OACrBiK,IAAOvhB,KAAKgkB,UAAW9L,IAAOlY,OAEC,WAAzBA,KAAK2W,MAAMlJ,YACjBsW,EAAU,kBAAC,GAAD,CAAyBzM,OAAUtX,KAAK2W,MAAMW,OACxDiK,IAAOvhB,KAAKw3B,cAAetf,IAAOlY,QAIlC,yBAAKohB,UAAU,OACb,yBAAKA,UAAY,eACf,kBAAC,GAAD,CAAe9J,OAAUtX,KAAK2W,MAAMW,OACpCiK,IAAOvhB,KAAK0jB,OAAQxL,IAAOlY,OAC1B+jB,Q,GA7GO5M,IAAMsM,WCKJgU,QACW,cAA7Bpf,OAAOqf,SAASC,UAEe,UAA7Btf,OAAOqf,SAASC,UAEhBtf,OAAOqf,SAASC,SAASC,MACvB,2DCZNC,IAAStH,OACP,kBAAC,IAAMuH,WAAP,KACE,kBAAC,GAAD,OAEFrX,SAASmO,eAAe,SDyHpB,kBAAmBmJ,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLh0B,QAAQg0B,MAAMA,EAAMC,c","file":"static/js/main.1a5ef15a.chunk.js","sourcesContent":["class Vertex {\r\n  constructor(x, y, z){\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    if(this.z === undefined) this.z = null;\r\n    this.degree = 0;\r\n    this.size = 3;\r\n    this.color = \"rgb(0,255,255)\";\r\n  }\r\n\r\n  add(other){\r\n    this.x += other.x;\r\n    this.y += other.y;\r\n    if(this.z !== null) this.z += other.z;\r\n  }\r\n\r\n  /*In case we need to set specific coordinates, but we shouldn't have to */\r\n\r\n  setX(x){\r\n    this.x = x;\r\n  }\r\n\r\n  setY(y){\r\n    this.y = y;\r\n  }\r\n\r\n  setZ(z){\r\n    this.z = z;\r\n  }\r\n\r\n  increment_degree(){\r\n    this.degree += 1;\r\n  }\r\n\r\n  setSize(size){\r\n    this.size = size;\r\n  }\r\n\r\n  setColor(color){\r\n    this.color = color;\r\n  }\r\n\r\n  setVector(vector){\r\n    this.setX(vector[0]);\r\n    this.setY(vector[1]);\r\n    if(vector[2] !== undefined && this.z !== null){\r\n      this.setZ(vector[2]);\r\n    }\r\n  }\r\n\r\n  copy_vertex(){\r\n    const v = new Vertex(this.x, this.y, this.z);\r\n    v.color = this.color;\r\n    v.degree = this.degree;\r\n    v.size = this.size;\r\n    return v;\r\n  }\r\n\r\n  toCSV(){\r\n    var row = \"vertex,\";\r\n    row += this.x.toString()+\",\";\r\n    row += this.y.toString()+\",\";\r\n    if(this.z === null) row += \" ,\";\r\n    else{ row += this.z.toString()+\",\"};\r\n    row += this.degree.toString() + \",\";\r\n    row+= this.size.toString() + \",\";\r\n    row += this.color + \"\\n\";\r\n    return row;\r\n  }\r\n}\r\n\r\nexport default Vertex;\r\n","class Edge{\r\n  /*\r\n  Colors are in rgba format\r\n  */\r\n  constructor(start, end, color, weight){\r\n    this.start = start;\r\n    this.end = end;\r\n    this.weight = weight;\r\n    if(this.weight === undefined || this.weight === null) this.weight = 1;\r\n    this.color = color;\r\n    if(this.color === undefined || color ===null) this.color = \"rgb(0,0,0)\";\r\n    this.alpha = 0.1;\r\n  }\r\n\r\n  setColor(color){\r\n    this.color = color;\r\n  }\r\n\r\n  setAlpha(alpha){\r\n    this.alpha = alpha;\r\n  }\r\n\r\n  copy_edge(){\r\n    const e = new Edge(this.start, this.end);\r\n    e.setColor(this.color);\r\n    e.setAlpha(this.alpha);\r\n    return e;\r\n  }\r\n\r\n  toCSV(){\r\n    var row = \"edge,\";\r\n    row += this.start.toString() +\",\";\r\n    row += this.end.toString() + \",\";\r\n    row += this.color + \",\";\r\n    row += this.weight.toString() +\",\";\r\n    row += this.alpha.toString() + \"\\n\";\r\n    return row;\r\n  }\r\n}\r\n\r\nexport default Edge;\r\n","import Vertex from \"../datatypes/Vertex\";\r\nimport Edge from \"../datatypes/Edge\";\r\n\r\nexport default function createRandomNetwork(maxWidth, maxHeight, numV, numE, conn, randomType, startColors, endColors, resize, minsize, maxsize){\r\n  let connected = conn === undefined? \"False\": conn;\r\n  let seed = randomType === undefined? \"random\": randomType;\r\n  // console.log(\"startColors:\", startColors);\r\n  // console.log(\"endColors:\", endColors);\r\n  // console.log(\"resize\", resize);\r\n  // console.log(\"minsize\", minsize);\r\n  // console.log(\"maxsize\", maxsize);\r\n  const maxDegree = numV-1;\r\n  let maxEdges = Math.floor((maxDegree*numV)/2)\r\n  const maxEdgesValue = maxEdges;\r\n  let vertices = [];\r\n  let available_vertices = [];\r\n  const center = [maxWidth/2, maxHeight/2];\r\n  const radius = (maxHeight/2)*0.90;\r\n\r\n  //create random points on canvas\r\n  for(let i = 0; i < numV; i ++){\r\n    var point = [0,0]\r\n    if(seed === \"random\" || seed === \"cycle\") point = createRandomPos(maxWidth, maxHeight);\r\n    if(seed === \"randomcircle\") point = createRandomPosCircle(center, radius);\r\n    vertices.push( new Vertex(point[0], point[1]));\r\n    available_vertices.push(i);\r\n  }\r\n  let edges = [];\r\n  if(!(seed === \"cycle\")){\r\n    let already_connected = new Map();\r\n    let remainingEdges = numE;\r\n    if(connected === \"True\"){\r\n      let unvisited = [];\r\n      for(var i = 0; i < numV; i++){\r\n        unvisited.push(i);\r\n      }\r\n      let visited = [];\r\n      var vIndex1 = pickRandomVertex(unvisited);\r\n      var v1 = unvisited[vIndex1];\r\n      visited.push(v1);\r\n      unvisited = removeFromArray(unvisited, vIndex1);\r\n\r\n      var visited_num = 1;\r\n      while(visited_num < numV){\r\n        var vIndex2 = pickRandomVertex(unvisited)\r\n        var v2 = unvisited[vIndex2];\r\n        visited.push(v2); //add to visited\r\n        edges.push( new Edge(v1,v2));\r\n        vertices[v1].increment_degree();\r\n        vertices[v2].increment_degree();\r\n        remainingEdges --;\r\n        maxEdges --;\r\n        const indexTo = v1 + 1000* v2; // works as long as numV < 1000\r\n        const indexFrom = v2+ 1000*v1;\r\n        already_connected.set(indexTo, true);\r\n        already_connected.set(indexFrom, true);\r\n        //remove from unvisited\r\n        unvisited = removeFromArray(unvisited, vIndex2);\r\n        //reset v1\r\n        vIndex1 = pickRandomVertex(visited);\r\n        v1 = visited[vIndex1];\r\n        visited_num ++;\r\n      }\r\n    }\r\n    while(remainingEdges > 0 && maxEdges > 0 && available_vertices.length > 1){\r\n      const [random1, random2] = connectRandomVertices(available_vertices.slice());\r\n      if(random1 === random2) console.log(\"unexpected\");\r\n      if(random1 === undefined) console.log(\"unexpected undefiend 1\");\r\n      if(random2 === undefined) console.log(\"unexpected undefined 2\");\r\n      // console.log(\"rem:\", remainingEdges, \"max\", maxEdges);\r\n      const indexTo = random1+1000*random2; // as long as numV < 1000 this works\r\n      const indexFrom = random2+1000*random1;\r\n      if(already_connected.get(indexTo) === undefined ){\r\n        edges.push(new Edge(random1, random2));\r\n        vertices[random1].increment_degree();\r\n        vertices[random2].increment_degree();\r\n        if(vertices[random1].degree > maxDegree) available_vertices.splice(random1, 1);\r\n        if(vertices[random2].degree > maxDegree) available_vertices.splice(random2, 1);\r\n        already_connected.set(indexTo, true);\r\n        already_connected.set(indexFrom, true);\r\n        remainingEdges --;\r\n        maxEdges --;\r\n        }\r\n      }\r\n  }\r\n  else{\r\n    //seed = cycle\r\n    var [path,root] = initial_random_cycle(vertices);\r\n    for(let i = 0; i < path.length-1; i++){\r\n      const e = new Edge(path[i], path[i+1])\r\n      e.setAlpha(0.2);\r\n      edges.push(e);\r\n    }\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      vertices[i].degree = 2;\r\n    }\r\n  }\r\n\r\n\r\n  var max_degree = find_max_degree(vertices);\r\n  // console.log(\"max_degree\", max_degree);\r\n  var shouldRecolor = !(sameColor(startColors, endColors));\r\n  // console.log(shouldRecolor);\r\n  var colorGradient;\r\n  if(shouldRecolor === true) var colorGradient = createColorGradient(startColors, endColors, max_degree);\r\n  // console.log(colorGradient);\r\n  if(resize === true || shouldRecolor === true){\r\n  for(let i = 0; i < vertices.length; i++){\r\n      if(resize === true) vertices[i].size = assign_size(vertices[i].degree, max_degree, minsize, maxsize);\r\n      if(shouldRecolor === true) vertices[i].color = assign_color(vertices[i].degree, max_degree, colorGradient);\r\n      // console.log(vertices[i].size)\r\n      // console.log(vertices[i].color);\r\n    }\r\n  }\r\n\r\n  return [vertices,edges];\r\n}\r\n\r\nfunction createRandomPos(maxWidth, maxHeight){\r\n  return [Math.random()*(maxWidth+1-3), Math.random()*(maxHeight+1-3)];\r\n}\r\n\r\nfunction createRandomPosCircle(center,radius){\r\n  const randomAngle = Math.random()*(2*Math.PI);\r\n  return [center[0] + radius*Math.cos(randomAngle), center[1]+radius*Math.sin(randomAngle)];\r\n}\r\n\r\nfunction connectRandomVertices(vertices){\r\n  var random1 = vertices[Math.floor(Math.random()*vertices.length)];\r\n  vertices.splice(random1,1);\r\n  var random2 = vertices[Math.floor(Math.random()*vertices.length)];\r\n\r\n  return [random1, random2];\r\n}\r\n\r\nfunction pickRandomVertex(array){\r\n  return Math.floor(Math.random()*array.length)\r\n}\r\n\r\nfunction removeFromArray(array, index){\r\n  return array.slice(0,index).concat(array.slice(index+1))\r\n}\r\n\r\nfunction initial_random_cycle(vertices){\r\n\r\n  var root = 0;\r\n  var initial_path = []\r\n\r\n  //construct adjacency matrix\r\n  const adj = []\r\n  var available_vertices = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    available_vertices.push(i);\r\n\r\n  }\r\n\r\n\r\n  root = pick_random_array(available_vertices);\r\n  available_vertices = remove_from_array(available_vertices, root);\r\n\r\n  initial_path.push(root);\r\n  for(let i = 0; i < vertices.length -1; i++){\r\n    const next_node = pick_random_array(available_vertices);\r\n    available_vertices = remove_from_array(available_vertices, next_node);\r\n    initial_path.push(next_node);\r\n  }\r\n  initial_path.push(root);\r\n\r\n  return [initial_path, root];\r\n}\r\n\r\nfunction remove_from_array(array, item){\r\n  var index  = array.indexOf(item)\r\n  return array.slice(0,index).concat(array.slice(index+1));\r\n}\r\n\r\nfunction pick_random_array(array){\r\n  return array[Math.floor(Math.random()*array.length)];\r\n}\r\n\r\nfunction find_max_degree(vertices){\r\n  var max_degree = -Infinity;\r\n  for(let i = 0; i < vertices.length; i++){\r\n    max_degree = Math.max(vertices[i].degree, max_degree);\r\n  }\r\n  return max_degree;\r\n}\r\n\r\nfunction assign_size(degree, max_degree, minsize, maxsize){\r\n  //min degree is 1 or 0\r\n  return minsize +(maxsize - minsize)*(degree/max_degree)\r\n}\r\n\r\nfunction assign_color(degree, max_degree, gradient){\r\n\r\n  var selection = gradient[Math.floor((degree/max_degree) * (gradient.length-1))]\r\n\r\n  return rgb_to_str(selection)\r\n}\r\n\r\nfunction createColorGradient(startColor, endColor, maxDegree){\r\n  // console.log(\"inside color gradient\", startColor, endColor, maxDegree);\r\n  var [startHue, startSaturation, startLightness] = rgb_to_hsl(startColor);\r\n  var [endHue, endSaturation, endLightness] = rgb_to_hsl(endColor);\r\n\r\n  // console.log(startHue, startSaturation, startLightness);\r\n  // console.log(endHue, endSaturation, endLightness);\r\n  var incrementHue = (endHue-startHue)/maxDegree;\r\n\r\n  const gradient = [];\r\n\r\n  for(let i = 0; i < maxDegree; i++){\r\n    const newHue = startHue+(incrementHue*i)%360;\r\n    const [red,green,blue] = hsl_to_rgb((startHue+incrementHue*i)%360, startSaturation,\r\n                                            startLightness)\r\n    gradient.push([Math.abs(red%256), Math.abs(green%256), Math.abs(blue%256)]);\r\n    // console.log(gradient[i]);\r\n  }\r\n  return gradient;\r\n}\r\n\r\nfunction rgb_to_hsl(rgbColor){\r\n  var red = rgbColor[0]/255;\r\n  var green = rgbColor[1]/255;\r\n  var blue = rgbColor[2]/255;\r\n  var Cmax = Math.max(...[red,green,blue]);\r\n  var Cmin = Math.min(...[red,green,blue]);\r\n  var delta = Cmax-Cmin;\r\n\r\n\r\n  var hue = calculate_hue(delta, Cmax, red, green, blue)%360;\r\n  var lightness = (Cmax+Cmin)/2;\r\n  var saturation = delta === 0? 0: delta/(1-Math.abs(2*lightness-1));\r\n\r\n  return [hue, saturation, lightness];\r\n}\r\n\r\nfunction hsl_to_rgb(hue, saturation, lightness){\r\n  const C = (1 - Math.abs(2*lightness-1))*saturation\r\n  const X = C * (1 - Math.abs(hue/60)%2 -1);\r\n  const m = lightness - C/2;\r\n  const [R_prime, G_prime, B_prime] = check_degrees(hue, C, X);\r\n  return [((R_prime+m)*255)%256, ((G_prime + m)* 255)%256, ((B_prime+m) * 255)%256];\r\n}\r\n\r\nfunction calculate_hue(delta, Cmax, red, green, blue){\r\n  if(delta === 0) return 0;\r\n  if(Cmax === red) return 60*(((green-blue)/delta)%6);\r\n  if(Cmax === green) return 60*((blue-red)/delta+2);\r\n  if(Cmax === blue) return 60*((red- green)/delta + 4);\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\" + color[0] + \",\" + color[1] + \",\" + color[2]+\")\";\r\n}\r\n\r\n/*\r\nInput is RGB colors in 3d array\r\n*/\r\nfunction sameColor(startColor, endColor){\r\n  if(startColor[0] === endColor[0] && startColor[1] === endColor[1] && startColor[2] === endColor[2]) return true;\r\n  return false;\r\n}\r\n\r\nfunction check_degrees(hue, C, X){\r\n  if((hue >= 0 && hue < 60) || hue == 360) return [C,X,0];\r\n  if(hue >= 60 && hue < 120 ) return [X,C,0];\r\n  if(hue >= 120 && hue < 180 ) return [0, C, X];\r\n  if(hue >= 180 && hue < 240 ) return [0, X, C];\r\n  if(hue >= 240 && hue < 300 ) return [X, 0, C];\r\n  if(hue >= 300 && hue < 360 ) return [C, 0, X];\r\n  return [0,0,0];\r\n}\r\n","class Force{\r\n  constructor(x,y,z){\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    if(this.z === undefined) this.z = null;\r\n  }\r\n\r\n  setX(x){\r\n    this.x = x;\r\n  }\r\n\r\n  setY(y){\r\n    this.y = y;\r\n  }\r\n\r\n  setZ(z){\r\n    this.z = z;\r\n  }\r\n\r\n  addVector(vector){\r\n    this.x += vector[0];\r\n    this.y += vector[1];\r\n    if(vector[2]!== undefined && this.z !== null){\r\n      this.z += vector[2];\r\n    }\r\n  }\r\n\r\n  scale(delta){\r\n    this.setX(this.x*delta);\r\n    this.setY(this.y*delta);\r\n    if(this.z !== null){\r\n      this.setZ(this.z*delta);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Force;\r\n","import Force from \"../datatypes/Force\";\r\n\r\nvar CREP = 20;\r\nvar CSPRING = 20;\r\nvar lx = 0;\r\nvar ly = 0;\r\n/**\r\n* Basic spring embedding algorithm\r\n*/\r\nexport function springEmbedding(vertices,edges,graph_distancex, graph_distancey, iterations, settings){\r\n  // relevant constants for spring embedding\r\n  const W = graph_distancex -6;\r\n  const L = graph_distancey -6;\r\n  lx = 1 + ((Math.sqrt(W)/2-1)*settings.areascaling)/100;\r\n  ly = 1 + ((Math.sqrt(L)/2-1)*settings.areascaling)/100;\r\n  const K = iterations;\r\n\r\n  const epsilon = settings.eps;\r\n  const delta = settings.delta;\r\n  CREP = settings.kr;\r\n  CSPRING = settings.ka;\r\n  const distType = settings.distanceType;\r\n\r\n  // console.log(settings);\r\n\r\n  let t = 1;\r\n  let animations = [];\r\n  let scaling_factor = [];\r\n\r\n  while(t<K){\r\n    let force_list = [];\r\n    for(let i =0; i < vertices.length; i++){\r\n      let f = new Force(0,0);\r\n      let vert_connected = []; //represents vertices we should not repulse later\r\n      // CALCULATE ATTRACTION FORCES\r\n      for(let j = 0; j < edges.length; j++){\r\n        if(i === edges[j].start && i !== edges[j].end){\r\n          const calcs = fattract(vertices[edges[j].start], vertices[edges[j].end], distType);\r\n          f.addVector(calcs)\r\n          vert_connected.push(edges[j].end);\r\n        }\r\n        if(i === edges[j].end && i !== edges[j].start){\r\n          const calcs = fattract(vertices[edges[j].end], vertices[edges[j].start], distType)\r\n          f.addVector(calcs)\r\n          vert_connected.push(edges[j].start);\r\n        }\r\n      }\r\n      //CALCULATE REPULSIVE FORCES\r\n      for(let j =0; j < vertices.length; j++){\r\n        if(i === j ) continue;\r\n        let connected = false;\r\n        for(let k = 0; k < vert_connected.length; k++){\r\n          if(j === vert_connected[k]) connected = true;\r\n        }\r\n        if(!connected){\r\n          const calcs = frepulse(vertices[i], vertices[j]);\r\n          f.addVector(calcs)\r\n        }\r\n      }\r\n      force_list.push(f)\r\n    }\r\n\r\n\r\n    //UPDATE POSITIONS\r\n    const iteration_animation = [];\r\n    var maxF = 0;\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var maxX = 0;\r\n    var maxY = 0;\r\n\r\n    for(let i = 0; i < vertices.length; i++){\r\n      force_list[i].scale(delta);\r\n      vertices[i].add(force_list[i]);\r\n\r\n      //update scaling_factor\r\n      minX =  minX = Math.min(minX, vertices[i].x)\r\n      minY = Math.min(minY, vertices[i].y);\r\n      maxX = vertices[i].x > maxX? vertices[i].x:maxX;\r\n      maxY = vertices[i].y > maxY? vertices[i].y:maxY;\r\n      //update animations\r\n      iteration_animation.push([vertices[i].x, vertices[i].y]);\r\n    }\r\n    scaling_factor.push([-minX, -minY, W/((-minX)+maxX), L/((-minY)+maxY)])\r\n\r\n\r\n    animations.push(iteration_animation);\r\n    t += 1\r\n  }\r\n  //scale animations properly without affecting computations\r\n  for(let i = 0; i < animations.length; i++){\r\n    for(let j = 0; j < animations[i].length; j ++){\r\n      animations[i][j][0] = (animations[i][j][0] + scaling_factor[i][0])*scaling_factor[i][2];\r\n      animations[i][j][1] = (animations[i][j][1] + scaling_factor[i][1])*scaling_factor[i][3];\r\n    }\r\n  }\r\n\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var maxX = 0;\r\n  var maxY = 0;\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    maxX = vertices[i].x > maxX? vertices[i].x:maxX;\r\n    maxY = vertices[i].x > maxY? vertices[i].y:maxY;\r\n  }\r\n  minX = Math.min(minX, 0);\r\n  minY = Math.min(minY, 0);\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    vertices[i].x = (vertices[i].x + Math.abs(minX)) * Math.min(1,(W/(Math.max(maxX,W)+Math.abs(minX))));\r\n    vertices[i].y = (vertices[i].y + Math.abs(minY)) * Math.min(1,(L/(Math.max(maxY,L) + Math.abs(minY))));\r\n  }\r\n  return [vertices, animations];\r\n}\r\n\r\n\r\n\r\n\r\nfunction frepulse(v1,v2){\r\n  var dist = distance(v2,v1);\r\n  const unitV = unitVector(v2,v1);\r\n  return [(CREP*unitV[0])/Math.sqrt(dist) , (CREP*unitV[1])/Math.sqrt(dist)];\r\n\r\n}\r\n\r\nfunction fattract(v1,v2, distanceType){\r\n  var dist = distance(v1,v2);\r\n  const unitV = unitVector(v1,v2);\r\n\r\n  return [CSPRING* Math.log(dist/(lx)) * unitV[0],\r\n          CSPRING* Math.log(dist/(ly)) * unitV[1]];\r\n}\r\n\r\nfunction distance(v1,v2){\r\n  const dist = Math.sqrt(Math.pow((v1.x - v2.x), 2) + Math.pow((v1.y - v2.y), 2))\r\n  return dist === 0? 0.00000000000000000001: dist;\r\n}\r\n\r\n/**\r\n* UnitVector from X to Y\r\n*/\r\nfunction unitVector(v1,v2){\r\n  const new_x = v2.x - v1.x;\r\n  const new_y = v2.y - v1.y;\r\n  const dist = distance(v1,v2);\r\n  return [new_x/dist, new_y/dist];\r\n}\r\n","import Force from \"../datatypes/Force\";\r\nimport Vertex from \"../datatypes/Vertex\";\r\nvar C= 1;\r\nvar K = 0.01; //OPTIMAL DISTANCE\r\nvar ITERATIONS = 300;\r\n\r\nexport function fruchtermanReingold(vertices,edges,graph_distancex, graph_distancey, iterations, settings){\r\n  const W = graph_distancex -6;\r\n  const L = graph_distancey -6;\r\n  const kIter = iterations;\r\n  ITERATIONS = kIter;\r\n  const coolingtype = settings.tempHeuristic;\r\n  const tempHeuristic = settings.tempHeuristic;\r\n  C = 1;\r\n  K = C* Math.sqrt((W)*(L)/(vertices.length));\r\n  const epsilon = settings.eps;\r\n\r\n  // console.log(settings);\r\n\r\n\r\n  let t = 1;\r\n  let animations = [];\r\n  let temperature = (1/10)*W * settings.cTemp;\r\n  let temperature_list = [];\r\n  let previousAngle = [];\r\n  let scaling_factor = [];\r\n  if(coolingtype === \"Directional\"){\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      temperature_list.push(temperature);\r\n    }\r\n  }\r\n  const initial_temperature = temperature;\r\n\r\n  while(t<kIter){\r\n    let force_list = [];\r\n    //calculate repulsive forces\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      let f = new Force(0,0);\r\n      for(let j = 0; j < vertices.length; j ++){\r\n        if(i!== j){\r\n          const delta = distance(vertices[i], vertices[j]);\r\n          const calcs = frepulse(vertices[i], vertices[j], delta);\r\n          // var delta = distance(vertices[i], vertices[j]);\r\n          // var unitvector = unitVector(vertices[j], vertices[i])\r\n          f.addVector(calcs);\r\n        }\r\n      }\r\n      force_list.push(f);\r\n    }\r\n    //calculate attractive forces\r\n    for(let i = 0; i < edges.length; i++){\r\n      const e = edges[i];\r\n      if(e.start === e.end) console.log(\"well fuck\");\r\n      const delta = distance(vertices[e.start], vertices[e.end]);\r\n      const calcs = fattract(vertices[e.start], vertices[e.end], delta);\r\n      const ncalcs = [-calcs[0], -calcs[1]]\r\n\r\n      force_list[e.end].addVector(calcs);\r\n      force_list[e.start].addVector(ncalcs);\r\n    }\r\n    //update positions\r\n    const iter_animations = [];\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var maxX = 0;\r\n    var maxY = 0;\r\n    var maxForce = 0;\r\n    const origin = new Vertex(0,0);\r\n\r\n    for(let i = 0; i < vertices.length; i++){\r\n      const unitvector = unitVector(force_list[i], origin)\r\n      const unitForce = new Force(unitvector[0], unitvector[1])\r\n      unitForce.setX(unitForce.x*Math.min(temperature, Math.abs(force_list[i].x)));\r\n      unitForce.setY(unitForce.y*Math.min(temperature, Math.abs(force_list[i].y)))\r\n\r\n      vertices[i].add(unitForce);\r\n\r\n      //UPDATE CONVERGENCE\r\n      // if(i == 1){\r\n      //   maxForce = distance([new_x,new_y], old_vertices);\r\n      // }\r\n      // else{\r\n      //   maxForce = distance([new_x,new_y], old_vertices) > maxForce? distance([new_x,new_y], old_vertices): maxForce;\r\n      // }\r\n\r\n\r\n      minX =  minX = Math.min(minX, vertices[i].x)\r\n      minY = Math.min(minY, vertices[i].y);\r\n      maxX = vertices[i].x > maxX? vertices[i].x:maxX;\r\n      maxY = vertices[i].y > maxY? vertices[i].y:maxY;\r\n\r\n      iter_animations.push([vertices[i].x, vertices[i].y])\r\n    }\r\n    //update scaling factors, animations and particle temperature\r\n    scaling_factor.push([-minX,-minY, W/(-minX+maxX), L/(-minY+maxY)]);\r\n    animations.push(iter_animations);\r\n\r\n    if(tempHeuristic !== \"Directional\")temperature = cool(temperature, tempHeuristic, initial_temperature);\r\n    t+= 1;\r\n    // if(maxForce < epsilon) break;\r\n  }\r\n  const iter_animations = [];\r\n\r\n  for(let i = 0; i < animations.length; i++){\r\n    for(let j = 0; j < animations[i].length; j ++){\r\n      animations[i][j][0] = (animations[i][j][0] + scaling_factor[i][0])*scaling_factor[i][2];\r\n      animations[i][j][1] = (animations[i][j][1] + scaling_factor[i][1])*scaling_factor[i][3];\r\n    }\r\n  }\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var maxX = 0;\r\n  var maxY = 0;\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    maxX = vertices[i].x > maxX? vertices[i].x:maxX;\r\n    maxY = vertices[i].y > maxY? vertices[i].y:maxY;\r\n  }\r\n  // maxX = Math.max(W, maxX);\r\n  // maxY = Math.max(L, maxY);\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    vertices[i].x = (vertices[i].x + (-minX)) * W/(-minX+maxX);\r\n    vertices[i].y = (vertices[i].y + (-minY)) * L/(-minY+maxY);\r\n  }\r\n  // console.log(vertices);\r\n  return [vertices, animations];\r\n}\r\n\r\nfunction frepulse(v1,v2, delta){\r\n  const unitvector = unitVector(v1,v2)\r\n\r\n  return [((Math.pow(K,2))/delta)*unitvector[0], ((Math.pow(K,2))/delta)*unitvector[1]];\r\n}\r\n\r\nfunction fattract(v1,v2,delta){\r\n  const unitvector = unitVector(v1,v2);\r\n\r\n  return [unitvector[0]*(Math.pow(delta,2))/K, unitvector[1]*(Math.pow(delta,2))/K];\r\n}\r\n\r\nfunction distance(v1,v2){\r\n  // console.log(x,y);\r\n  var distX = Math.pow((v1.x - v2.x), 2);\r\n  var distY = Math.pow((v1.y - v2.y), 2);\r\n  if(distX + distY === 0) distX = 0.00000000000000000001\r\n\r\n  return  Math.sqrt((distX + distY));\r\n}\r\n/**\r\n* UnitVector from X to Y\r\n*/\r\nfunction unitVector(v1,v2){\r\n  const new_x = v2.x - v1.x;\r\n  const new_y = v2.y - v1.y;\r\n  const dist = distance(v1,v2);\r\n  return [new_x/dist, new_y/dist];\r\n}\r\n\r\nfunction cool(t, tempHeuristic, initial_temperature){\r\n  if(tempHeuristic === \"Linear\"){\r\n    return t - initial_temperature/ITERATIONS\r\n  }\r\n  if(tempHeuristic === \"Logarithmic\"){\r\n    return 0.90*t\r\n  }\r\n  if(tempHeuristic === \"Directional\"){\r\n    return t\r\n  }\r\n  return t\r\n}\r\n\r\nfunction findAngle(x,y){\r\n  const angle = Math.atan((y[1] - x[1])/(y[0] - x[0]));\r\n  return angle === undefined? 0: angle\r\n}\r\n","export function kamadaKawai(vertices,edges, graph_distancex, graph_distancey, iterations){\r\n  //relevant constants\r\n\r\n  const L0 = (graph_distancex+graph_distancey)/2;\r\n  const L = 2;\r\n  const K = 1;\r\n  const epsilon = 1;\r\n\r\n  let new_vertices = [];\r\n  for(let i= 0; i < vertices.length; i++){\r\n    new_vertices.push(vertices[i].slice());\r\n  }\r\n  let new_edges = [];\r\n  //make a copy of edges and copy references of new_vertices\r\n  for(let i = 0; i < vertices.length; i++){\r\n    for(let j = 0; j < vertices.length; j++){\r\n      for(let k =0; k < edges.length; k++){\r\n        if(i === edges[k][0] && j === edges[k][1]){\r\n          new_edges.push([i,j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //create adjacency matrix\r\n  const adj = [];\r\n  // const ideal_lengths = [];\r\n  const force_list = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    const adj_row = [];\r\n    // const ideal_length_row = [];\r\n    const force_list_row = [];\r\n    for(let j = 0; j < vertices.length; j++){\r\n      if(i == j) adj_row.push(0);\r\n      if(i!== j) adj_row.push(Infinity);\r\n      // ideal_length_row.push(0);\r\n      force_list_row.push(0);\r\n    }\r\n    // ideal_lengths.push(ideal_length_row);\r\n    force_list.push(force_list_row);\r\n    adj.push(adj_row)\r\n  }\r\n  for(let i = 0; i< edges.length; i++){\r\n    adj[new_edges[i][0]][new_edges[i][1]] = 1;\r\n    adj[new_edges[i][1]][new_edges[i][0]] = 1;\r\n  }\r\n  const max_dij = FloydWarshallAlgo(adj);\r\n  console.log(adj);\r\n\r\n  //compute lij\r\n  const ideal_length = L*L0/max_dij;\r\n  console.log(ideal_length);\r\n\r\n  //compute kij\r\n  for(let i = 0; i < vertices.length; i++){\r\n    for(let j = 0; j < vertices.length; j ++){\r\n      if(i !== j){force_list[i][j] = K/(Math.pow(adj[i][j],2))};\r\n    }\r\n  }\r\n\r\n  let maxdM = Infinity;\r\n  const partials_list = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    partials_list.push([0,0]);\r\n  }\r\n\r\n  while(maxdM > epsilon){\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      for(let j = 0; j < vertices.length; j ++){\r\n        if(i !== j){\r\n          partials_list[i][0] += adj[i][j] * (new_vertices[i][0] - new_vertices[j][0] - (ideal_length*(new_vertices[i][0] - new_vertices[j][0]))/distance(new_vertices[i],new_vertices[j]));\r\n          partials_list[i][1] += adj[i][j] * (new_vertices[i][1] - new_vertices[j][1] - (ideal_length*(new_vertices[i][1] - new_vertices[j][1]))/distance(new_vertices[i],new_vertices[j]));\r\n        }\r\n      }\r\n    }\r\n    const dM = [];\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      const dist = distance(partials_list[i], [0,0]);\r\n      dM.push(dist);\r\n    }\r\n    maxdM = Math.max(...dM);\r\n    const index = dM.indexOf(maxdM);\r\n    while(maxdM > epsilon){\r\n      var d2Ed2x = 0;\r\n      var d2Ed2y = 0;\r\n      var d2Edxdy = 0;\r\n      var d2Edydx = 0;\r\n      var dEdx = 0;\r\n      var dEdy = 0;\r\n      var dx = 0;\r\n      var dy = 0;\r\n      for(let i = 0; i < vertices.length; i++){\r\n        if(i !== index){\r\n          d2Ed2x += adj[index][i] * (new_vertices[index][0] - new_vertices[i][0] - (ideal_length*Math.pow(new_vertices[index][0] - new_vertices[i][0],2))/Math.pow(distance(new_vertices[index],new_vertices[i]), 3));\r\n          d2Ed2y += adj[index][i] * (new_vertices[index][1] - new_vertices[i][1] - (ideal_length*Math.pow(new_vertices[index][1] - new_vertices[i][1],2))/Math.pow(distance(new_vertices[index],new_vertices[i]),3));\r\n          d2Edxdy += adj[index][i] * (ideal_length*(new_vertices[index][0]-new_vertices[i][0])*(new_vertices[index][1] - new_vertices[i][1]))/(Math.pow(distance(new_vertices[index], new_vertices[i]),3));\r\n          d2Edydx += adj[index][i] * (ideal_length*(new_vertices[index][0]-new_vertices[i][0])*(new_vertices[index][1] - new_vertices[i][1]))/(Math.pow(distance(new_vertices[index], new_vertices[i]),3));\r\n          dEdx += adj[index][i] * (new_vertices[index][0] - new_vertices[i][0] - (ideal_length*(new_vertices[index][0] - new_vertices[i][0]))/distance(new_vertices[index],new_vertices[i]));\r\n          dEdy += adj[index][i] * (new_vertices[index][1] - new_vertices[i][1] - (ideal_length*(new_vertices[index][1] - new_vertices[i][1]))/distance(new_vertices[index],new_vertices[i]));\r\n        }\r\n      }\r\n      dx = (-dEdx -d2Edxdy*(-dEdy/d2Edydx))/(d2Ed2x - (d2Edxdy*d2Ed2y)/d2Edydx)\r\n      dy = (-d2Ed2y*dx - dEdy)/(d2Edydx)\r\n      new_vertices[index][0] = new_vertices[index][0] + dx;\r\n      new_vertices[index][1] = new_vertices[index][1] + dy;\r\n      var new_dEdx = 0;\r\n      var new_dEdy = 0;\r\n      for(let i = 0; i < vertices.length; i++){\r\n        if(i !== index){\r\n          new_dEdx += adj[index][i] * (new_vertices[index][0] - new_vertices[i][0] - (ideal_length*(new_vertices[index][0] - new_vertices[i][0]))/distance(new_vertices[index],new_vertices[i]));\r\n          new_dEdy += adj[index][i] * (new_vertices[index][1] - new_vertices[i][1] - (ideal_length*(new_vertices[index][1] - new_vertices[i][1]))/distance(new_vertices[index],new_vertices[i]));\r\n        }\r\n      }\r\n      maxdM = distance([new_dEdx, new_dEdy], [0,0]);\r\n      dM[index] = distance([new_dEdx,new_dEdy], [0,0]);\r\n      break;\r\n    }\r\n  }\r\n  return new_vertices;\r\n}\r\n\r\nfunction FloydWarshallAlgo(adj){\r\n  for(let k = 0; k < adj.length; k ++){\r\n    for(let i = 0; i< adj.length; i++){\r\n      for(let j = 0; j < adj.length; j++){\r\n        if(adj[i][j] > adj[i][k] + adj[k][j]) {\r\n          adj[i][j] = adj[i][k] + adj[k][j];\r\n          adj[j][i] = adj[i][k] + adj[k][j];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  var maxRow = adj.map(function(row){return Math.max.apply(Math,row);});\r\n  var max_d = Math.max.apply(null, maxRow);\r\n\r\n  return max_d\r\n}\r\n\r\nfunction distance(x,y){\r\n  return  Math.sqrt(Math.pow((x[0] - y[0]), 2) + Math.pow((x[1] - y[1]), 2));\r\n}\r\n","import Force from \"../datatypes/Force\"\r\nvar ka = 1;\r\nvar kr = 1;\r\nvar kg = 10;\r\nvar ks = 0.1;\r\nvar tau = 0.1;\r\nvar ksmax = 10;\r\n//============================ REMEMBER TO ADD NO OVERLAP SETTING ==========================\r\nexport function forceAtlas2(vertices,edges, graph_distancex, graph_distancey, iterations, settings ){\r\n\r\n  // Algorithm constants\r\n  const kIter = iterations;\r\n  const W = graph_distancex -6;\r\n  const L = graph_distancey -6;\r\n  // console.log(settings);\r\n  kr = settings.fr;\r\n  kg = settings.kg;\r\n  tau = settings.tau;\r\n  ksmax = settings.ksmax;\r\n\r\n\r\n  //set up loop variables\r\n  // console.log(degreeArray);\r\n  let t = 1;\r\n  let animations = [];\r\n  let scaling_factor = [];\r\n  let temperature = (1/10)*W;\r\n\r\n\r\n  let previous_forces = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    previous_forces.push(new Force(0,0));\r\n  }\r\n  //calculate forces\r\n  while(t< kIter){\r\n    let force_list = [];\r\n\r\n    //calculate repulsive forces\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      let f = new Force(0,0);\r\n      // if(t === 1)console.log(\"vertex\", i)\r\n      for(let j = 0; j < vertices.length; j ++){\r\n        if(i!== j){\r\n\r\n          const repulse_force = frepulse(vertices[i], vertices[j]);\r\n          f.addVector(repulse_force);\r\n        }\r\n      }\r\n      force_list.push(f);\r\n    }\r\n\r\n    //calculate attractive forces\r\n    for(let i = 0; i < edges.length; i ++){\r\n      const e = edges[i];\r\n      const attractive_force = fattract(vertices[e.start], vertices[e.end]);\r\n      const attractive_force_opp = [-attractive_force[0], -attractive_force[1]]\r\n      force_list[e.start].addVector(attractive_force);\r\n      force_list[e.end].addVector(attractive_force_opp);\r\n    }\r\n\r\n\r\n    // calculate forces of gravity\r\n    if(settings.gravity === true){\r\n      const center = (t === 1)? [W/2, L/2]: [(W/2) * 1/(scaling_factor[t-2][2]), (L/2) * 1/(scaling_factor[t-2][3])];\r\n      const center_force = new Force(center[0], center[1]);\r\n\r\n      for(let i = 0; i < vertices.length; i ++){\r\n        const gravity_force = fgravity(vertices[i], center_force);\r\n        // if(t === 1) console.log(gravity_force);\r\n        force_list[i].addVector(gravity_force)\r\n      }\r\n    }\r\n\r\n    //update positions\r\n    const iter_animations = [];\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var maxX = 0;\r\n    var maxY = 0;\r\n    var maxForce = 0;\r\n\r\n    //update global speed\r\n    var sG = 0;\r\n    var traG = 0;\r\n    var swgG = 0;\r\n    for(let i = 0; i < force_list.length; i++){\r\n      const origin = new Force(0,0);\r\n      const combined_force  = new Force(force_list[i].x + previous_forces[i].x, force_list[i].y + previous_forces[i].y);\r\n      const traN = distance(combined_force, origin)/2\r\n      traG += (vertices[i].x+1) * traN;\r\n      const direction_force = new Force(force_list[i].x - previous_forces[i].x, force_list[i].y - previous_forces[i].y);\r\n      const swgN = distance(direction_force, origin);\r\n      swgG += (vertices[i].degree+1)*swgN;\r\n    }\r\n    sG = tau*(traG/swgG);\r\n    // console.log(\"sG\",sG);\r\n\r\n    var sN = 0;\r\n    for(let i = 0; i < vertices.length; i++){\r\n      //find direction of forces\r\n      const origin = new Force(0,0);\r\n      const unitvector = unitVector(force_list[i], origin)\r\n      //calculate temperatures\r\n      const direction_force = new Force(force_list[i].x - previous_forces[i].x, force_list[i].y - previous_forces[i].y);\r\n      const swgN = distance(direction_force, origin);\r\n      sN = Math.min((ks*sG)/(1+sG*Math.sqrt(swgN)),ksmax/distance(force_list[i], origin));\r\n      // console.log(\"sN\", sN);\r\n      vertices[i].setX(vertices[i].x + sN*force_list[i].x);\r\n      vertices[i].setY(vertices[i].y + sN*force_list[i].y);\r\n\r\n      //update previous forces\r\n      previous_forces[i] = force_list[i];\r\n\r\n      //constants for scaling factor\r\n      minX = Math.min(minX, vertices[i].x);\r\n      minY = Math.min(minY, vertices[i].y);\r\n      maxX = vertices[i].x> maxX? vertices[i].x: maxX;\r\n      maxY = vertices[i].y > maxY? vertices[i].y: maxY;\r\n      //add animations\r\n      iter_animations.push([vertices[i].x, vertices[i].y]);\r\n    }\r\n    scaling_factor.push([-minX,-minY, W/(-minX+maxX), L/(-minY+maxY)]);\r\n    animations.push(iter_animations);\r\n    t+=1;\r\n  }\r\n\r\n  //Scale all the animations within the frame\r\n  for(let i = 0; i < animations.length; i++){\r\n    for(let j = 0; j < animations[i].length; j ++){\r\n      animations[i][j][0] = (animations[i][j][0] + scaling_factor[i][0])*scaling_factor[i][2];\r\n      animations[i][j][1] = (animations[i][j][1] + scaling_factor[i][1])*scaling_factor[i][3];\r\n    }\r\n  }\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var maxX = 0;\r\n  var maxY = 0;\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    maxX = Math.max(vertices[i].x, maxX);\r\n    maxY = Math.max(vertices[i].y, maxY);\r\n  }\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    vertices[i].x = (vertices[i].x + (-minX)) * (W/(maxX+(-minX)));\r\n    vertices[i].y = (vertices[i].y + (-minY)) * (L/(maxY + (-minY)));\r\n  }\r\n\r\n  return [vertices, animations];\r\n  //Algorithm\r\n}\r\n\r\nfunction frepulse(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(y,x);\r\n  return [unitvector[0]*kr*(((x.degree+1)*(y.degree+1))/dist),\r\n            unitvector[1]*kr*(((x.degree+1)*(y.degree+1))/dist)];\r\n\r\n}\r\n\r\nfunction fattract(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(x,y);\r\n  return [unitvector[0] *dist, unitvector[1]*dist];\r\n}\r\n\r\nfunction fattractDissuade(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(x,y);\r\n  return [unitvector[0]*dist/(x.degree+1), unitvector[1]*dist/(x.degree+1)]\r\n}\r\n\r\n\r\n\r\nfunction fgravity(v, center){\r\n  var dist_center = distance(v,center);\r\n  var unitvector = unitVector(v,center);\r\n  return [unitvector[0]*kg*(v.degree+1)*dist_center, unitvector[1]*kg*(v.degree+1)*dist_center];\r\n}\r\n\r\nfunction distance(v1,v2){\r\n  var dist = Math.pow(v1.x-v2.x,2) + Math.pow((v1.y-v2.y),2)\r\n  if(dist === 0) dist = 0.00000000000000000001\r\n  return  Math.sqrt(dist);\r\n}\r\n\r\n/**\r\n* UnitVector from X to Y\r\n*/\r\nfunction unitVector(v1,v2){\r\n  const new_x = v2.x - v1.x;\r\n  const new_y = v2.y - v1.y;\r\n  var dist = distance(v1,v2);\r\n  return [new_x/dist, new_y/dist];\r\n}\r\n","import Force from \"../datatypes/Force\"\r\nvar ka = 1;\r\nvar kr = 1;\r\nvar kg = 10;\r\nvar ks = 0.1;\r\nvar tau = 0.1;\r\nvar ksmax = 10;\r\n//============================ REMEMBER TO ADD NO OVERLAP SETTING ==========================\r\nexport function forceAtlasLinLog(vertices,edges, graph_distancex, graph_distancey, iterations, settings ){\r\n\r\n  // Algorithm constants\r\n  const kIter = iterations;\r\n  const W = graph_distancex -6;\r\n  const L = graph_distancey -6;\r\n  // console.log(settings);\r\n  kr = settings.fr;\r\n  kg = settings.kg;\r\n  tau = settings.tau;\r\n  ksmax = settings.ksmax;\r\n\r\n\r\n  //set up loop variables\r\n  // console.log(degreeArray);\r\n  let t = 1;\r\n  let animations = [];\r\n  let scaling_factor = [];\r\n  let temperature = (1/10)*W;\r\n\r\n\r\n  let previous_forces = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    previous_forces.push(new Force(0,0));\r\n  }\r\n  //calculate forces\r\n  while(t< kIter){\r\n    let force_list = [];\r\n\r\n    //calculate repulsive forces\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      let f = new Force(0,0);\r\n      // if(t === 1)console.log(\"vertex\", i)\r\n      for(let j = 0; j < vertices.length; j ++){\r\n        if(i!== j){\r\n\r\n          const repulse_force = frepulse(vertices[i], vertices[j]);\r\n          f.addVector(repulse_force);\r\n        }\r\n      }\r\n      force_list.push(f);\r\n    }\r\n\r\n    //calculate attractive forces\r\n    for(let i = 0; i < edges.length; i ++){\r\n      const e = edges[i];\r\n      const attractive_force = fattract(vertices[e.start], vertices[e.end]);\r\n      const attractive_force_opp = [-attractive_force[0], -attractive_force[1]]\r\n      force_list[e.start].addVector(attractive_force);\r\n      force_list[e.end].addVector(attractive_force_opp);\r\n    }\r\n\r\n\r\n    // calculate forces of gravity\r\n    if(settings.gravity === true){\r\n      const center = (t === 1)? [W/2, L/2]: [(W/2) * 1/(scaling_factor[t-2][2]), (L/2) * 1/(scaling_factor[t-2][3])];\r\n      const center_force = new Force(center[0], center[1]);\r\n      for(let i = 0; i < vertices.length; i ++){\r\n        const gravity_force = fgravity(vertices[i], center_force);\r\n        force_list[i].addVector(gravity_force)\r\n      }\r\n    }\r\n\r\n    //update positions\r\n    const iter_animations = [];\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var maxX = 0;\r\n    var maxY = 0;\r\n    var maxForce = 0;\r\n\r\n    //update global speed\r\n    var sG = 0;\r\n    var traG = 0;\r\n    var swgG = 0;\r\n    for(let i = 0; i < force_list.length; i++){\r\n      const origin = new Force(0,0);\r\n      const combined_force  = new Force(force_list[i].x + previous_forces[i].x, force_list[i].y + previous_forces[i].y);\r\n      const traN = distance(combined_force, origin)/2\r\n      traG += (vertices[i].x+1) * traN;\r\n      const direction_force = new Force(force_list[i].x - previous_forces[i].x, force_list[i].y - previous_forces[i].y);\r\n      const swgN = distance(direction_force, origin);\r\n      swgG += (vertices[i].degree+1)*swgN;\r\n    }\r\n    sG = tau*(traG/swgG);\r\n    // console.log(\"sG\",sG);\r\n\r\n    var sN = 0;\r\n    for(let i = 0; i < vertices.length; i++){\r\n      //find direction of forces\r\n      const origin = new Force(0,0);\r\n      const unitvector = unitVector(force_list[i], origin)\r\n      //calculate temperatures\r\n      const direction_force = new Force(force_list[i].x - previous_forces[i].x, force_list[i].y - previous_forces[i].y);\r\n      const swgN = distance(direction_force, origin);\r\n      sN = Math.min((ks*sG)/(1+sG*Math.sqrt(swgN)),ksmax/distance(force_list[i], origin));\r\n      // console.log(\"sN\", sN);\r\n      vertices[i].setX(vertices[i].x + sN*force_list[i].x);\r\n      vertices[i].setY(vertices[i].y + sN*force_list[i].y);\r\n\r\n      //update previous forces\r\n      previous_forces[i] = force_list[i];\r\n\r\n      //constants for scaling factor\r\n      minX = Math.min(minX, vertices[i].x);\r\n      minY = Math.min(minY, vertices[i].y);\r\n      maxX = vertices[i].x> maxX? vertices[i].x: maxX;\r\n      maxY = vertices[i].y > maxY? vertices[i].y: maxY;\r\n      //add animations\r\n      iter_animations.push([vertices[i].x, vertices[i].y]);\r\n    }\r\n    scaling_factor.push([-minX,-minY, W/(-minX+maxX), L/(-minY+maxY)]);\r\n    animations.push(iter_animations);\r\n    t+=1;\r\n  }\r\n\r\n  //Scale all the animations within the frame\r\n  for(let i = 0; i < animations.length; i++){\r\n    for(let j = 0; j < animations[i].length; j ++){\r\n      animations[i][j][0] = (animations[i][j][0] + scaling_factor[i][0])*scaling_factor[i][2];\r\n      animations[i][j][1] = (animations[i][j][1] + scaling_factor[i][1])*scaling_factor[i][3];\r\n    }\r\n  }\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var maxX = 0;\r\n  var maxY = 0;\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    maxX = Math.max(vertices[i].x, maxX);\r\n    maxY = Math.max(vertices[i].y, maxY);\r\n  }\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    vertices[i].x = (vertices[i].x + (-minX)) * (W/(maxX+(-minX)));\r\n    vertices[i].y = (vertices[i].y + (-minY)) * (L/(maxY + (-minY)));\r\n  }\r\n\r\n  return [vertices, animations];\r\n  //Algorithm\r\n}\r\n\r\nfunction frepulse(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(y,x);\r\n  return [unitvector[0]*kr*(((x.degree+1)*(y.degree+1))/dist),\r\n            unitvector[1]*kr*(((x.degree+1)*(y.degree+1))/dist)];\r\n\r\n}\r\n\r\nfunction fattract(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(x,y);\r\n  return [unitvector[0] *Math.log(1+dist), unitvector[1]*Math.log(1+dist)];\r\n}\r\n\r\nfunction fattractDissuade(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(x,y);\r\n  return [unitvector[0]*Math.log(1+dist)/(x.degree+1), unitvector[1]*Math.log(1+dist)/(x.degree+1)]\r\n}\r\n\r\n\r\n\r\nfunction fgravity(v, center){\r\n  var dist_center = distance(v,center);\r\n  var unitvector = unitVector(v,center);\r\n  return [unitvector[0]*kg*(v.degree+1)*dist_center, unitvector[1]*kg*(v.degree+1)*dist_center];\r\n}\r\n\r\nfunction distance(v1,v2){\r\n  var dist = Math.pow(v1.x-v2.x,2) + Math.pow((v1.y-v2.y),2)\r\n  if(dist === 0) dist = 0.00000000000000000001\r\n  return  Math.sqrt(dist);\r\n}\r\n\r\n/**\r\n* UnitVector from X to Y\r\n*/\r\nfunction unitVector(v1,v2){\r\n  const new_x = v2.x - v1.x;\r\n  const new_y = v2.y - v1.y;\r\n  var dist = distance(v1,v2);\r\n  return [new_x/dist, new_y/dist];\r\n}\r\n","export function spectralDrawing(vertices, edges, graph_distancex, graph_distancey, dimension){\r\n\r\n  // IMPORTANT CONSTANTS\r\n  const epsilon = Math.pow(10, -7);\r\n  const DIMENSION = dimension + 1;\r\n\r\n\r\n\r\n  //Important matrices\r\n  const A = []; //adjacency\r\n  const D = []; //degree\r\n  const L = []; //laplacian\r\n\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    const adj_row = [];\r\n    const degree_row = [];\r\n    const laplacian_row = [];\r\n    for(let j = 0; j < vertices.length; j ++){\r\n      adj_row.push(0);\r\n      degree_row.push(0);\r\n      laplacian_row.push(0);\r\n      if(i === j) degree_row[i] = vertices[i].degree;\r\n    }\r\n    A.push(adj_row);\r\n    D.push(degree_row);\r\n    L.push(laplacian_row);\r\n  }\r\n\r\n  for(let i = 0; i < edges.length; i ++){\r\n    A[edges[i].start][edges[i].end] = 1;\r\n    A[edges[i].end][edges[i].start] = 1;\r\n    L[edges[i].start][edges[i].end] = 1;\r\n    L[edges[i].end][edges[i].start] = 1;\r\n  }\r\n\r\n\r\n  // instantiate known eigenvalues/eigenvectors\r\n  const lambda1 = 0;\r\n  const v1 = [];\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    v1.push(1);\r\n  }\r\n\r\n  const eigenvectors = [];\r\n  eigenvectors.push(v1);\r\n  console.log(\"initial eigenvectors\", eigenvectors);\r\n\r\n  //computing degree normalized eigenvectors v2 ... vk where k is DIMENSION\r\n  for(let i = 2; i < DIMENSION + 1; i++){\r\n    console.log(\"=======================ITERATION\", i-1, \"======================================\")\r\n    let new_vi_vector = randomVector(vertices.length);\r\n    normalize(new_vi_vector);\r\n    console.log(\"initial randomized normalized vector\", new_vi_vector);\r\n    //Normalize against previous eigenvectors;\r\n    let new_vi = new_vi_vector;\r\n\r\n    for(let j = 0; j < i -1; i ++){\r\n      console.log(\"j\", j);\r\n      new_vi = orthogonalize(new_vi, eigenvectors[j], D);\r\n    }\r\n    // end Orthogonalization;\r\n    //Now multiply by constants 1/2(I + D^(-1)A)\r\n    for(let j = 0; j <vertices.length; j++){\r\n      new_vi_vector[j] = 1/2 * (new_vi[j] + sumNeighborComponents(new_vi, L[i])/D[j][j])\r\n    }\r\n    //end multiply\r\n    normalize(new_vi_vector);\r\n    eigenvectors.push(new_vi)\r\n    // while(dotProduct(new_vi_vector, new_vi) < 1- epsilon){\r\n    //   new_vi = new_vi_vector;\r\n    // }\r\n  }\r\n  return eigenvectors;\r\n}\r\n//\r\nfunction randomVector(size){\r\n  const new_vector = [];\r\n  for(let i = 0; i < size; i ++){\r\n    new_vector.push(Math.random())\r\n  }\r\n  return new_vector;\r\n}\r\n\r\nfunction normalize(vector){\r\n  const sum = vector.reduce(function(a,b){return a+ b});\r\n  for(let i = 0; i < vector.length; i ++){\r\n    vector[i] = vector[i]/sum\r\n  }\r\n}\r\n\r\nfunction orthogonalize(u, v, D){\r\n  console.log(\"orthogonalize inputs\",u,v,D);\r\n  const numerator = dotProduct(vectorTimesMatrix(u,D), v);\r\n  const denominator = dotProduct(vectorTimesMatrix(v,D), u);\r\n  console.log(\"num/denum\", numerator, denominator);\r\n  for(let i = 0; i < u.length; i++){\r\n    u[i] = u[i] - u[i]*(numerator/denominator);\r\n  }\r\n}\r\n\r\nfunction sumNeighborComponents(vector, laplacian_i){\r\n  const sum = 0;\r\n  for(let k = 0; k < vector.length; k++){\r\n    if(laplacian_i[k] === -1) sum += vector[k];\r\n  }\r\n  return sum;\r\n}\r\n\r\nfunction vectorTimesMatrix(v, m){\r\n  console.log(\"vectorTimesMatrix inputs\", v, m);\r\n  const new_vector = [];\r\n  for(let  i = 0; i < m.length; i ++){\r\n    new_vector.push(dotProduct(v,getColumn(m,i)));\r\n  }\r\n  return new_vector;\r\n\r\n}\r\n\r\nfunction matrixTimesVector(m,v){\r\n  console.log(\"matrixTimesVector inputs\", m ,v);\r\n  const new_vector = [];\r\n  for(let i = 0; i < m.length; i ++){\r\n    new_vector.push(dotProduct(getColumn(m,i),v))\r\n  }\r\n  return new_vector;\r\n}\r\n\r\nfunction dotProduct(v1,v2){\r\n  console.log(\"dot product inputs\", v1,v2);\r\n  var sum = 0;\r\n  console.log(\"Assertion must always be true\",v1.length === v2.length);\r\n  for(let i = 0; i < v1.length; i ++){\r\n    sum += v1[i]*v2[i];\r\n  }\r\n  return sum\r\n}\r\n\r\nfunction getColumn(matrix, index){\r\n  const new_vector = [];\r\n\r\n  for(let i = 0; i < matrix.length; i ++){\r\n    new_vector.push(matrix[i][index]);\r\n  }\r\n\r\n  return new_vector;\r\n}\r\n","class UnionSets{\r\n  constructor(){\r\n    this.contents = [];\r\n    this.representative = null;\r\n  }\r\n\r\n  add(el){\r\n    if(this.contents.length === 0) this.representative = el;\r\n    this.contents.push(el);\r\n\r\n  }\r\n\r\n  push(contents){\r\n    for(let i = 0; i < contents.length; i++){\r\n      this.contents.push(contents[i]);\r\n    }\r\n  }\r\n\r\n  setRepresentative(v){\r\n    this.representative = v;\r\n  }\r\n\r\n  getRepresentative(){\r\n    return this.representative;\r\n  }\r\n\r\n  union(other){\r\n    this.setRepresentative(other.getRepresentative);\r\n  }\r\n\r\n}\r\n\r\nexport default UnionSets;\r\n","import UnionSets from \"../datatypes/UnionSets\";\r\nimport Vertex from \"../datatypes/Vertex\";\r\nimport Edge from \"../datatypes/Edge\";\r\n\r\nvar VERTICES = [];\r\n\r\nexport function kruskal(vertices, edges, dimension, color){\r\n  //constants\r\n  VERTICES = vertices; //used for soring edges\r\n  const A = [];\r\n  const coloring = rgb_to_str(color);\r\n  const color_animations = [];\r\n\r\n  const make_set = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    make_set.push(i);\r\n  }\r\n  //first need to sort edges by increasing weight\r\n  var sorted_edges = edges.sort(function(e1,e2){\r\n    return distance(VERTICES[e1.start],VERTICES[e1.end],dimension) - distance(VERTICES[e2.start], VERTICES[e2.end],dimension);\r\n  });\r\n\r\n  const copy_input = createFrame(vertices, sorted_edges);\r\n  const current_vertices = copy_input.vertices;\r\n  const current_edges = copy_input.edges\r\n  color_animations.push(createFrame(current_vertices, current_edges));\r\n\r\n  const trees = [];\r\n  const tree_indices = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    const u =  new UnionSets();\r\n    u.add(i);\r\n    trees.push(u);\r\n    tree_indices.push(i);\r\n  }\r\n\r\n  for(let e= 0; e< sorted_edges.length; e++){\r\n    const u = sorted_edges[e].start;\r\n    const v = sorted_edges[e].end;\r\n\r\n\r\n    if(tree_indices[u] !== tree_indices[v]){\r\n      trees[tree_indices[u]].push(trees[tree_indices[v]].contents);\r\n      const val = tree_indices[v];\r\n      for(let i = 0; i < tree_indices.length; i++){\r\n        if(tree_indices[i] === val){\r\n          tree_indices[i] = tree_indices[u];\r\n          trees[tree_indices[i]].contents = [];\r\n        }\r\n      }\r\n      current_vertices[u].color = coloring;\r\n      current_edges[e].color = coloring;\r\n      current_edges[e].alpha = 0.4;\r\n      current_vertices[v].color = coloring;\r\n\r\n      color_animations.push(createFrame(current_vertices, current_edges));\r\n    }\r\n  }\r\n  return [color_animations, sorted_edges];\r\n}\r\n\r\nfunction distance(v1,v2,dim){\r\n  var dist = null;\r\n  if(dim === 2) dist = Math.sqrt(Math.pow(v1.x-v2.x, 2) + Math.pow(v1.y-v2.y,2));\r\n  if(dim === 3) dist = Math.sqrt(Math.pow(v1.x-v2.x,2) + Math.pow(v1.y-v2.y, 2) + Math.pow(v1.z-v2.z, 2));\r\n  return dist === 0? 0.00000000000000000001: dist;\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\" + color[0]+\",\"+color[1]+\",\"+color[2]+\")\";\r\n}\r\n\r\nfunction createFrame(vertices, edges){\r\n  const new_vertices = [];\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    new_vertices.push(vertices[i].copy_vertex());\r\n  }\r\n  const new_edges = [];\r\n  for(let j = 0; j < edges.length; j++){\r\n    new_edges.push(edges[j].copy_edge());\r\n  }\r\n  return {vertices: new_vertices, edges: new_edges};\r\n}\r\n","import Vertex from \"../datatypes/Vertex\";\r\nimport Edge from \"../datatypes/Edge\";\r\n\r\nexport function prim(vertices, edges, dimension, color){\r\n  //constants\r\n  var coloring = rgb_to_str(color);\r\n  if(coloring === null || coloring === undefined) coloring = \"rgb(255,0,0)\";\r\n  const color_animations = [];\r\n\r\n  //make copies of input\r\n  const copy_input = createFrame(vertices, edges);\r\n  const current_vertices = copy_input.vertices;\r\n  const current_edges = copy_input.edges;\r\n  //current_vertices/edges will be modified in place so we need to recreate an initial frame\r\n  const inital_frame = createFrame(current_vertices, current_edges);\r\n  color_animations.push(inital_frame); \r\n\r\n  //construct adjacency matrix\r\n  const adj = [];\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    const adj_row = [];\r\n    for(let j = 0; j < vertices.length; j++){\r\n      adj_row.push(0);\r\n    }\r\n    adj.push(adj_row);\r\n  }\r\n  // assign adjacency values\r\n  for(let e =0; e < edges.length; e++){\r\n    adj[edges[e].start][edges[e].end] = e;\r\n    adj[edges[e].end][edges[e].start] = e;\r\n  }\r\n\r\n  var vertexQueue = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    vertexQueue.push({key: Infinity, parent: null, vertex: i})\r\n  }\r\n\r\n  const A = [];\r\n\r\n  while(vertexQueue.length !== 0){\r\n    var u;\r\n    [u,vertexQueue] = pop(vertexQueue);\r\n    if(!(u.vertex in A)){\r\n      current_vertices[u.vertex].color = coloring;\r\n      color_animations.push(createFrame(current_vertices, current_edges))\r\n      // color_animations.push({vIndex: u.vertex, color: coloring});\r\n      if(u.parent !== null){\r\n        current_edges[adj[u.vertex][u.parent]].color = coloring;\r\n        current_edges[adj[u.vertex][u.parent]].alpha = 0.4;\r\n        color_animations.push(createFrame(current_vertices, current_edges));\r\n      }\r\n    }\r\n\r\n\r\n    for(let i = 0; i < adj[u.vertex].length; i ++){\r\n      if(adj[u.vertex][i] !== 0){\r\n          for(let k = 0; k < vertexQueue.length; k ++){\r\n            if(vertexQueue[k].vertex === i && distance(vertices[u.vertex],\r\n                                  vertices[vertexQueue[k].vertex], dimension) < vertexQueue[k].key){\r\n                vertexQueue[k].key = distance(vertices[u.vertex],\r\n                                    vertices[vertexQueue[k].vertex], dimension)\r\n                vertexQueue[k].parent = u.vertex;\r\n            }\r\n          }\r\n      }\r\n    }\r\n    //end for\r\n    if(vertexQueue.length !== 2) vertexQueue.sort(function(v1,v2) {return v1.key - v2.key});\r\n\r\n  }\r\n\r\n  return color_animations;\r\n}\r\n\r\nfunction pop(array){\r\n  const poppedValue = array[0];\r\n  if(array.length > 1)array = array.slice(1);\r\n  else if(array.length === 1) array = [];\r\n  return [poppedValue,array]\r\n}\r\n\r\nfunction distance(v1,v2, dimension){\r\n  var dist;\r\n  if(dimension === 2) dist = Math.pow((v1.x-v2.x),2) + Math.pow((v1.y-v2.y),2);\r\n  if(dimension === 3) dist =  Math.pow((v1.x-v2.x),2) + Math.pow((v1.y-v2.y),2)+ Math.pow((v1.z-v2.z),2);\r\n  if(dist === 0) dist = 0.00000000000000000001;\r\n  return Math.sqrt(dist);\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\"+color[0]+\",\"+color[1]+\",\"+color[2]+\")\";\r\n}\r\n\r\nfunction createFrame(vertices, edges){\r\n  const new_vertices = [];\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    new_vertices.push(vertices[i].copy_vertex());\r\n  }\r\n  const new_edges = [];\r\n  for(let j = 0; j < edges.length; j++){\r\n    new_edges.push(edges[j].copy_edge());\r\n  }\r\n  return {vertices: new_vertices, edges: new_edges};\r\n}\r\n","import Edge from \"../datatypes/Edge\";\r\nconst MAX_SIMULATIONS = 150;\r\nvar I = -1;\r\nvar K = -1;\r\n\r\nexport function opt2(vertices, edges, dimension, color){\r\n  const path = [];\r\n  var better_solution = false\r\n  const selected_color = rgb_to_str(color);\r\n  var root = edges[0].start;\r\n  path.push(root);\r\n\r\n  for(let i = 1; i< edges.length; i++){\r\n    path.push(edges[i].start);\r\n  }\r\n  path.push(root);\r\n  // console.log(\"original path\", path);\r\n  const dist = calculate_distance_path(path, vertices, dimension);\r\n  for(let n = 0; n< MAX_SIMULATIONS; n++){\r\n    var new_path = [];\r\n    new_path.push(root);\r\n    var i = Math.floor(Math.random()*(path.length-2))+1;\r\n    var k = Math.floor(Math.random()*(path.length-2))+1;\r\n    if(i > k){ //swap\r\n      var temp = i;\r\n      i = k;\r\n      k = temp;\r\n    }\r\n    for(let m = 0; m < i; m++){\r\n      new_path.push(path[m+1]);\r\n    }\r\n\r\n\r\n    for(let m = k-1; m>i-1; m--){\r\n      new_path.push(path[m+1]);\r\n    }\r\n\r\n    for(let m = k; m < path.length-1; m++){\r\n      new_path.push(path[m+1])\r\n    }\r\n    var new_dist = calculate_distance_path(new_path, vertices, dimension);\r\n    if(new_dist < dist) better_solution = true;\r\n    if(better_solution === true) {\r\n      I = i;\r\n      K = k;\r\n      break\r\n    };\r\n  }\r\n  // console.log(\"better solution\", better_solution);\r\n  if(better_solution === false) new_path = path;\r\n  var new_edges = [];\r\n  for(let i = 0; i < path.length-1; i++){\r\n    const e = edges[i].copy_edge();\r\n    e.start = new_path[i];\r\n    e.end = new_path[i+1];\r\n    new_edges.push(e);\r\n    if(i === I || i === K) {\r\n      new_edges[i].setColor(selected_color);\r\n      new_edges[i].setAlpha(0.7);\r\n    }\r\n    else{\r\n      if(dimension === 2) new_edges[i].setColor(\"rgb(0,0,0)\");\r\n      if(dimension === 3) new_edges[i].setColor(\"rgb(211,211,211)\");\r\n      new_edges[i].setAlpha(0.2);\r\n    }\r\n  }\r\n  return [new_edges, better_solution];\r\n\r\n}\r\n\r\n\r\nfunction calculate_distance_path(path, vertices, dimension){\r\n  var total_dist = 0;\r\n  for(let i = 0; i < path.length-1; i++){\r\n    total_dist += distance(vertices[path[i]], vertices[path[i+1]], dimension);\r\n  }\r\n  return total_dist;\r\n}\r\n\r\nfunction distance(v1, v2, dimension){\r\n  var dist;\r\n  if(dimension === 2) dist = Math.pow(v1.x-v2.x,2) + Math.pow(v1.y-v2.y, 2);\r\n  if(dimension === 3) dist = Math.pow(v1.x-v2.x,2) + Math.pow(v1.y-v2.y, 2) + Math.pow(v1.z-v2.z,2);\r\n  if(dist === 0) dist = 0.00000000000000000001;\r\n  return Math.sqrt(dist);\r\n}\r\n\r\nfunction swap(u,v){\r\n  const temp = u;\r\n  u = v;\r\n  v = temp;\r\n}\r\n\r\nfunction try2OptSwap(path, vertices, i, k, dimension, dist){\r\n  var changed = false;\r\n  const new_path = [];\r\n  var root = path[0];\r\n  new_path.push(root);\r\n  for(let n = 0; n < i; n++){\r\n    new_path.push(path[n+1]);\r\n  }\r\n  for(let n = k+i; n > i; n++){\r\n    new_path.push(path[n+1]);\r\n  }\r\n  new_path.push(root);\r\n  const new_dist = calculate_distance_path(new_path, vertices, dimension);\r\n  if(new_dist< dist) return [new_path, true]\r\n  else{ return [path, false]};\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\"+color[0]+\",\"+color[1]+\",\"+color[2]+\")\";\r\n}\r\n","import Edge from \"../datatypes/Edge\";\r\nconst MAX_SIMULATIONS = 150;\r\nvar I = -1;\r\nvar K = -1;\r\n\r\nexport function opt2Annealing(vertices, edges, dimension, startColor, endColor, temperature, minTemperature, maxTemperature, acceptance){\r\n  const path = [];\r\n  var better_solution = false\r\n  const gradient = createColorGradient(endColor, startColor, 10);\r\n  var selected_index = (temperature/maxTemperature)*(gradient.length-1);\r\n  selected_index = Math.floor(selected_index);\r\n  const selected_color = rgb_to_str(gradient[selected_index]);\r\n\r\n\r\n  var root = edges[0].start;\r\n  path.push(root);\r\n\r\n  for(let i = 1; i< edges.length; i++){\r\n    path.push(edges[i].start);\r\n  }\r\n  path.push(root);\r\n  // console.log(\"original path\", path);\r\n  const dist = calculate_distance_path(path, vertices, dimension);\r\n  for(let n = 0; n< MAX_SIMULATIONS; n++){\r\n    var new_path = [];\r\n    new_path.push(root);\r\n    var i = Math.floor(Math.random()*(path.length-2))+1;\r\n    var k = Math.floor(Math.random()*(path.length-2))+1;\r\n    if(i > k){ //swap\r\n      var temp = i;\r\n      i = k;\r\n      k = temp;\r\n    }\r\n    for(let m = 0; m < i; m++){\r\n      new_path.push(path[m+1]);\r\n    }\r\n\r\n    for(let m = k-1; m>i-1; m--){\r\n      new_path.push(path[m+1]);\r\n    }\r\n\r\n    for(let m = k; m < path.length-1; m++){\r\n      new_path.push(path[m+1])\r\n    }\r\n    var new_dist = calculate_distance_path(new_path, vertices, dimension);\r\n    const accepted = Math.random();\r\n    if(new_dist < dist || accepted < temperature*acceptance) better_solution = true;\r\n    if(better_solution === true) {\r\n      I = i;\r\n      K = k;\r\n      break\r\n    };\r\n  }\r\n  // console.log(\"better solution\", better_solution);\r\n  if(better_solution === false) new_path = path;\r\n  var new_edges = [];\r\n  for(let i = 0; i < path.length-1; i++){\r\n    const e = edges[i].copy_edge();\r\n    e.start = new_path[i];\r\n    e.end = new_path[i+1];\r\n    new_edges.push(e);\r\n    if(i === I || i === K) {\r\n      new_edges[i].setColor(selected_color);\r\n      new_edges[i].setAlpha(0.7);\r\n    }\r\n  }\r\n  return [new_edges, better_solution];\r\n\r\n}\r\n\r\n\r\nfunction calculate_distance_path(path, vertices, dimension){\r\n  var total_dist = 0;\r\n  for(let i = 0; i < path.length-1; i++){\r\n    total_dist += distance(vertices[path[i]], vertices[path[i+1]], dimension);\r\n  }\r\n  return total_dist;\r\n}\r\n\r\nfunction distance(v1, v2, dimension){\r\n  var dist;\r\n  if(dimension === 2) dist = Math.pow(v1.x-v2.x,2) + Math.pow(v1.y-v2.y, 2);\r\n  if(dimension === 3) dist = Math.pow(v1.x-v2.x,2) + Math.pow(v1.y-v2.y, 2) + Math.pow(v1.z-v2.z,2);\r\n  if(dist === 0) dist = 0.00000000000000000001;\r\n  return Math.sqrt(dist);\r\n}\r\n\r\nfunction swap(u,v){\r\n  const temp = u;\r\n  u = v;\r\n  v = temp;\r\n}\r\n\r\nfunction try2OptSwap(path, vertices, i, k, dimension, dist){\r\n  var changed = false;\r\n  const new_path = [];\r\n  var root = path[0];\r\n  new_path.push(root);\r\n  for(let n = 0; n < i; n++){\r\n    new_path.push(path[n+1]);\r\n  }\r\n  for(let n = k+i; n > i; n++){\r\n    new_path.push(path[n+1]);\r\n  }\r\n  new_path.push(root);\r\n  const new_dist = calculate_distance_path(new_path, vertices, dimension);\r\n  if(new_dist< dist) return [new_path, true]\r\n  else{ return [path, false]};\r\n}\r\n\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\"+color[0]+\",\"+color[1]+\",\"+color[2]+\")\";\r\n}\r\n\r\nfunction createColorGradient(startColor, endColor, maxDegree){\r\n  // console.log(\"inside color gradient\", startColor, endColor, maxDegree);\r\n  var [startHue, startSaturation, startLightness] = rgb_to_hsl(startColor);\r\n  var [endHue, endSaturation, endLightness] = rgb_to_hsl(endColor);\r\n\r\n  // console.log(startHue, startSaturation, startLightness);\r\n  // console.log(endHue, endSaturation, endLightness);\r\n  var incrementHue = (endHue-startHue)/maxDegree;\r\n\r\n  const gradient = [];\r\n\r\n  for(let i = 0; i < maxDegree; i++){\r\n    const newHue = startHue+(incrementHue*i)%360;\r\n    const [red,green,blue] = hsl_to_rgb((startHue+incrementHue*i)%360, startSaturation,\r\n                                            startLightness)\r\n    gradient.push([Math.abs(red%256), Math.abs(green%256), Math.abs(blue%256)]);\r\n    // console.log(gradient[i]);\r\n  }\r\n  return gradient;\r\n}\r\n\r\nfunction rgb_to_hsl(rgbColor){\r\n  var red = rgbColor[0]/255;\r\n  var green = rgbColor[1]/255;\r\n  var blue = rgbColor[2]/255;\r\n  var Cmax = Math.max(...[red,green,blue]);\r\n  var Cmin = Math.min(...[red,green,blue]);\r\n  var delta = Cmax-Cmin;\r\n\r\n\r\n  var hue = calculate_hue(delta, Cmax, red, green, blue)%360;\r\n  var lightness = (Cmax+Cmin)/2;\r\n  var saturation = delta === 0? 0: delta/(1-Math.abs(2*lightness-1));\r\n\r\n  return [hue, saturation, lightness];\r\n}\r\n\r\nfunction hsl_to_rgb(hue, saturation, lightness){\r\n  const C = (1 - Math.abs(2*lightness-1))*saturation\r\n  const X = C * (1 - Math.abs(hue/60)%2 -1);\r\n  const m = lightness - C/2;\r\n  const [R_prime, G_prime, B_prime] = check_degrees(hue, C, X);\r\n  return [((R_prime+m)*255)%256, ((G_prime + m)* 255)%256, ((B_prime+m) * 255)%256];\r\n}\r\n\r\nfunction check_degrees(hue, C, X){\r\n  if((hue >= 0 && hue < 60) || hue == 360) return [C,X,0];\r\n  if(hue >= 60 && hue < 120 ) return [X,C,0];\r\n  if(hue >= 120 && hue < 180 ) return [0, C, X];\r\n  if(hue >= 180 && hue < 240 ) return [0, X, C];\r\n  if(hue >= 240 && hue < 300 ) return [X, 0, C];\r\n  if(hue >= 300 && hue < 360 ) return [C, 0, X];\r\n  return [0,0,0];\r\n}\r\n\r\n\r\nfunction calculate_hue(delta, Cmax, red, green, blue){\r\n  if(delta === 0) return 0;\r\n  if(Cmax === red) return 60*(((green-blue)/delta)%6);\r\n  if(Cmax === green) return 60*((blue-red)/delta+2);\r\n  if(Cmax === blue) return 60*((red- green)/delta + 4);\r\n}\r\n","import Edge from \"../datatypes/Edge\";\r\n\r\nvar MAX_SIMULATIONS = 1000;\r\n\r\nexport function opt3(vertices, edges, dimension, color){\r\n  const selected_color = rgb_to_str(color)\r\n  const path = [];\r\n  var root = edges[0].start;\r\n  path.push(root);\r\n  for(let i = 1; i < edges.length; i++){\r\n    path.push(edges[i].start);\r\n  }\r\n  path.push(root);\r\n  // console.log(calculate_distance_path(path, vertices, dimension))\r\n  var new_path = [];\r\n  var a;\r\n  var b;\r\n  var c;\r\n  for(let n = 0; n < MAX_SIMULATIONS; n++){\r\n    var better_solution;\r\n    a = Math.floor(Math.random()*(path.length-3))+2;\r\n    b = Math.floor(Math.random()*(path.length-3))+2;\r\n    c = Math.floor(Math.random()*(path.length-3))+2;\r\n    // console.log(a,b,c);\r\n    //make sure a,b,c are ordered correctly\r\n    var array = [a,b,c];\r\n    array.sort(function(a,b) {return a-b});\r\n    a = array[0];\r\n    b = array[1];\r\n    c = array[2];\r\n    // console.log(a,b,c)\r\n    // console.log(better_solution)\r\n    const values = reverse_segment_if_better(path, a, b, c, dimension, vertices);\r\n    better_solution = values[1];\r\n    new_path = values[0];\r\n    // console.log(values);\r\n    if(better_solution === true) break;\r\n\r\n  }\r\n  // console.log(calculate_distance_path(new_path, vertices, dimension));\r\n  const new_edges = [];\r\n\r\n  for(let i = 0; i < new_path.length-1; i++){\r\n    const e = edges[i].copy_edge();\r\n    e.start = new_path[i];\r\n    e.end = new_path[i+1];\r\n    new_edges.push(e);\r\n    if(i === a || i === b || i === c){\r\n      new_edges[i].setColor(selected_color);\r\n      new_edges[i].setAlpha(0.7);\r\n    }\r\n    else{\r\n      if(dimension === 2) new_edges[i].setColor(\"rgb(0,0,0)\");\r\n      if(dimension === 3) new_edges[i].setColor(\"rgb(211,211,211)\");\r\n      new_edges[i].setAlpha(0.2);\r\n    }\r\n  }\r\n  // console.log(new_edges);\r\n\r\n  return [new_edges, better_solution]\r\n}\r\n\r\nfunction reverse_segment_if_better(path, i, j, k, dimension, vertices){\r\n  var new_path = [];\r\n  const [A,B,C,D,E,F] = [path[i-1], path[i], path[j-1], path[j], path[k-1], path[k]];\r\n  // console.log(A,B,C,D,E,F);\r\n  const d0 = distance(vertices[A], vertices[B], dimension) + distance(vertices[C], vertices[D], dimension) + distance(vertices[E], vertices[F], dimension);\r\n  const d1 = distance(vertices[A], vertices[C], dimension) + distance(vertices[B], vertices[D], dimension) + distance(vertices[E], vertices[F], dimension);\r\n  const d2 = distance(vertices[A], vertices[B], dimension) + distance(vertices[C], vertices[E], dimension) + distance(vertices[D], vertices[F], dimension);\r\n  const d3 = distance(vertices[A], vertices[D], dimension) + distance(vertices[E], vertices[B], dimension) + distance(vertices[C], vertices[F], dimension);\r\n  const d4 = distance(vertices[F], vertices[B], dimension) + distance(vertices[C], vertices[D], dimension) + distance(vertices[E], vertices[A], dimension);\r\n  if(d0 > d1){\r\n    // console.log(\"better\");\r\n    new_path =  reversed_path(path, i-1, j-1);\r\n    // console.log(\"d0-d1\", calculate_distance_path(new_path, vertices, dimension));\r\n    return [new_path, true];\r\n  }\r\n  else if(d0 > d2){\r\n    // console.log(\"better\");\r\n    new_path =  reversed_path(path, j-1, k-1);\r\n    // console.log(\"d0-d2\", calculate_distance_path(new_path, vertices, dimension));\r\n    return [new_path, true];\r\n  }\r\n  else if(d0 > d4){\r\n    // console.log(\"better\");\r\n    new_path =  reversed_path(path, i-1, k-1);\r\n    // console.log(\"d0-d4\", calculate_distance_path(new_path, vertices, dimension));\r\n    return [new_path,true];\r\n  }\r\n  else if(d0 > d3){\r\n    // console.log(\"better\");\r\n    new_path =  reversed_path_three(path, i, j, k);\r\n    // console.log(\"three\", calculate_distance_path(new_path, vertices, dimension));\r\n    return  [new_path, true];\r\n  }\r\n  return  [path,false];\r\n\r\n}\r\n\r\nfunction distance(v1,v2, dimension){\r\n  var dist;\r\n  if(dimension === 2) dist = Math.pow(v1.x-v2.x,2) + Math.pow(v1.y-v2.y,2);\r\n  if(dimension === 3) dist =  Math.pow(v1.x-v2.x,2) + Math.pow(v1.y-v2.y,2) + Math.pow(v1.z-v2.z, 2);\r\n  if(dist === 0) dist = 0.0000000000000001;\r\n  return Math.sqrt(dist);\r\n}\r\n\r\nfunction reversed_path(path, a, b){\r\n  const new_path = [];\r\n  // console.log(path);\r\n  var root = path[0];\r\n  new_path.push(root);\r\n  for(let i = 0; i< a; i++){\r\n    new_path.push(path[i+1]);\r\n  }\r\n  for(let i = b-1; i > a-1; i--){\r\n    new_path.push(path[i+1]);\r\n  }\r\n  for(let i = b; i < path.length-1; i++){\r\n    new_path.push(path[i+1]);\r\n  }\r\n  // console.log(new_path);\r\n  return new_path;\r\n}\r\n\r\nfunction reversed_path_three(path, i, j, k){\r\n  const new_path = [];\r\n  var root = path[0];\r\n  new_path.push(root);\r\n  for(let n = 1; n < i; n++){\r\n    new_path.push(path[n]);\r\n  }\r\n\r\n  for(let n = j; n < k; n++){\r\n    new_path.push(path[n]);\r\n  }\r\n\r\n  for(let n = i; n< j; n++){\r\n    new_path.push(path[n]);\r\n  }\r\n\r\n  for(let n = k; n < path.length; n++){\r\n    new_path.push(path[n]);\r\n  }\r\n\r\n  return new_path;\r\n}\r\n\r\nfunction calculate_distance_path(path, vertices, dimension){\r\n  var total_dist = 0;\r\n  for(let i = 0; i < path.length-1; i++){\r\n    total_dist += distance(vertices[path[i]], vertices[path[i+1]], dimension);\r\n  }\r\n  return total_dist;\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\"+color[0]+\",\"+color[1]+\",\"+color[2]+\")\";\r\n}\r\n","import Vertex from \"../datatypes/Vertex\"\r\n\r\nexport function GreedyColoring(vertices, edges, dimension, initial_color, end_color){\r\n  //constants\r\n  const animations = [];\r\n\r\n  //copy inputs\r\n  const copy_input = createFrame(vertices, edges);\r\n  const current_vertices = copy_input.vertices;\r\n  const current_edges = copy_input.edges;\r\n  animations.push(createFrame(current_vertices, current_edges));\r\n  //adjacency matrix\r\n  var max_degree = -Infinity;\r\n  const assigned_colors = [];\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    assigned_colors.push(-1);\r\n    max_degree = Math.max(max_degree, vertices[i].degree);\r\n  }\r\n  const adj = createAdjacencyMatrix(vertices, edges);\r\n  var num_colors = max_degree+1;\r\n\r\n  var colors = createColorGradient(initial_color, end_color, num_colors);\r\n\r\n  for(let i = 0; i < vertices.length; i++){\r\n    const neighbors = getNeighbors(vertices, i, adj);\r\n    const available_colors = getAvailableColors(assigned_colors, neighbors, colors);\r\n    const new_color = convertColor(available_colors[0]);\r\n    if(dimension === 2)current_vertices[i].color = new_color\r\n    if(dimension === 3) current_vertices[i].color = construct3DacceptableRGB(new_color);\r\n    animations.push(createFrame(current_vertices, edges));\r\n\r\n    assigned_colors[i] = new_color;\r\n  }\r\n\r\n  return [vertices, animations];\r\n\r\n\r\n}\r\n\r\nfunction createColorGradient(color1, color2, num_colors){\r\n  // console.log(color1, color2);\r\n  const saturation = 0.5;\r\n  const lightness = 0.7;\r\n  const hue = 0;\r\n  const uniform_factor = 360/num_colors;\r\n  // console.log(red,green,blue);\r\n  const new_colors = [];\r\n  for(let i = 0; i < num_colors; i++){\r\n    const new_hue = hue + (uniform_factor*i)%360;\r\n    new_colors.push(convertHSLtoRGB(new_hue, saturation, lightness));\r\n    // new_colors.push([color2[0]+red*(i/num_colors-1), color2[1]+green*(i/num_colors-1), color2[2]+ blue*(i/num_colors-1)]);\r\n  }\r\n\r\n  return new_colors;\r\n}\r\n\r\nfunction createAdjacencyMatrix(v, e){\r\n  const adj = [];\r\n  for(let i = 0; i < v.length; i++){\r\n    const adj_row = [];\r\n    for(let j = 0; j < v.length; j++){\r\n      adj_row.push(0);\r\n    }\r\n    adj.push(adj_row);\r\n  }\r\n\r\n  for(let i = 0; i < e.length; i ++){\r\n    adj[e[i].start][e[i].end] = 1;\r\n    adj[e[i].end][e[i].start] = 1;\r\n  }\r\n  return adj;\r\n}\r\n\r\n/*\r\nReturn index of vertices that are neighbors of v\r\n*/\r\nfunction getNeighbors(vertices, index, adj){\r\n  const neighbors = [];\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    if(adj[index][i] === 1) neighbors.push(i);\r\n  }\r\n  return neighbors;\r\n}\r\n\r\nfunction getAvailableColors(assigned_colors, neighbors, colors){\r\n  const all_colors = [];\r\n  const available_colors = [];\r\n  for(let i = 0; i < neighbors.length; i++){\r\n    // console.log(neighbors[i]);\r\n    const color = assigned_colors[neighbors[i]];\r\n    if(color !== -1) {\r\n      // console.log(color);\r\n      all_colors.push(colorConvert(color))};\r\n  }\r\n  // console.log(\"all colors\",all_colors);\r\n  for(let i = 0; i < colors.length; i++){\r\n    if(!(checkColorIn(colors[i], all_colors))) available_colors.push(colors[i]);\r\n\r\n  }\r\n  return available_colors;\r\n}\r\n\r\nfunction convertColor(color){\r\n  return \"rgb(\"+color[0].toString()+\",\"+color[1].toString()+\",\"+color[2].toString()+\")\";\r\n}\r\n\r\nfunction checkColorIn(color, array){\r\n  // console.log(\"CHECKING\", color, array)\r\n  for(let i = 0; i < array.length; i++){\r\n    // console.log(\"ARRAY ENTRY\", array[i])\r\n    // console.log(\"COLOR\", color);\r\n    if(array[i][0] === (color[0]) && array[i][1] === color[1]\r\n                                      && (array[i][2]) === (color[2])) {\r\n                                        // console.log(\"accepted\",array[i], color)\r\n                                        return true\r\n                                      };\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/*\r\nrgb string to 3-array\r\n*/\r\nfunction colorConvert(color){\r\n  const arr = color.split(\",\");\r\n  // console.log(arr)\r\n  var red = arr[0].split(\"(\")\r\n  // console.log(red[1]);\r\n  red = parseFloat(red[1]);\r\n  // console.log(\"red\", red);\r\n  const green = parseFloat(arr[1]);\r\n  // console.log(\"green\", green);\r\n  const blue = parseFloat(arr[2]);\r\n  // console.log(\"blue\", blue);\r\n  return [red,green,blue];\r\n}\r\n\r\nfunction convertHSLtoRGB(hue, saturation, lightness){\r\n  const C = (1 - Math.abs(2*lightness-1))*saturation\r\n  const X = C * (1 - Math.abs(hue/60)%2 -1);\r\n  const m = lightness - C/2;\r\n  const [R_prime, G_prime, B_prime] = check_degrees(hue, C, X);\r\n  return [(R_prime+m)*255, (G_prime + m)* 255, (B_prime+m) * 255];\r\n}\r\n\r\nfunction check_degrees(hue, C, X){\r\n  if((hue >= 0 && hue < 60) || hue == 360) return [C,X,0];\r\n  if(hue >= 60 && hue < 120 ) return [X,C,0];\r\n  if(hue >= 120 && hue < 180 ) return [0, C, X];\r\n  if(hue >= 180 && hue < 240 ) return [0, X, C];\r\n  if(hue >= 240 && hue < 300 ) return [X, 0, C];\r\n  if(hue >= 300 && hue < 360 ) return [C, 0, X];\r\n  return [0,0,0];\r\n}\r\n\r\nfunction construct3DacceptableRGB(new_color){\r\n  const color_array = colorConvert(new_color);\r\n\r\n  color_array[0] = parseInt(color_array[0]);\r\n  color_array[1] = parseInt(color_array[1]);\r\n  color_array[2] = parseInt(color_array[2]);\r\n\r\n  return convertColor(color_array);\r\n}\r\n\r\n\r\nfunction createFrame(vertices, edges){\r\n  const new_vertices = [];\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    new_vertices.push(vertices[i].copy_vertex());\r\n  }\r\n  return {vertices: new_vertices, edges: edges};\r\n}\r\n","export function misraGries(vertices, edges, initial_color, end_color){\r\n\r\n  //create copies of input\r\n  const copy_input = createFrame(vertices, edges)\r\n  const current_vertices = copy_input.vertices;\r\n  const current_edges = copy_input.edges;\r\n\r\n  const uncolored_edges = copyEdges(edges);\r\n  const incident_colors = createEmptyColors(vertices);\r\n  const incident_vertices = createIncidentVertexList(vertices, edges);\r\n  const edge_colors = createEdgeColors(edges);\r\n  const animations = [];\r\n  var colorsUsed = [];\r\n\r\n  const num_colors = find_max_degree(vertices)+2;\r\n  // console.log(\"num_colors\", num_colors);\r\n  const gradient = createColorGradient(initial_color, end_color, num_colors);\r\n  // console.log(\"gradient\", gradient);\r\n\r\n  var i = 0;\r\n  while(uncolored_edges.length > 0){\r\n    const edge = uncolored_edges.pop();\r\n    const u = edge.start;\r\n    const v = edge.end;\r\n    const [max_fan, fan_colors] = getMaxFan(u,v, incident_colors, incident_vertices, edge_colors);\r\n    // console.log(\"max_fan\", max_fan);\r\n    // console.log(\"max_fan colors\", fan_colors);\r\n\r\n    const u_adjacent_colors = incident_colors[u];\r\n    const fan_end_adjacent_colors = incident_colors[max_fan[max_fan.length-1]];\r\n\r\n\r\n    const u_free_color = pickColor(u_adjacent_colors, gradient);\r\n    // fan_end_adjacent_colors.push(u_free_color);\r\n    const fan_end_free_color = pickColor(fan_end_adjacent_colors, gradient);\r\n\r\n    invertPath(u_free_color, fan_end_free_color, u, incident_colors, incident_vertices, edge_colors);\r\n    for(let i = 0; i < fan_colors.length; i++){\r\n      if(fan_colors[i] === fan_end_free_color) fan_colors[i] = u_free_color;\r\n    }\r\n\r\n    const w = findFreeColorToRotate(max_fan, fan_colors, u_free_color,\r\n                fan_end_free_color, incident_vertices, edge_colors);\r\n    const sub_fan = max_fan.slice(0,max_fan.indexOf(w)+1);\r\n\r\n    for(let i = 0; i < sub_fan.length-1; i++){\r\n      const vertex = sub_fan[i]\r\n      const next_vertex = max_fan[max_fan.indexOf(sub_fan[i])+1];\r\n      edge_colors[[u,vertex]] = edge_colors[[u,next_vertex]];\r\n      incident_colors[u][incident_colors.indexOf(edge_colors[[u,vertex]])] = edge_colors[[u,next_vertex]];\r\n      edge_colors[[vertex, u]] = edge_colors[[next_vertex,u]];\r\n      incident_colors[vertex][incident_colors.indexOf(edge_colors[[u,vertex]])] = edge_colors[[u,next_vertex]];\r\n    }\r\n    edge_colors[[u,w]] = fan_end_free_color;\r\n    edge_colors[[w,u]] = fan_end_free_color;\r\n    incident_colors[u].push(fan_end_free_color);\r\n    incident_colors[w].push(fan_end_free_color);\r\n    // console.log(\"new_iteration\", i++);\r\n    for(let i = 0; i < current_edges.length; i++){\r\n      var color = edge_colors[[current_edges[i].start, current_edges[i].end]];\r\n      if(color.length !== 0){\r\n        current_edges[i].color = rgb_to_str(color);\r\n        current_edges[i].alpha = 0.7;\r\n      }\r\n    }\r\n    animations.push(createFrame(vertices, current_edges));\r\n\r\n  }\r\n\r\n\r\n  animations.push(createFrame(vertices, current_edges));\r\n  return animations;\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\"+color[0]+\",\"+color[1]+\",\"+color[2]+\")\";\r\n}\r\n\r\nfunction createFrame(vertices, edges){\r\n  const new_vertices = [];\r\n  const new_edges = [];\r\n\r\n  for(let i = 0; i < vertices.length; i++){\r\n    new_vertices.push(vertices[i].copy_vertex());\r\n  }\r\n\r\n  for(let j = 0; j < edges.length; j++){\r\n    new_edges.push(edges[j].copy_edge());\r\n  }\r\n\r\n  return {vertices: new_vertices, edges: new_edges};\r\n}\r\n\r\nfunction copyEdges(edges){\r\n  const new_edges = [];\r\n  for(let i = 0; i < edges.length; i++){\r\n    new_edges.push(edges[i].copy_edge());\r\n  }\r\n  return new_edges;\r\n}\r\n\r\nfunction createEmptyColors(vertices){\r\n  const colors = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    colors.push([]);\r\n  }\r\n  return colors;\r\n}\r\n\r\nfunction createEdgeColors(edges){\r\n  const edge_list = {};\r\n  for(let i = 0; i < edges.length; i++){\r\n    const e = edges[i];\r\n    edge_list[[e.start,e.end]] = [];\r\n    edge_list[[e.end, e.start]] = [];\r\n  }\r\n  return edge_list;\r\n}\r\n\r\nfunction find_max_degree(vertices){\r\n  var max_degree = -Infinity;\r\n  for(let i = 0; i < vertices.length; i++){\r\n    max_degree = Math.max(max_degree, vertices[i].degree);\r\n  }\r\n  return max_degree;\r\n}\r\n\r\nfunction getMaxFan(center_vertex, other_vertex, incident_colors, incident_vertices, edge_colors){\r\n  var fan_options = incident_vertices[center_vertex].slice();\r\n  const other_vertex_index = fan_options.indexOf(other_vertex);\r\n  fan_options = fan_options.slice(0, other_vertex_index).concat(fan_options.slice(other_vertex_index+1));\r\n  var fan = [other_vertex];\r\n  var fan_colors = [];\r\n  var last_added = other_vertex;\r\n  var maximal = fan_options.length === 0;\r\n\r\n\r\n  while(!maximal){\r\n    maximal = true;\r\n    var bad_colors = incident_colors[last_added];\r\n    for(let i = 0; i < fan_options.length; i++){\r\n      const vertex = fan_options[i];\r\n      var acceptable_color = true;\r\n      for(let j = 0; j < bad_colors; j++){\r\n        if(edge_colors[[last_added, vertex]] === bad_colors[j] ||\r\n                  edge_colors[[vertex, last_added]] === bad_colors[j]){\r\n                    acceptable_color = false;\r\n                    break;\r\n                  }\r\n      }\r\n\r\n      if(acceptable_color === true){\r\n        fan.push(vertex);\r\n        const color = edge_colors[[center_vertex, vertex]]\r\n        if(color.length !== 0) fan_colors.push(color);\r\n        // console.log(fan_colors);\r\n        const remove_index = fan_options.indexOf(vertex);\r\n        fan_options = fan_options.slice(0, remove_index).concat(fan_options.slice(remove_index+1));\r\n        last_added = vertex;\r\n        maximal = false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return [fan, fan_colors];\r\n\r\n}\r\n\r\nfunction createIncidentVertexList(v,e){\r\n  const adj = createAdjacencyMatrix(v,e);\r\n\r\n  const adjacent_vertices = [];\r\n  for(let i = 0; i < adj.length; i++){\r\n    const row = [];\r\n    for(let j = 0; j < adj[i].length; j++){\r\n      if(adj[i][j] === 1) row.push(j);\r\n    }\r\n    adjacent_vertices.push(row);\r\n  }\r\n  return adjacent_vertices;\r\n}\r\n\r\nfunction createAdjacencyMatrix(vertices, edges){\r\n  const adj = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    const adj_row = [];\r\n    for(let j = 0; j < vertices.length; j++){\r\n      adj_row.push(0);\r\n    }\r\n    adj.push(adj_row);\r\n  }\r\n\r\n  for(let e = 0; e < edges.length; e ++){\r\n    adj[edges[e].start][edges[e].end] = 1;\r\n    adj[edges[e].end][edges[e].start] = 1;\r\n  }\r\n  return adj;\r\n}\r\n\r\nfunction pickColor(taken_colors, gradient){\r\n  for(let i = 0; i < gradient.length; i++){\r\n    var different = true;\r\n    for(let j = 0; j < taken_colors.length; j++){\r\n      if(gradient[i] === taken_colors[j]) {\r\n        different = false;\r\n        break;\r\n      }\r\n    }\r\n    if(different === true) return gradient[i];\r\n  }\r\n  return [];\r\n}\r\n\r\nfunction invertPath(color1, color2, start, incident_colors, incident_vertices, edge_colors){\r\n  var current_vertex = start;\r\n  var last_vertex = start;\r\n  var is_more_path = true;\r\n\r\n  while(is_more_path === true){\r\n    is_more_path = false;\r\n    for(let i = 0; i < incident_vertices[i].length; i ++){\r\n      const v = incident_vertices[i];\r\n      if(v !== last_vertex && (edge_colors[current_vertex,v] === color1 ||\r\n                                      edge_colors[current_vertex,v] === color2)){\r\n        switchColor(current_vertex, v, color1, color2, edge_colors, incident_colors);\r\n        is_more_path = true;\r\n        last_vertex = current_vertex;\r\n        current_vertex = v;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction switchColor(vertex1, vertex2, color1, color2, edge_colors, incident_colors){\r\n  if(edge_colors[[vertex1, vertex2]] === color1){\r\n    edge_colors[vertex1,vertex2] = color2;\r\n    edge_colors[vertex2,vertex1] = color2;\r\n    incident_colors[incident_colors[vertex1].indexOf(color1)] = color2;\r\n    incident_colors[incident_colors[vertex2].indexOf(color1)] = color2;\r\n  }\r\n  else if(edge_colors[[vertex1, vertex2]] === color2){\r\n    edge_colors[vertex1,vertex2] = color1;\r\n    edge_colors[vertex2,vertex1] = color1;\r\n    incident_colors[incident_colors[vertex1].indexOf(color2)] = color1;\r\n    incident_colors[incident_colors[vertex2].indexOf(color2)] = color1;\r\n  }\r\n}\r\n\r\n\r\nfunction createColorGradient(color1, color2, num_colors){\r\n  // console.log(color1, color2);\r\n  const saturation = 0.5;\r\n  const lightness = 0.7;\r\n  const hue = 0;\r\n  const uniform_factor = 360/num_colors;\r\n  // console.log(red,green,blue);\r\n  const new_colors = [];\r\n  for(let i = 0; i < num_colors; i++){\r\n    const new_hue = hue + (uniform_factor*i)%360;\r\n    new_colors.push((convertHSLtoRGB(new_hue, saturation, lightness)));\r\n    // new_colors.push([color2[0]+red*(i/num_colors-1), color2[1]+green*(i/num_colors-1), color2[2]+ blue*(i/num_colors-1)]);\r\n  }\r\n\r\n  return new_colors;\r\n}\r\n\r\n\r\nfunction convertHSLtoRGB(hue, saturation, lightness){\r\n  const C = (1 - Math.abs(2*lightness-1))*saturation\r\n  const X = C * (1 - Math.abs(hue/60)%2 -1);\r\n  const m = lightness - C/2;\r\n  const [R_prime, G_prime, B_prime] = check_degrees(hue, C, X);\r\n  return [parseInt((R_prime+m)*255), parseInt((G_prime + m)* 255), parseInt((B_prime+m)*255)];\r\n}\r\n//\r\nfunction check_degrees(hue, C, X){\r\n  if((hue >= 0 && hue < 60) || hue == 360) return [C,X,0];\r\n  if(hue >= 60 && hue < 120 ) return [X,C,0];\r\n  if(hue >= 120 && hue < 180 ) return [0, C, X];\r\n  if(hue >= 180 && hue < 240 ) return [0, X, C];\r\n  if(hue >= 240 && hue < 300 ) return [X, 0, C];\r\n  if(hue >= 300 && hue < 360 ) return [C, 0, X];\r\n  return [0,0,0];\r\n}\r\n\r\nfunction findFreeColorToRotate(max_fan, fan_colors, color, fan_end_free_color, incident_vertices, edge_colors){\r\n  var different = true;\r\n  for(let i = 0; i < fan_colors.length; i++){\r\n    if(color === fan_colors[i]){\r\n      different = false\r\n    }\r\n  }\r\n  if(different === true) return max_fan[max_fan.length-1];\r\n  for(let i = 0; i < max_fan.length; i++){\r\n    var is_free = true;\r\n    const v1 = max_fan[i]\r\n    for(let j = 0; j < incident_vertices[v1]; j++){\r\n      const v2 = incident_vertices[v1][j];\r\n      if(edge_colors[[v1,v2]] === fan_end_free_color){\r\n        is_free = false;\r\n        break;\r\n      }\r\n    }\r\n    if(is_free === true) return v1;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Vertex from \"./datatypes/Vertex\";\r\nimport Edge from \"./datatypes/Edge\";\r\nimport createRandomNetwork from \"./networkgeneration/createRandomNetwork\";\r\nimport {springEmbedding} from \"./NetworkAlgorithms/springEmbedding\";\r\nimport {fruchtermanReingold} from \"./NetworkAlgorithms/FruchtermanReingold\";\r\nimport {kamadaKawai} from \"./NetworkAlgorithms/kamadaKawai\";\r\nimport {forceAtlas2} from \"./NetworkAlgorithms/forceAtlas2\";\r\nimport {forceAtlasLinLog} from \"./NetworkAlgorithms/forceAtlasLinLog\";\r\nimport {hall} from \"./Spectral/Hall\";\r\nimport {radialFlowDirected} from \"./NetworkAlgorithms/radialFlowDirected\";\r\nimport {spectralDrawing} from \"./Spectral/spectralDrawing\";\r\nimport {kruskal} from \"./MSTAlgorithms/kruskal\";\r\nimport {prim} from \"./MSTAlgorithms/prims\";\r\nimport {opt2} from \"./TSP/opt2\";\r\nimport {opt2Annealing} from \"./TSP/opt2Annealing\";\r\nimport {opt3} from \"./TSP/opt3\";\r\nimport {GreedyColoring} from \"./Coloring/GreedyColoring\";\r\nimport {misraGries} from \"./Coloring/misraGries\";\r\n\r\nimport \"./Network.css\";\r\n\r\nvar MAX_EDGES = 600;\r\nvar MAX_TIMEOUT = 30; //seconds\r\n// var MAX_TIMEOUT = 0;\r\n\r\nasync function waitAnimateNetwork(that,startIndex, endIndex, animations,func){\r\n  if(animations !== null) await that.setState({currentAnimations: animations});\r\n  await that.setState({currentAnimationIndex: startIndex, animationIndex: endIndex, paused: false});\r\n  // console.log(\"start\",startIndex,\"end\", endIndex,\"animations\", animations);\r\n  if(that.state.group === \"layout\") that.animateNetwork();\r\n  if(that.state.group === \"coloring\") that.animateColoring();\r\n  if(that.state.group === \"TSP\") that.animateTSP()\r\n  // if(that.state.group === \"coloring\") continue;\r\n  // if(that.state.group === \"TSP\") continue;\r\n}\r\n\r\nclass NetworkVisualizer extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.canvas =  React.createRef();\r\n    this.state ={\r\n      width : 0,\r\n      height: 0,\r\n      vertices: [],\r\n      edges: [],\r\n      sorted: false,\r\n      iterations: 100,\r\n      maxtimeouts: 0,\r\n      maxDegree: Infinity,\r\n      algoType: \"spring\",\r\n      randomType: \"random\",\r\n      layoutType: 0,\r\n      TSP : false,\r\n      offsetX: 0,\r\n      offsetY: 0,\r\n      dragging: false,\r\n      previousMouseX: 0,\r\n      previousMouseY: 0,\r\n      scaleFactor: 1,\r\n      currentAnimations: [],\r\n      currentAnimationIndex: 0,\r\n      animationIndex: 0,\r\n      paused: true,\r\n      group: \"layout\", // layout, coloring or TSP\r\n\r\n    };\r\n    this.app = this.props.app;\r\n    this.help = React.createRef();\r\n    this.tutorial = React.createRef();\r\n  }\r\n\r\n  componentDidMount(){\r\n    const w = window.innerHeight * 0.55;\r\n    const h = window.innerHeight * 0.55;\r\n\r\n    const [vertices, edges] = createRandomNetwork(w, h, this.app.state.numV,\r\n      this.app.state.numE, this.app.state.connected, this.state.randomType,\r\n      [this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue],\r\n      [this.app.state.endRed, this.app.state.endGreen, this.app.state.endBlue], this.app.state.degreesize, this.app.state.minsize, this.app.state.maxsize)\r\n    this.setState(\r\n      {width: w,\r\n      height: h,\r\n      vertices: vertices,\r\n      edges: edges,}\r\n    );\r\n    this.app.setState({numV: vertices.length, numE: edges.length, mouseX: w/2, mouseY:h/2});\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    this.canvas.current.width = this.state.width;\r\n    this.canvas.current.height = this.state.height;\r\n    const ctx = this.canvas.current.getContext(\"2d\");\r\n    ctx.scale(this.state.scaleFactor,this.state.scaleFactor);\r\n    for(let i =0; i < this.state.vertices.length; i++){\r\n      ctx.beginPath();\r\n      const c = this.state.vertices[i].color;\r\n      ctx.fillStyle= c;\r\n      // ctx.fillRect(this.state.vertices[i][0], this.state.vertices[i][1], 6, 6);\r\n      ctx.arc(this.state.vertices[i].x+this.state.offsetX, this.state.vertices[i].y+this.state.offsetY, this.state.vertices[i].size, 0, Math.PI*2)\r\n      ctx.fill();\r\n      ctx.closePath();\r\n    }\r\n\r\n    for(let j = 0; j < this.state.edges.length; j++){\r\n      ctx.beginPath();\r\n      const index1 = this.state.edges[j].start;\r\n      const index2 = this.state.edges[j].end;\r\n      ctx.moveTo(this.state.vertices[index1].x+this.state.offsetX,this.state.vertices[index1].y+this.state.offsetY);\r\n      ctx.lineTo(this.state.vertices[index2].x+this.state.offsetX,this.state.vertices[index2].y+this.state.offsetY);\r\n      ctx.globalAlpha = this.state.edges[j].alpha;\r\n      ctx.strokeStyle = this.state.edges[j].color;\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n    }\r\n\r\n  }\r\n  componentWillUnmount(){\r\n      this.cancelAnimation();\r\n  }\r\n\r\n  generateForceDirectedLayout(){\r\n    const values = springEmbedding(this.state.vertices, this.state.edges,\r\n                    this.state.width, this.state.height, this.state.iterations,\r\n                    this.app.state.settings.spring );\r\n    const new_vertices = values[0];\r\n    const animations = values[1];\r\n    waitAnimateNetwork(this, 0,animations.length, animations);\r\n  }\r\n\r\n  generateReingold(){\r\n    const values = fruchtermanReingold(this.state.vertices, this.state.edges,\r\n            this.state.width,this.state.height, this.state.iterations,\r\n            this.app.state.settings.fruchterman);\r\n    const new_vertices = values[0];\r\n    const animations = values[1];\r\n    // console.log(animations);\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateKamadaKawai(){\r\n    const values = kamadaKawai(this.state.vertices, this.state.edges,\r\n      this.state.width, this.state.height, this.state.iterations);\r\n  }\r\n\r\n  generateForceAtlas2(){\r\n    const values = forceAtlas2(this.state.vertices, this.state.edges,\r\n      this.state.width, this.state.height, this.state.iterations, this.app.state.settings.forceatlas2);\r\n    const new_vertices = values[0];\r\n    const animations = values[1];\r\n    // console.log(new_vertices);\r\n\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateForceAtlasLinLog(){\r\n    const values = forceAtlasLinLog(this.state.vertices, this.state.edges,\r\n      this.state.width, this.state.height, this.state.iterations, this.app.state.settings.forceatlaslinlog)\r\n    const new_vertices = values[0];\r\n    const animations = values[1];\r\n\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateHall(){\r\n\r\n  }\r\n\r\n  generateSpectralDrawing(){\r\n    const eigenvectors = spectralDrawing(this.state.vertices, this.state.edges,this.state.width, this.state.height, this.app.state.dimension);\r\n      // console.log(eigenvectors);\r\n  }\r\n\r\n  generateRadialFlowDirected(){\r\n\r\n  }\r\n\r\n  generateKruskal(){\r\n    const [animations, sorted_edges] = kruskal(this.state.vertices, this.state.edges, 2,\r\n      [this.app.state.settings.kruskal.red, this.app.state.settings.kruskal.green,\r\n        this.app.state.settings.kruskal.blue]);\r\n    const that = this;\r\n    waitSetEdges(that, sorted_edges, animations);\r\n  }\r\n\r\n  generatePrim(){\r\n    const animations = prim(this.state.vertices, this.state.edges, 2,\r\n      [this.app.state.settings.prim.red, this.app.state.settings.prim.green,\r\n      this.app.state.settings.prim.blue]);\r\n    waitAnimateNetwork(this,0,animations.length,animations);\r\n  }\r\n\r\n  generate2Opt(){\r\n    const animations = [];\r\n    this.app.setState({running:true});\r\n    const selected_color = [this.app.state.settings.opt2.red, this.app.state.settings.opt2.green,\r\n                      this.app.state.settings.opt2.blue];\r\n    var edges = this.state.edges;\r\n    var better_solution = false;\r\n    for(let i = 0; i < (this.app.state.settings.opt2.timeout*1000)/this.app.state.animationSpeed; i++){\r\n      [edges, better_solution]= opt2(this.state.vertices,\r\n        edges, this.app.state.dimension, selected_color);\r\n      animations.push(edges);\r\n    }\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generate2OptAnnealing(){\r\n    const animations = [];\r\n    this.app.setState({running:true});\r\n    var current_temperature = this.app.state.settings.opt2annealing.temperature;\r\n    const max_temperature = current_temperature;\r\n    var temp = current_temperature;\r\n    for(let i = 0; i < (this.app.state.settings.opt2annealing.timeout*1000)/this.app.state.animationSpeed; i++){\r\n      temp = 0.992*temp;\r\n    }\r\n    var min_temperature = temp;\r\n    // console.log(\"max\", max_temperature, \"min\", min_temperature);\r\n\r\n    var edges = this.state.edges;\r\n    var better_solution = false;\r\n    for(let i = 0; i < (this.app.state.settings.opt2annealing.timeout*1000)/this.app.state.animationSpeed; i++){\r\n      [edges, better_solution] = opt2Annealing(this.state.vertices,\r\n          edges, this.app.state.dimension, this.app.state.settings.opt2annealing.startColor,\r\n          this.app.state.settings.opt2annealing.endColor, current_temperature,\r\n          min_temperature, max_temperature,\r\n          this.app.state.settings.opt2annealing.acceptance);\r\n      animations.push(edges);\r\n      current_temperature = 0.992*current_temperature;\r\n    }\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generate3Opt(){\r\n    const animations = [];\r\n    this.app.setState({running:true});\r\n    const selected_color = [this.app.state.settings.opt3.red, this.app.state.settings.opt3.green,\r\n                      this.app.state.settings.opt3.blue];\r\n    var edges = this.state.edges;\r\n    var better_solution = false;\r\n    for(let i = 0; i < (this.app.state.settings.opt3.timeout*1000)/this.app.state.animationSpeed; i++){\r\n      [edges, better_solution]= opt3(this.state.vertices,\r\n        edges, this.app.state.dimension, selected_color);\r\n      animations.push(edges);\r\n    }\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateGreedyVertex(){\r\n    const [vertices, animations] = GreedyColoring(this.state.vertices, this.state.edges, this.app.state.dimension, [255,255,0], [0,0,255])\r\n    waitAnimateNetwork(this,0,animations.length,animations);\r\n  }\r\n\r\n  generateMisraGries(){\r\n    const animations = misraGries(this.state.vertices, this.state.edges, [255,0,0], [0,255,0]);\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  runAlgorithm(){\r\n    if(this.app.state.running === false){\r\n      if(this.state.algoType === \"spring\") this.generateForceDirectedLayout();\r\n      if(this.state.algoType === \"fruchtermanReingold\") this.generateReingold();\r\n      if(this.state.algoType === \"kamadaKawai\") this.generateKamadaKawai();\r\n      if(this.state.algoType === \"forceAtlas2\") this.generateForceAtlas2();\r\n      if(this.state.algoType === \"forceatlaslinlog\") this.generateForceAtlasLinLog();\r\n      if(this.state.algoType === \"hall\") this.generateHall();\r\n      if(this.state.algoType === \"spectralDrawing\") this.generateSpectralDrawing();\r\n      if(this.state.algoType === \"radialFlowDirected\") this.generateRadialFlowDirected();\r\n      if(this.state.algoType === \"kruskal\") this.generateKruskal();\r\n      if(this.state.algoType === \"prim\") this.generatePrim();\r\n      if(this.state.algoType === \"2opt\") this.generate2Opt();\r\n      if(this.state.algoType === \"2optannealing\") this.generate2OptAnnealing();\r\n      if(this.state.algoType === \"3opt\") this.generate3Opt();\r\n      if(this.state.algoType === \"greedyvertex\") this.generateGreedyVertex();\r\n      if(this.state.algoType === \"misra\") this.generateMisraGries();\r\n    }\r\n    else{\r\n      waitAnimateNetwork(this, this.state.currentAnimationIndex, this.state.currentAnimations.length-1, null);\r\n    }\r\n  }\r\n\r\n  animateTSP(func){\r\n    let x = 0;\r\n    this.app.setState({running:true});\r\n    // console.log(this.app.state.running)\r\n    const start = this.state.currentAnimationIndex;\r\n    const end = this.state.animationIndex;\r\n    for(let k =start; k < end; k++){\r\n      x = setTimeout(() => {\r\n        const vertices = this.state.vertices;\r\n        const edges= this.state.edges;\r\n        const animations = this.state.currentAnimations;\r\n\r\n        this.setState({edges: animations[k], currentAnimationIndex: this.state.currentAnimationIndex + 1});\r\n        // console.log(\"animating\")\r\n        if(k === end-1){\r\n          // console.log(\"pausing\")\r\n          this.setState({paused: true,currentAnimationIndex: end});\r\n\r\n          // console.log(final_vertices);\r\n        }\r\n      }, (k-start) * this.app.state.animationSpeed)\r\n    }\r\n\r\n    this.setState({maxtimeouts: x});\r\n  }\r\n\r\n  animateColoring(){\r\n    let x = 0;\r\n    this.app.setState({running:true});\r\n    // console.log(\"animating\");\r\n    const start = this.state.currentAnimationIndex;\r\n    const end = this.state.animationIndex;\r\n\r\n    for(let k =start; k < end; k++){\r\n      x = setTimeout(() => {\r\n        const vertices = this.state.vertices;\r\n        const edges= this.state.edges;\r\n        const animations = this.state.currentAnimations;\r\n\r\n        this.setState({vertices: animations[k].vertices, edges:animations[k].edges, currentAnimationIndex: this.state.currentAnimationIndex + 1});\r\n        // console.log(\"animating\")\r\n        if(k === end-1){\r\n          // console.log(\"pausing\")\r\n          this.setState({paused: true,currentAnimationIndex: end});\r\n\r\n          // console.log(final_vertices);\r\n        }\r\n      }, (k-start) * this.app.state.animationSpeed)\r\n    }\r\n    this.setState({maxtimeouts: x});\r\n  }\r\n\r\n  animateNetwork(){\r\n    let x = 0;\r\n    this.app.setState({running:true});\r\n    const start = this.state.currentAnimationIndex;\r\n    const end = this.state.animationIndex;\r\n    for(let k = start; k < end; k++){\r\n\r\n      x = setTimeout(() => {\r\n        const vertices = this.state.vertices;\r\n        for(let i = 0; i <vertices.length; i++){\r\n          vertices[i].setVector(this.state.currentAnimations[k][i]);\r\n        }\r\n        this.setState({vertices: vertices, currentAnimationIndex: this.state.currentAnimationIndex+1});\r\n        if(k === end-1) this.setState({paused: true, currentAnimationIndex: end});\r\n        // console.log(\"animating\")\r\n      }, (k-start) * this.app.state.animationSpeed)\r\n    }\r\n    this.setState({maxtimeouts: x});\r\n  }\r\n\r\n  setAlgoType(v){\r\n    // this.attribute.current.setLayout(v)\r\n    this.setState({algoType: v});\r\n    if(v === \"2opt\" || v === \"3opt\" ||\r\n        v === \"2optannealing\" || v === \"3optannealing\"){\r\n          this.setState({group:\"TSP\"});\r\n          if(this.state.randomType !== \"cycle\") this.setRandomizedType(\"cycle\");\r\n        }\r\n    else if(v === \"spring\" || v === \"fruchterman\" || v === \"forceAtlas2\"\r\n                      || v === \"forceatlaslinlog\"){\r\n        this.setState({group:\"layout\"});\r\n      }\r\n    else if(v === \"kruskal\" || v === \"prim\" || v === \"greedyvertex\" ||\r\n                                        v === \"misra\"){\r\n        this.setState({group:\"coloring\"});\r\n    }\r\n  }\r\n\r\n  setRandomizedType(v){\r\n    const that = this;\r\n    waitSetRandomizedType(that, v);\r\n  }\r\n\r\n\r\n  setLayoutType(v){\r\n    const value = parseInt(v);\r\n    this.setState({layoutType:value});\r\n    if(value === 0){\r\n      const w =  0.55*window.innerHeight;\r\n      const h = 0.55*window.innerHeight;\r\n      this.canvas.current.height = h;\r\n      this.canvas.current.width = w;\r\n      const that = this;\r\n      waitSetLayout(that, w, h);\r\n    }\r\n    if(value === 1){\r\n      const w =  0.97*window.innerWidth;\r\n      const h = 0.55*window.innerHeight;\r\n      this.canvas.current.height = h;\r\n      this.canvas.current.width = w;\r\n      const that = this;\r\n      waitSetLayout(that, w, h);\r\n      // this.attribute.current.setState({delta: 0.2})\r\n    }\r\n  }\r\n\r\n  resetNetwork(){\r\n    const [vertices, edges] = createRandomNetwork(this.state.width, this.state.height,\r\n       this.app.state.numV, this.app.state.numE, this.app.state.connected, this.state.randomType,\r\n       [this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue],\r\n       [this.app.state.endRed, this.app.state.endGreen, this.app.state.endBlue], this.app.state.degreesize, this.app.state.minsize, this.app.state.maxsize);\r\n    this.setState(\r\n      {vertices: vertices,\r\n       edges: edges,\r\n      }\r\n    );\r\n\r\n    this.app.setState({numV: vertices.length, numE: edges.length});\r\n  }\r\n\r\n  clearAnimations(){\r\n    var id = this.state.maxtimeouts;\r\n    while(id){\r\n      clearInterval(id);\r\n      id --;\r\n    }\r\n  }\r\n\r\n  cancelAnimation(){\r\n    this.setState({currentAnimations: [], paused: true});\r\n    this.clearAnimations();\r\n    this.app.setState({running: false});\r\n  }\r\n\r\n  pauseAnimation(){\r\n    this.setState({paused:true});\r\n    this.clearAnimations();\r\n    // console.log(this.state.currentAnimationIndex);\r\n  }\r\n\r\n  resetColoring(){\r\n    const shouldRecolor = !(sameColor([this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue],\r\n                              [this.app.state.endRed, this.app.state.endGreen, this.app.state.endBlue]));\r\n    if(shouldRecolor === true){\r\n      const new_vertices = this.state.vertices.slice();\r\n      const max_degree = find_max_degree(this.state.vertices);\r\n      var gradient = createColorGradient([this.app.state.startRed, this.app.state.startGreen,\r\n                                          this.app.state.startBlue], [this.app.state.endRed,\r\n                                          this.app.state.endGreen, this.app.state.endBlue], max_degree);\r\n      for(let i = 0; i < new_vertices.length; i++){\r\n        new_vertices[i].color = assign_color(new_vertices[i].degree, max_degree, gradient);\r\n      }\r\n      const new_edges = [];\r\n      for(let j = 0; j < this.state.edges.length; j++){\r\n        const e = new Edge(this.state.edges[j].start, this.state.edges[j].end)\r\n        if(this.state.group === \"TSP\") e.setAlpha(0.2);\r\n        new_edges.push(e);\r\n      }\r\n\r\n      this.setState({vertices: new_vertices, edges: new_edges});\r\n    }\r\n    else{\r\n      const new_vertices = this.state.vertices.slice();\r\n      const color = rgb_to_str([this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue]);\r\n      for(let i = 0; i < new_vertices.length; i ++){\r\n        new_vertices[i].color = color;\r\n      }\r\n      const new_edges = [];\r\n      for(let j = 0; j < this.state.edges.length; j++){\r\n        const e = new Edge(this.state.edges[j].start, this.state.edges[j].end)\r\n        if(this.state.group === \"TSP\") e.setAlpha(0.2);\r\n        new_edges.push(e);\r\n      }\r\n      this.setState({vertices: new_vertices, edges: new_edges});\r\n    }\r\n  }\r\n\r\n  updateVertexSize(){\r\n    if(this.app.state.degreesize === false){\r\n      const new_size = 3;\r\n      const new_vertices = this.state.vertices.slice();\r\n      for(let i = 0; i < new_vertices.length; i++){\r\n        new_vertices[i].size = new_size;\r\n      }\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n    else{\r\n      const max_degree = find_max_degree(this.state.vertices);\r\n      const new_vertices = this.state.vertices.slice();\r\n      for(let i = 0; i < new_vertices.length; i ++){\r\n        new_vertices[i].size = assign_size(new_vertices[i].degree,\r\n          max_degree, this.app.state.minsize, this.app.state.maxsize);\r\n      }\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n  }\r\n\r\n  updateColoring(){\r\n    const shouldRecolor = !(sameColor([this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue],\r\n                              [this.app.state.endRed, this.app.state.endGreen, this.app.state.endBlue]));\r\n    if(shouldRecolor === true){\r\n      const new_vertices = this.state.vertices.slice();\r\n      const max_degree = find_max_degree(this.state.vertices);\r\n      var gradient = createColorGradient([this.app.state.startRed, this.app.state.startGreen,\r\n                                          this.app.state.startBlue], [this.app.state.endRed,\r\n                                          this.app.state.endGreen, this.app.state.endBlue], max_degree);\r\n      for(let i = 0; i < new_vertices.length; i++){\r\n        new_vertices[i].color = assign_color(new_vertices[i].degree, max_degree, gradient);\r\n      }\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n    else{\r\n      const new_vertices = this.state.vertices.slice();\r\n      const color = rgb_to_str([this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue]);\r\n      for(let i = 0; i < new_vertices.length; i ++){\r\n        new_vertices[i].color = color;\r\n      }\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n  }\r\n\r\n  setDrag(e,v){\r\n    if(v === true) {\r\n      this.state.previousMouseX = e.clientX;\r\n      this.state.previousMouseY = e.clientY;\r\n    }\r\n    this.setState({dragging:v});\r\n  }\r\n\r\n  updateCamera(e){\r\n    if(this.state.dragging){\r\n      const deltaX = e.clientX - this.state.previousMouseX;\r\n      const deltaY = e.clientY - this.state.previousMouseY;\r\n      const new_offsetX = this.state.offsetX += 0.75*deltaX;\r\n      const new_offsetY = this.state.offsetY += 0.75*deltaY;\r\n      this.setState({previousMouseX: e.clientX, previousMouseY: e.clientY,\r\n                    offsetX: new_offsetX, offsetY: new_offsetY});\r\n    }\r\n  }\r\n\r\n  resetCamera(){\r\n    this.setState({offsetX:0,offsetY:0, scaleFactor: 1, mouseX: this.state.wdith/2, mouseY:this.state.height/2})\r\n  }\r\n\r\n  zoomCamera(e){\r\n    const delta = -Math.sign(e.deltaY);\r\n    const new_scale_factor = this.state.scaleFactor + delta*0.035;\r\n    this.setState({scaleFactor: new_scale_factor});\r\n  }\r\n\r\n  skipFrame(){\r\n    this.clearAnimations();\r\n    const animations_index = Math.min(this.state.currentAnimationIndex + 1,\r\n                                      this.state.currentAnimations.length-1);\r\n    waitAnimateNetwork(this, animations_index, animations_index+1, null);\r\n  }\r\n\r\n  rewindFrame(){\r\n    this.clearAnimations();\r\n    const animations_index = Math.max(this.state.currentAnimationIndex -2, 0);\r\n    waitAnimateNetwork(this, animations_index, animations_index+1, null);\r\n  }\r\n\r\n  skipForward(){\r\n    this.clearAnimations();\r\n    const animations_index = Math.min(this.state.currentAnimations.length-1,\r\n        this.state.currentAnimationIndex + Math.floor(1000/this.app.state.animationSpeed));\r\n    const end_index = this.state.paused === true? animations_index+1:\r\n                              this.state.currentAnimations.length;\r\n    waitAnimateNetwork(this, animations_index, end_index, null);\r\n  }\r\n\r\n  skipBackward(){\r\n    this.clearAnimations();\r\n    const animations_index = Math.max(0,\r\n        this.state.currentAnimationIndex - Math.floor(1000/this.app.state.animationSpeed));\r\n    const end_index = this.state.paused === true? animations_index+1:\r\n                            this.state.currentAnimations.length-1;\r\n    waitAnimateNetwork(this, animations_index, end_index, null);\r\n  }\r\n\r\n  skipToBeginning(){\r\n    this.clearAnimations();\r\n    const animations_index = 0\r\n    this.setState({currentAnimationIndex:0})\r\n    waitAnimateNetwork(this, 0, 1,null);\r\n  }\r\n  skipToEnd(){\r\n    this.clearAnimations();\r\n    const animations_index = this.state.currentAnimations.length-1;\r\n    waitAnimateNetwork(this, animations_index, animations_index+1, null)\r\n  }\r\n\r\n  openNetworkSettings(){\r\n    waitOpenNetworkSettings(this);\r\n  }\r\n\r\n  openAlgorithmSettings(){\r\n    waitOpenAlgorithmSettings(this);\r\n  }\r\n\r\n  saveAsCSV(){\r\n    let csvContent = \"data:text/csv;charset=utf-8,\";\r\n    const vertices = this.state.vertices;\r\n    const edges = this.state.edges;\r\n\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      csvContent += vertices[i].toCSV();\r\n    }\r\n    for(let i = 0; i < edges.length; i++){\r\n      csvContent += (edges[i].toCSV());\r\n    }\r\n    var link = document.createElement('a');\r\n    link.href = csvContent;\r\n    link.download = 'Network.csv';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n\r\n  }\r\n\r\n  saveAs(extension){\r\n    const canvas = this.canvas.current;\r\n    const image = canvas.toDataURL(\"network/\"+extension);\r\n    var link = document.createElement('a');\r\n    link.href = image;\r\n    link.download = 'Network.'+extension;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n    return <div className = \"network\">\r\n            <canvas style = {{marginTop: this.props.height*1/20+this.props.height/40}}\r\n            className = \"networkCanvas\" ref = {this.canvas}\r\n            onMouseDown = {(e) => this.setDrag(e,true)}\r\n            onMouseUp = {(e) => this.setDrag(e,false)}\r\n            onMouseMove = {(e) => this.updateCamera(e)}\r\n            onWheel = {(e) => this.zoomCamera(e)}>\r\n            </canvas>\r\n            <br></br>\r\n            <div className = \"animationButtons\">\r\n            <button className = \"FirstFrameB\" title = \"Skip to algorithm start\"\r\n            disabled = {this.app.state.running === false || this.state.currentAnimationIndex === 1}\r\n            style = {{height:Math.min(this.state.width/10,100),\r\n              width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n              onClick = {() => this.skipToBeginning()}></button>\r\n            <button className = \"FastBackB\" title = \"Rewind algorithm 1 second\"\r\n            disabled = {this.app.state.running === false || this.state.currentAnimationIndex === 1}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                onClick = {() => this.skipBackward()}></button>\r\n            <button className = \"PreviousFrameB\" title = \"Previous frame\"\r\n            disabled = {this.app.state.running === false || this.state.currentAnimationIndex === 1}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                onClick = {() => this.rewindFrame()}></button>\r\n            <button className = \"StartB\" hidden = {this.state.paused === false} title = \"Run algorithm\"\r\n            disabled = {(this.state.currentAnimationIndex === this.state.currentAnimations.length)\r\n            && this.state.currentAnimations.length !== 0}\r\n            onClick={() => this.runAlgorithm()}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n            <button className = \"PauseB\" hidden = {this.state.paused === true} title = \"Pause Algorithm\"\r\n            onClick = {() => this.pauseAnimation()}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                 width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n            <button className = \"StopB\"\r\n            title = \"Clear algorithm\"\r\n            disabled = {this.app.state.running === false}\r\n            onClick = {() => this.cancelAnimation()}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n            <button className = \"NextFrameB\"\r\n            title = \"Next Frame\"\r\n            disabled = {this.app.state.running === false\r\n                        || this.state.currentAnimationIndex === this.state.currentAnimations.length}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                onClick = {() => this.skipFrame()}></button>\r\n            <button className = \"FastForwardB\"\r\n            title = \"Skip forward 1 second\"\r\n            disabled = {this.app.state.running === false\r\n                        || this.state.currentAnimationIndex === this.state.currentAnimations.length}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                onClick = {() => this.skipForward()}></button>\r\n            <button className = \"LastFrameB\"\r\n            title = \"Skip to algorithm termination\"\r\n            disabled = {this.app.state.running === false\r\n                        || this.state.currentAnimationIndex === this.state.currentAnimations.length}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                onClick = {() => this.skipToEnd()}></button>\r\n            <button className= \"CameraB\"\r\n            title = \"Reset camera\"\r\n            disabled = {this.state.offsetX === 0 && this.state.offsetY === 0 && this.state.scaleFactor === 1}\r\n            onClick = {() => this.resetCamera()}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n            <button className = \"ResetColoringB\"\r\n            title = \"Reset Coloring\"\r\n            disabled = {this.app.state.running === true}\r\n            onClick = {() => this.resetColoring()}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n            </div>\r\n            <br></br>\r\n            <div className = \"selectContainer\">\r\n              <div className = \"selectalgorow\">\r\n\r\n                <select className = \"selectalgo\"\r\n                onChange = {(event) => this.setAlgoType(event.target.value)}\r\n                style = {{width: (this.state.width*8)/10}}>\r\n                  <optgroup label = \"Force Directed Algorithms\">\r\n                  <option value = \"spring\"> Basic Spring Embedding </option>\r\n                  <option value = \"fruchtermanReingold\"> Fruchterman-Reingold </option>\r\n                  <option value = \"kamadaKawai\" hidden = {true} disabled = {true}> Kamada-Kawai </option>\r\n                  <option value = \"forceAtlas2\"> Force Atlas 2 </option>\r\n                  <option value = \"forceatlaslinlog\" > Force Atlas 2 (LinLog) </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Spectral Layout Algorithms\">\r\n                  <option value = \"hall\" disabled = {true}> Hall's algorithm </option>\r\n                  <option value = \"schwarz\" disabled = {true}> Schwarz Based Method </option>\r\n                  <option value = \"spectralDrawing\" disabled = {true}> Generalized Eigenvector (Koren)</option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Custom Algorithms\" hidden = {true}>\r\n                    <option value = \"radialFlowDirected\" disabled = {true}>  Radial Flow Directed </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Minimum Spanning Trees\">\r\n                    <option value =\"kruskal\"> Kruskral's Algorithm</option>\r\n                    <option value = \"prim\"> Prim's Algorithm </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"TSP\">\r\n                    <option value = \"2opt\"> 2-Opt </option>\r\n                    <option value = \"3opt\"> 3-Opt </option>\r\n                    <option value = \"2optannealing\"> 2-Opt Simulated Annealing </option>\r\n                    <option value = \"3optannealing\" disabled = {true} hidden = {true}> 3-Opt Simulated Annealing </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Edge Coloring Algorithms\">\r\n                    <option value = \"misra\"> Misra-Gries Algorithm (Fan Rotation)</option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Vertex Coloring Algorithms\">\r\n                    <option value = \"greedyvertex\" > Greedy Coloring </option>\r\n                  </optgroup>\r\n                </select>\r\n                <div className = \"dropdown\">\r\n                  <button className = \"saveB\"\r\n                  title = \"Save as\"\r\n                  style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}>\r\n                  </button>\r\n                  <div className = \"dropdown-content\">\r\n                    <a className = \"aFile\" onClick = {() => this.saveAsCSV()}>.csv</a>\r\n                    <a className = \"aFile\" onClick = {() => this.saveAs(\"png\")}>.png</a>\r\n                    <a className = \"aFile\" onClick = {() => this.saveAs(\"jpg\")}>.jpg</a>\r\n                  </div>\r\n                </div>\r\n                <button className = \"AlgoB\"\r\n                title = \"Algorithm Settings\"\r\n                onClick = {() => this.openAlgorithmSettings()}\r\n                disabled = {this.app.state.running === true}\r\n                  style = {{height:Math.min(this.state.width/10,100),\r\n                    width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}>\r\n                    </button>\r\n              </div>\r\n\r\n              <br></br>\r\n              <div className = \"selectalgorow\">\r\n                <select className = \"selectalgo\"\r\n                 onChange = {(event) => this.setLayoutType(event.target.value)}\r\n                 style = {{width: (this.state.width*2)/10}}\r\n                disabled = {this.app.state.running}>\r\n                  <option value = \"0\"> Square </option>\r\n                  <option value = \"1\"> Stretch to Fit </option>\r\n                </select>\r\n                <select value = {this.state.randomType}\r\n                style = {{width: (this.state.width*6)/10}}\r\n                disabled = {this.app.state.running === true }className = \"selectalgo\" onChange = {(event) => this.setRandomizedType(event.target.value)}>\r\n                  <option value = \"random\" disabled = {this.state.group === \"TSP\"}> Random </option>\r\n                  <option value = \"randomcircle\" disabled = {this.state.group === \"TSP\"}> Random Circle </option>\r\n                  <option  value = \"cycle\"> Random Hamiltonian Cycle </option>\r\n                  <option value = \"randomclustering\" disabled = {true}> Random Clustering </option>\r\n                </select>\r\n                <button className = \"resetB\"\r\n                onClick = {() => this.resetNetwork()}\r\n                title = \"New random network\"\r\n                disabled = {this.app.state.running === true}\r\n                  style = {{height:Math.min(this.state.width/10,100),\r\n                    width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}>\r\n                    </button>\r\n                <button className = \"generalB\"\r\n                title = \"Network Settings\"\r\n                onClick = {() => this.openNetworkSettings()}\r\n                disabled = {this.app.state.running === true}\r\n                  style = {{height:Math.min(this.state.width/10,100),\r\n                    width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}>\r\n                    </button>\r\n              </div>\r\n\r\n\r\n            </div>\r\n           </div>\r\n  }\r\n}\r\n\r\nexport default NetworkVisualizer;\r\n\r\n\r\nasync function waitSetLayout(that,w,h){\r\n  await that.setState({height: h,width: w});\r\n  that.resetNetwork();\r\n}\r\n\r\nasync function waitSetEdges(that, sorted_edges,animations){\r\n  await that.setState({edges: sorted_edges});\r\n  waitAnimateNetwork(that, 0, animations.length,animations)\r\n}\r\n\r\nasync function waitSetRandomizedType(that,v){\r\n  await that.setState({randomType: v});\r\n  that.resetNetwork();\r\n}\r\n\r\nasync function animateEdges(that, edges){\r\n  await that.setState({edges: edges});\r\n}\r\n\r\nfunction find_max_degree(vertices){\r\n  var max_degree = -Infinity;\r\n  for(let i = 0; i < vertices.length; i++){\r\n    max_degree = Math.max(vertices[i].degree, max_degree);\r\n  }\r\n  return max_degree;\r\n}\r\n\r\nfunction assign_size(degree, max_degree, minsize, maxsize){\r\n  //min degree is 1 or 0\r\n  return minsize +(maxsize - minsize)*(degree/max_degree)\r\n}\r\n\r\nfunction sameColor(startColor, endColor){\r\n  if(startColor[0] === endColor[0] && startColor[1] === endColor[1] && startColor[2] === endColor[2]) return true;\r\n  return false;\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\" + color[0] + \",\" + color[1] + \",\" + color[2]+\")\";\r\n}\r\n\r\nfunction createColorGradient(startColor, endColor, maxDegree){\r\n  // console.log(\"inside color gradient\", startColor, endColor, maxDegree);\r\n  var [startHue, startSaturation, startLightness] = rgb_to_hsl(startColor);\r\n  var [endHue, endSaturation, endLightness] = rgb_to_hsl(endColor);\r\n\r\n  // console.log(startHue, startSaturation, startLightness);\r\n  // console.log(endHue, endSaturation, endLightness);\r\n  var incrementHue = (endHue-startHue)/maxDegree;\r\n\r\n  const gradient = [];\r\n\r\n  for(let i = 0; i < maxDegree; i++){\r\n    const newHue = startHue+(incrementHue*i)%360;\r\n    const [red,green,blue] = hsl_to_rgb((startHue+incrementHue*i)%360, startSaturation,\r\n                                            startLightness)\r\n    gradient.push([Math.abs(red%256), Math.abs(green%256), Math.abs(blue%256)]);\r\n    // console.log(gradient[i]);\r\n  }\r\n  return gradient;\r\n}\r\n\r\nfunction rgb_to_hsl(rgbColor){\r\n  var red = rgbColor[0]/255;\r\n  var green = rgbColor[1]/255;\r\n  var blue = rgbColor[2]/255;\r\n  var Cmax = Math.max(...[red,green,blue]);\r\n  var Cmin = Math.min(...[red,green,blue]);\r\n  var delta = Cmax-Cmin;\r\n\r\n\r\n  var hue = calculate_hue(delta, Cmax, red, green, blue)%360;\r\n  var lightness = (Cmax+Cmin)/2;\r\n  var saturation = delta === 0? 0: delta/(1-Math.abs(2*lightness-1));\r\n\r\n  return [hue, saturation, lightness];\r\n}\r\n\r\nfunction hsl_to_rgb(hue, saturation, lightness){\r\n  const C = (1 - Math.abs(2*lightness-1))*saturation\r\n  const X = C * (1 - Math.abs(hue/60)%2 -1);\r\n  const m = lightness - C/2;\r\n  const [R_prime, G_prime, B_prime] = check_degrees(hue, C, X);\r\n  return [((R_prime+m)*255)%256, ((G_prime + m)* 255)%256, ((B_prime+m) * 255)%256];\r\n}\r\n\r\nfunction calculate_hue(delta, Cmax, red, green, blue){\r\n  if(delta === 0) return 0;\r\n  if(Cmax === red) return 60*(((green-blue)/delta)%6);\r\n  if(Cmax === green) return 60*((blue-red)/delta+2);\r\n  if(Cmax === blue) return 60*((red- green)/delta + 4);\r\n}\r\n\r\nfunction check_degrees(hue, C, X){\r\n  if((hue >= 0 && hue < 60) || hue == 360) return [C,X,0];\r\n  if(hue >= 60 && hue < 120 ) return [X,C,0];\r\n  if(hue >= 120 && hue < 180 ) return [0, C, X];\r\n  if(hue >= 180 && hue < 240 ) return [0, X, C];\r\n  if(hue >= 240 && hue < 300 ) return [X, 0, C];\r\n  if(hue >= 300 && hue < 360 ) return [C, 0, X];\r\n  return [0,0,0];\r\n}\r\n\r\nfunction assign_color(degree, max_degree, gradient){\r\n\r\n  var selection = gradient[Math.floor((degree/max_degree) * (gradient.length-1))]\r\n\r\n  return rgb_to_str(selection)\r\n}\r\n\r\nasync function waitOpenNetworkSettings(that){\r\n  await that.app.navbar.current.openSettings();\r\n  that.app.navbar.current.settings.current.generalsettings.current.setOpen(true);\r\n}\r\n\r\nasync function waitOpenAlgorithmSettings(that){\r\n  await that.app.navbar.current.openSettings();\r\n  that.app.navbar.current.settings.current.algorithmsettings.current.setOpen(true);\r\n}\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"./GeneralNetworkSettings.css\";\r\n\r\nconst MAX_EDGES = 600;\r\n\r\nasync function waitSetConnected(that,value){\r\n  if(value === 0) await that.setState({connected:\"False\"});\r\n  if(value === 1) await that.setState({connected:\"True\"});\r\n  if(that.state.dimension === 2) that.network.current.resetNetwork();\r\n  if(that.state.dimension === 3) that.network3d.current.resetNetwork();\r\n}\r\n\r\nasync function waitSetVertices(that, v){\r\n  await that.setState({numV: v});\r\n  if(that.state.dimension === 2) that.network.current.resetNetwork();\r\n  if(that.state.dimension === 3) that.network3d.current.resetNetwork();\r\n}\r\n\r\nasync function waitSetEdges(that,e){\r\n  await that.setState({numE: e});\r\n  if(that.state.dimension === 2) that.network.current.resetNetwork();\r\n  if(that.state.dimension === 3) that.network3d.current.resetNetwork();\r\n}\r\n\r\nasync function waitSetLayout(that,w,h){\r\n  await that.setState({height: h,width: w});\r\n  if(that.state.dimension === 2) that.network.current.resetNetwork();\r\n  if(that.state.dimension === 3) that.network3d.current.resetNetwork();\r\n}\r\n\r\nasync function waitSetDegreeSize(that, v){\r\n  if(v === 0){\r\n    await that.setState({degreesize: false});\r\n    if(that.state.dimension === 2) that.network.current.updateVertexSize();\r\n    if(that.state.dimension === 3) that.network3d.current.updateVertexSize();\r\n  }\r\n  if(v === 1){\r\n    await that.setState({degreesize: true});\r\n    if(that.state.dimension === 2) that.network.current.updateVertexSize();\r\n    if(that.state.dimension === 3) that.network3d.current.updateVertexSize();\r\n  }\r\n}\r\n\r\nasync function waitSetRed(that, v){\r\n  await that.setState({startRed: v});\r\n  if(that.state.dimension === 2) that.network.current.updateColoring();\r\n  if(that.state.dimension === 3) that.network3d.current.updateColoring();\r\n}\r\n\r\nasync function waitSetGreen(that, v){\r\n  await that.setState({startGreen: v});\r\n  if(that.state.dimension === 2) that.network.current.updateColoring();\r\n  if(that.state.dimension === 3) that.network3d.current.updateColoring();\r\n}\r\n\r\nasync function waitSetBlue(that, v){\r\n  await that.setState({startBlue: v});\r\n  if(that.state.dimension === 2) that.network.current.updateColoring();\r\n  if(that.state.dimension === 3) that.network3d.current.updateColoring();\r\n}\r\n\r\nasync function waitSetEndRed(that, v){\r\n  await that.setState({endRed: v});\r\n  if(that.state.dimension === 2) that.network.current.updateColoring();\r\n  if(that.state.dimension === 3) that.network3d.current.updateColoring();\r\n}\r\n\r\nasync function waitSetEndGreen(that, v){\r\n  await that.setState({endGreen: v});\r\n  if(that.state.dimension === 2) that.network.current.updateColoring();\r\n  if(that.state.dimension === 3) that.network3d.current.updateColoring();\r\n}\r\n\r\nasync function waitSetEndBlue(that, v){\r\n  await that.setState({endBlue: v});\r\n  if(that.state.dimension === 2) that.network.current.updateColoring();\r\n  if(that.state.dimension === 3) that.network3d.current.updateColoring();\r\n}\r\n\r\nasync function waitSetMinVertexSize(that, v){\r\n  const value = parseInt(v);\r\n  await that.setState({minsize:value});\r\n  if(that.state.dimension === 2) that.network.current.updateVertexSize();\r\n  if(that.state.dimension === 3) that.network3d.current.updateVertexSize();\r\n}\r\n\r\nasync function waitSetMaxVertexSize(that, v){\r\n  const value = parseInt(v);\r\n  await that.setState({maxsize:value});\r\n  if(that.state.dimension === 2) that.network.current.updateVertexSize();\r\n  if(that.state.dimension === 3) that.network3d.current.updateVertexSize();\r\n}\r\n\r\n\r\nclass GeneralNetworkSettings extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      startColor: convertValuesToRgb(this.props.app.state.startRed, this.props.app.state.startGreen, this.props.app.state.startBlue),\r\n      endColor: convertValuesToRgb(this.props.app.state.endRed, this.props.app.state.endGreen, this.props.app.state.endBlue),\r\n      width: 75,\r\n      height: 75,\r\n    }\r\n    this.app = this.props.app;\r\n    this.network = this.app.network.current === null? this.app.network3d.current: this.app.network.current;\r\n    // console.log(this.state.startColor);\r\n    // console.log(this.state.endColor);\r\n  }\r\n\r\n  setOpen(v){\r\n    this.setState({open:v});\r\n  }\r\n\r\n  setAnimationSpeed(ms){\r\n    const value = Math.abs(150-parseInt(ms));\r\n    this.app.setState({animationSpeed: value});\r\n  }\r\n\r\n  setVertices(v){\r\n    const value = parseInt(v);\r\n    waitSetVertices(this.app, value)\r\n  }\r\n\r\n  setEdges(v){\r\n    const value = parseInt(v);\r\n    waitSetEdges(this.app, value)\r\n  }\r\n\r\n  setConnected(v){\r\n    const value = parseInt(v);\r\n    waitSetConnected(this.app, value);\r\n  }\r\n\r\n  setDisconnectedSubgraphs(){\r\n\r\n  }\r\n\r\n  setScaleDegreeSize(v){\r\n    const value = parseInt(v);\r\n    waitSetDegreeSize(this.app, value)\r\n  }\r\n\r\n  setRed(v){\r\n    const value = parseInt(v);\r\n    waitSetRed(this.app, value);\r\n    this.setState({startColor: convertValuesToRgb(value, this.app.state.startGreen, this.app.state.startBlue)});\r\n  }\r\n\r\n  setGreen(v){\r\n    const value = parseInt(v);\r\n    waitSetGreen(this.app, value);\r\n    this.setState({startColor: convertValuesToRgb(this.app.state.startRed, value, this.app.state.startBlue)});\r\n  }\r\n\r\n  setBlue(v){\r\n    const value = parseInt(v);\r\n    waitSetBlue(this.app, value);\r\n    this.setState({startColor: convertValuesToRgb(this.app.state.startRed, this.app.state.startGreen, value)});\r\n  }\r\n\r\n  setEndRed(v){\r\n    const value = parseInt(v);\r\n    waitSetEndRed(this.app, value)\r\n    this.setState({endColor: convertValuesToRgb(value, this.app.state.endGreen, this.app.state.endBlue)});\r\n  }\r\n\r\n  setEndGreen(v){\r\n    const value = parseInt(v);\r\n    waitSetEndGreen(this.app, value);\r\n    this.setState({endColor: convertValuesToRgb(this.app.state.endRed, value , this.app.state.endBlue)});\r\n  }\r\n\r\n  setEndBlue(v){\r\n    const value = parseInt(v);\r\n    waitSetEndBlue(this.app, value);\r\n    this.setState({endColor: convertValuesToRgb(this.app.state.endRed, this.app.state.endGreen, value)});\r\n  }\r\n\r\n  setMinVertexSize(v){\r\n    const that = this.app;\r\n    waitSetMinVertexSize(that,v);\r\n  }\r\n\r\n  setMaxVertexSize(v){\r\n    const that = this.app;\r\n    waitSetMaxVertexSize(that, v);\r\n  }\r\n\r\n  render(){\r\n    return<div>\r\n          <Modal isOpen = {this.state.open}\r\n            onRequestClose = {() => this.setOpen(false)}\r\n            className = \"generalsettings\"\r\n            overlayClassName = \"generalsettingsoverlay\"\r\n            >\r\n            <div className = \"modalContents\">\r\n            <p className = \"sliderHeader\" style = {{color: \"black\"}}>\r\n              <b style = {{color: \"white\"}} >General Network Settings</b>\r\n            </p>\r\n            <div className = \"sliders\">\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"130\"\r\n                value = {Math.abs(150-this.app.state.animationSpeed)}\r\n                className = \"slider\"\r\n                onChange = {(event)=> this.setAnimationSpeed(event.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                AnimationSpeed : {this.app.state.animationSpeed}ms\r\n              </label>\r\n              <input\r\n                type = \"range\"\r\n                min = \"4\"\r\n                max = \"200\"\r\n                value = {this.app.state.numV}\r\n                step = \"1\"\r\n                className = \"slider\"\r\n                name = \"weight\"\r\n                disabled = {this.app.state.running}\r\n                onChange = {(event) => this.setVertices(event.target.value)}>\r\n              </input>\r\n              <label>\r\n                Vertices: {this.app.state.numV}\r\n              </label>\r\n              <input\r\n                type = \"range\"\r\n                min =  {this.app.state.connected === \"True\"? this.app.state.numV-1: Math.min(20, this.app.state.numV-1)}\r\n                max = {Math.min(Math.floor((this.app.state.numV*this.app.state.numV - this.app.state.numV)/2), MAX_EDGES)}\r\n                value = {this.app.state.numE}\r\n                step = \"1\"\r\n                className = \"slider\"\r\n                name = \"weight\"\r\n                disabled = {this.app.state.running || (this.network === null || this.network.state.randomType === \"cycle\")}\r\n                onChange = {(event) => this.setEdges(event.target.value)}>\r\n              </input>\r\n              <label>\r\n                Edges: {this.app.state.numE}\r\n              </label>\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"1\"\r\n                value = {this.app.state.connected === \"True\"? \"1\":\"0\"}\r\n                step = \"1\"\r\n                className = \"slider\"\r\n                onChange = {(event) => this.setConnected(event.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Force Connectedness: {this.app.state.connected}\r\n              </label>\r\n              </div>\r\n\r\n\r\n              <p className = \"sliderHeader\" style = {{color: \"black\"}}>\r\n                <b style = {{color: \"white\"}} > Size Settings</b>\r\n              </p>\r\n\r\n\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"1\"\r\n                step = \"1\"\r\n                value = {this.app.state.degreesize === true?1:0}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setScaleDegreeSize(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Scale Vertex Size to Degree : {this.app.state.degreesize === true?\"On\":\"Off\"}\r\n              </label>\r\n\r\n              <input\r\n                type = \"range\"\r\n                min = \"1\"\r\n                max = {this.app.state.maxsize}\r\n                step = \"1\"\r\n                value = {this.app.state.minsize}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setMinVertexSize(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Minimum Vertex Size: {this.app.state.minsize}\r\n              </label>\r\n\r\n              <input\r\n                type = \"range\"\r\n                min = {this.app.state.minsize}\r\n                max = \"12\"\r\n                step = \"1\"\r\n                value = {this.app.state.maxsize}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setMaxVertexSize(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Maximum Vertex Size: {this.app.state.maxsize}\r\n              </label>\r\n\r\n              <p className = \"sliderHeader\" style = {{color: \"black\"}}>\r\n                <b style = {{color: \"white\"}} > Start Color (Lowest degree vertices)</b>\r\n              </p>\r\n\r\n              <canvas\r\n              height = {this.state.height}\r\n              width = {this.state.width}\r\n              style = {{backgroundColor: this.state.startColor}}\r\n              className = \"colorCanvas\"></canvas>\r\n\r\n              <br></br>\r\n\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"255\"\r\n                step = \"1\"\r\n                value = {this.app.state.startRed}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setRed(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Red : {this.app.state.startRed}\r\n              </label>\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"255\"\r\n                step = \"1\"\r\n                value = {this.app.state.startGreen}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setGreen(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Green : {this.app.state.startGreen}\r\n              </label>\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"255\"\r\n                step = \"1\"\r\n                value = {this.app.state.startBlue}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setBlue(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Blue: {this.app.state.startBlue}\r\n              </label>\r\n              <p className = \"sliderHeader\" style = {{color: \"black\"}}>\r\n                <b style = {{color: \"white\"}} > End Color (Highest degree vertices)</b>\r\n              </p>\r\n\r\n              <canvas\r\n              height = {this.state.height}\r\n              width = {this.state.width}\r\n              style = {{backgroundColor: this.state.endColor}}\r\n              className = \"colorCanvas\"></canvas>\r\n\r\n              <br></br>\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"255\"\r\n                step = \"1\"\r\n                value = {this.app.state.endRed}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setEndRed(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Red : {this.app.state.endRed}\r\n              </label>\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"255\"\r\n                step = \"1\"\r\n                value = {this.app.state.endGreen}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setEndGreen(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Green : {this.app.state.endGreen}\r\n              </label>\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"255\"\r\n                step = \"1\"\r\n                value = {this.app.state.endBlue}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setEndBlue(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Blue: {this.app.state.endBlue}\r\n              </label>\r\n              </div>\r\n      </Modal>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default GeneralNetworkSettings;\r\n\r\nfunction convertValuesToRgb(red, green, blue){\r\n  return \"rgb(\"+red.toString()+\",\"+green.toString()+\",\"+blue.toString()+\")\"\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nimport \"./AlgorithmAttributes.css\";\r\n\r\nclass AlgorithmAttributes extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      layout : \"spring\",\r\n      height: 75,\r\n      width: 75,\r\n      parentHelp: null,\r\n      delta: this.props.app.state.settings.spring.delta, //spring\r\n      eps : this.props.app.state.settings.spring.eps, //spring\r\n      crep: this.props.app.state.settings.spring.kr, //spring\r\n      cspring: this.props.app.state.settings.spring.ka, //spring\r\n      C: 2, // spring\r\n      maxX: 0,\r\n      maxY: 0,\r\n      cTemp: this.props.app.state.settings.fruchterman.cTemp, //fruchtermanReingold\r\n      tempHeuristic: this.props.app.state.settings.fruchterman.tempHeuristic,//this.props.app.settings.fruchterman.tempHeuristic, //fruchtermanReingold\r\n      cPercentage: this.props.app.state.settings.spring.areascaling, // spring\r\n      collision: 2, //fruchterman\r\n      distanceType: this.props.app.state.settings.spring.distanceType, // spring\r\n      kr: this.props.app.state.settings.forceatlas2.fr, // forceAtlas2\r\n      gravity: this.props.app.state.settings.forceatlas2.gravity, //forceAtlas2\r\n      gravityType : \"Normal\",//forceAtlas2\r\n      kg: this.props.app.state.settings.forceatlas2.kg, //forceAtlas2\r\n      tau: this.props.app.state.settings.forceatlas2.tau,//forceAtlas2\r\n      ksmax: this.props.app.state.settings.forceatlas2.ksmax, //forceAtlas2\r\n      overlappingNodes: true, //forceAtlas2\r\n      kruskalred: this.props.app.state.settings.kruskal.red,\r\n      kruskalgreen: this.props.app.state.settings.kruskal.green,\r\n      kruskalblue: this.props.app.state.settings.kruskal.blue,\r\n      primred: this.props.app.state.settings.prim.red,\r\n      primgreen: this.props.app.state.settings.prim.green,\r\n      primblue: this.props.app.state.settings.prim.blue,\r\n      opt2timeout: this.props.app.state.settings.opt2.timeout,\r\n      opt2red: this.props.app.state.settings.opt2.red,\r\n      opt2green: this.props.app.state.settings.opt2.green,\r\n      opt2blue: this.props.app.state.settings.opt2.blue,\r\n      opt2annealingtimeout: this.props.app.state.settings.opt2annealing.timeout,\r\n      opt2annealingacceptance: this.props.app.state.settings.opt2annealing.acceptance,\r\n      opt2annealingred: this.props.app.state.settings.opt2annealing.startColor[0],\r\n      opt2annealinggreen: this.props.app.state.settings.opt2annealing.startColor[1],\r\n      opt2annealingblue: this.props.app.state.settings.opt2annealing.startColor[2],\r\n      opt2annealingredEnd: this.props.app.state.settings.opt2annealing.endColor[0],\r\n      opt2annealinggreenEnd: this.props.app.state.settings.opt2annealing.endColor[1],\r\n      opt2annealingblueEnd: this.props.app.state.settings.opt2annealing.endColor[2],\r\n      opt3timeout: this.props.app.state.settings.opt3.timeout,\r\n      opt3red: this.props.app.state.settings.opt3.red,\r\n      opt3green: this.props.app.state.settings.opt3.green,\r\n      opt3blue: this.props.app.state.settings.opt3.blue,\r\n      greedyStartRed: this.props.app.state.settings.greedy.startRed,\r\n      greedyStartGreen: this.props.app.state.settings.greedy.startGreen,\r\n      greedyStartBlue: this.props.app.state.settings.greedy.startBlue,\r\n      greedyEndRed: this.props.app.state.settings.greedy.endRed,\r\n      greedyEndGreen: this.props.app.state.settings.greedy.endGreen,\r\n      greedyEndBlue: this.props.app.state.settings.greedy.endBlue,\r\n      filtering: this.props.filtering,\r\n      filter: this.props.filter,\r\n    }\r\n    this.help = React.createRef();\r\n    this.app= this.props.app;\r\n    this.settings = this.props.settings;\r\n  }\r\n\r\n\r\n  setCREP(v){\r\n    waitsetCREP(v, this);\r\n  }\r\n\r\n  setCSPRING(v){\r\n    waitsetCSPRING(v, this);\r\n  }\r\n\r\n  setDelta(v){\r\n    waitsetDelta(v, this);\r\n  }\r\n\r\n  setEpsilon(v){\r\n    waitsetEpsilon(v, this);\r\n  }\r\n\r\n  setC(v){\r\n    waitsetC(v, this);\r\n  }\r\n\r\n  setCTEMP(v){\r\n    waitsetCTEMP(v, this);\r\n  }\r\n\r\n  setKr(v){\r\n    waitsetKr(v,this);\r\n  }\r\n\r\n  setGravity(v){\r\n    waitsetGravity(v, this);\r\n  }\r\n\r\n  setGravityType(v){\r\n    waitsetGravityType(v, this);\r\n  }\r\n\r\n  setGravityStrength(v){\r\n    waitsetGravityStrength(v, this);\r\n  }\r\n\r\n  setTau(v){\r\n    waitsetTau(v, this);\r\n  }\r\n\r\n  setKsmax(v){\r\n    waitsetKsmax(v, this);\r\n  }\r\n\r\n  setOverlappingNodes(v){\r\n    waitsetOverlappingNodes(v, this);\r\n  }\r\n  setTempHeuristic(v){\r\n    waitsetTempHeuristic(v, this);\r\n  }\r\n\r\n  setCollision(v){\r\n    waitsetCollision(v, this);\r\n  }\r\n\r\n  setDistanceType(v){\r\n    waitsetDistanceType(v, this);\r\n  }\r\n\r\n  setKruskalRed(v){\r\n    waitSetKruskalRed(v, this);\r\n  }\r\n\r\n  setKruskalGreen(v){\r\n    waitSetKruskalGreen(v, this);\r\n  }\r\n\r\n  setKruskalBlue(v){\r\n    waitSetKruskalBlue(v, this);\r\n  }\r\n\r\n  setPrimRed(v){\r\n    waitSetPrimRed(v, this);\r\n  }\r\n\r\n  setPrimGreen(v){\r\n    waitSetPrimGreen(v, this);\r\n  }\r\n\r\n  setPrimBlue(v){\r\n    waitSetPrimBlue(v, this);\r\n  }\r\n\r\n  setOpt2Timeout(v){\r\n    waitSetOpt2Timeout(v, this);\r\n  }\r\n\r\n  setOpt2Red(v){\r\n    waitSetOpt2Red(v, this);\r\n  }\r\n\r\n  setOpt2Green(v){\r\n    waitSetOpt2Green(v, this);\r\n  }\r\n\r\n  setOpt2Blue(v){\r\n    waitSetOpt2Blue(v, this);\r\n  }\r\n\r\n  setOpt3Timeout(v){\r\n    waitSetOpt3Timeout(v, this);\r\n  }\r\n\r\n  setOpt3Red(v){\r\n    waitSetOpt3Red(v, this);\r\n  }\r\n\r\n  setOpt3Green(v){\r\n    waitSetOpt3Green(v, this);\r\n  }\r\n\r\n  setOpt3Blue(v){\r\n    waitSetOpt3Blue(v, this);\r\n  }\r\n\r\n  setGreedyStartRed(v){\r\n    waitSetGreedyStartRed(v, this);\r\n  }\r\n\r\n  setGreedyStartGreen(v){\r\n    waitSetGreedyStartGreen(v, this);\r\n  }\r\n\r\n  setGreedyStartBlue(v){\r\n    waitSetGreedyStartBlue(v, this);\r\n  }\r\n\r\n  setGreedyEndRed(v){\r\n    waitSetGreedyEndRed(v, this);\r\n  }\r\n\r\n  setGreedyEndGreen(v){\r\n    waitSetGreedyEndGreen(v, this);\r\n  }\r\n\r\n  setGreedyEndBlue(v){\r\n    waitSetGreedyEndBlue(v, this);\r\n  }\r\n\r\n\r\n\r\n  filter(e){\r\n    if(e === \"\") {\r\n      this.setState({filtering: false, filter: e});\r\n      this.app.setState({filtering: false, filter: e});\r\n    }\r\n    else{\r\n      this.app.setState({filtering: true, filter: e});\r\n      this.setState({filtering: true, filter: e});\r\n    }\r\n  }\r\n  render(){\r\n      return <div className = \"Attributes\">\r\n\r\n      <div className = \"searchbar\">\r\n        <label className = \"attributesearch\"> Search for Algorithm: </label>\r\n        <input value = {this.state.filter} onChange = {(e) => this.filter(e.target.value)}/>\r\n      </div>\r\n      {(this.state.filtering === true && \"spring embedding\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n      ?<div><p> Spring Embedding</p><div className = \"sliders\">\r\n                <input className = \"slider\"\r\n                type = \"range\"\r\n                min = \"0.1\"\r\n                max = \"2\"\r\n                step = \"0.1\"\r\n                value = {this.state.cspring}\r\n                onChange = {(event)=> this.setCSPRING(event.target.value)}\r\n                disabled = {this.state.running}>\r\n                </input>\r\n                <label> Force of Attraction: {this.state.cspring}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                <input className = \"slider\"\r\n                type = \"range\"\r\n                min = \"0.1\"\r\n                max = \"2\"\r\n                step = \"0.1\"\r\n                value ={this.state.crep}\r\n                onChange = {(event)=> this.setCREP(event.target.value)}\r\n                disabled = {this.state.running}>\r\n                </input>\r\n                <label> Force of Repulsion : {this.state.crep}</label>\r\n              </div>\r\n                <div className = \"sliders\">\r\n                <input className = \"slider\"\r\n                type = \"range\"\r\n                min = \"0.001\"\r\n                max = \"3\"\r\n                value = {this.state.eps}\r\n                step = \"0.001\"\r\n                onChange = {(event)=> this.setEpsilon(event.target.value)}\r\n                disabled = {this.state.running}>\r\n                </input>\r\n                <label> Convergence Bound : {this.state.eps}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                <input className = \"slider\"\r\n                type = \"range\"\r\n                min = \"0.1\"\r\n                max = \"2\"\r\n                step = \"0.1\"\r\n                value = {this.state.delta}\r\n                onChange = {(event)=> this.setDelta(event.target.value)}\r\n                disabled = {this.state.running}>\r\n                </input>\r\n                <label> Rate of Convergence: {this.state.delta}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                <input className = \"slider\"\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"100\"\r\n                value = {this.state.cPercentage}\r\n                step = \"0.1\"\r\n                onChange = {(event)=> this.setC(event.target.value)}\r\n                disabled = {this.state.running}>\r\n                </input>\r\n                <label> Force to Area scaling: {this.state.cPercentage}%</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                <input className = \"slider\"\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"1\"\r\n                value = {this.state.distanceType}\r\n                step = \"1\"\r\n                onChange = {(event)=> this.setDistanceType(event.target.value)}\r\n                disabled = {this.state.running}>\r\n                </input>\r\n                <label> Distance: {this.state.distanceType === 1? \"Continuous\": \"Graph Theoretic\"}</label>\r\n                </div>\r\n                </div>\r\n                : <></>}\r\n              {(this.state.filtering === true && \"fruchterman-reingold\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n              ?<div><p>Fruchterman-Reingold</p>\r\n              <div className = \"Attributes\">\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0.1\"\r\n                  max = \"3\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.cTemp}\r\n                  onChange = {(event)=> this.setCTEMP(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Initial Temperature Scaling: {this.state.cTemp}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"1\"\r\n                  max = \"3\"\r\n                  value = {this.state.tempHeuristic === \"Logarithmic\"?1:this.state.tempHeuristic === \"Linear\"?2:3}\r\n                  step = \"1\"\r\n                  onChange = {(event)=> this.setTempHeuristic(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Temperature Cooling: {this.state.tempHeuristic}</label>\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0.001\"\r\n                  max = \"1\"\r\n                  value = {this.state.eps}\r\n                  step = \"0.001\"\r\n                  onChange = {(event)=> this.setEpsilon(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Convergence Bound : {this.state.eps}</label>\r\n                </div>\r\n              </div>\r\n              </div>\r\n              : <></>}\r\n            {(this.state.filtering === true && \"forceatlas2\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n            ?<div><p> ForceAtlas2 </p>\r\n            <div className = \"Attributes\">\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0.1\"\r\n                  max = \"100\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.kr}\r\n                  onChange = {(event) => this.setKr(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Force of Repulsion: {this.state.kr}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0\"\r\n                  max = \"1\"\r\n                  step = \"1\"\r\n                  value = {this.state.gravity === true? 1:0}\r\n                  onChange = {(event) => this.setGravity(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Gravity: {this.state.gravity === true? \"On\": \"Off\"}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0\"\r\n                  max = \"20\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.kg}\r\n                  onChange = {(event) => this.setGravityStrength(event.target.value)}\r\n                  disabled = {this.state.running || !(this.state.gravity)}>\r\n                  </input>\r\n                  <label> Gravity Strength: {this.state.kg}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0.1\"\r\n                  max = \"2\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.tau}\r\n                  onChange = {(event) => this.setTau(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Tolerance(speed): {this.state.tau}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"1\"\r\n                  max = \"20\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.ksmax}\r\n                  onChange = {(event) => this.setKsmax(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Temperature Cap: {this.state.ksmax}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0\"\r\n                  max = \"1\"\r\n                  step = \"1\"\r\n                  value = {this.state.overlappingNodes === true? \"0\":\"1\"}\r\n                  onChange = {(event) => this.setOverlappingNodes(event.target.value)}\r\n                  disabled = {true}>\r\n                  </input>\r\n                  <label> Overlap Nodes: {this.state.overlappingNodes === true? \"On\": \"Off\"}</label>\r\n                </div>\r\n             </div>\r\n             </div>\r\n             : <> </>}\r\n             {(this.state.filtering === true && \"forceatlaslinlog\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n            ?<div><p>ForceAtlasLinLog</p>\r\n            <div className = \"Attributes\">\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0.1\"\r\n                  max = \"100\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.kr}\r\n                  onChange = {(event) => this.setKr(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Force of Repulsion: {this.state.kr}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0\"\r\n                  max = \"1\"\r\n                  step = \"1\"\r\n                  value = {this.state.gravity === true? 1:0}\r\n                  onChange = {(event) => this.setGravity(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Gravity: {this.state.gravity === true? \"On\": \"Off\"}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0\"\r\n                  max = \"20\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.kg}\r\n                  onChange = {(event) => this.setGravityStrength(event.target.value)}\r\n                  disabled = {this.state.running || !(this.state.gravity)}>\r\n                  </input>\r\n                  <label> Gravity Strength: {this.state.kg}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0.1\"\r\n                  max = \"2\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.tau}\r\n                  onChange = {(event) => this.setTau(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Tolerance(speed): {this.state.tau}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"1\"\r\n                  max = \"20\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.ksmax}\r\n                  onChange = {(event) => this.setKsmax(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Temperature Cap: {this.state.ksmax}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0\"\r\n                  max = \"1\"\r\n                  step = \"1\"\r\n                  value = {this.state.overlappingNodes === true? \"0\":\"1\"}\r\n                  onChange = {(event) => this.setOverlappingNodes(event.target.value)}\r\n                  disabled = {true}>\r\n                  </input>\r\n                  <label> Overlap Nodes: {this.state.overlappingNodes === true? \"On\": \"Off\"}</label>\r\n                </div>\r\n                </div>\r\n\r\n             </div>\r\n             : <></>}\r\n             {(this.state.filtering === true && \"kruskal's algorithm\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n            ?<div> <p> Kruskal's Algorithm </p>\r\n            <canvas\r\n            height = {this.state.height}\r\n            width = {this.state.width}\r\n            style = {{backgroundColor: rgb_to_str([this.state.kruskalred, this.state.kruskalgreen,\r\n                      this.state.kruskalblue])}}\r\n            className = \"colorCanvas\"></canvas>\r\n            <div className = \"sliders\">\r\n              <input className = \"slider\"\r\n              type = \"range\"\r\n              min = \"0\"\r\n              max = \"255\"\r\n              value = {this.app.state.settings.kruskal.red}\r\n              onChange = {(e) => this.setKruskalRed(e.target.value)}\r\n              step = \"1\"\r\n              disabled = {this.state.running}>\r\n              </input>\r\n              <label> Red: {this.app.state.settings.kruskal.red}</label>\r\n            </div>\r\n            <div className = \"sliders\">\r\n              <input className = \"slider\"\r\n              type = \"range\"\r\n              min = \"0\"\r\n              max = \"255\"\r\n              value = {this.app.state.settings.kruskal.green}\r\n              onChange = {(e) => this.setKruskalGreen(e.target.value)}\r\n              step = \"1\"\r\n              disabled = {this.state.running}>\r\n              </input>\r\n              <label> Green: {this.app.state.settings.kruskal.green} </label>\r\n            </div>\r\n            <div className = \"sliders\">\r\n              <input className = \"slider\"\r\n              type = \"range\"\r\n              min = \"0\"\r\n              max = \"255\"\r\n              value = {this.app.state.settings.kruskal.blue}\r\n              onChange = {(e) => this.setKruskalBlue(e.target.value)}\r\n              step = \"1\"\r\n              disabled = {this.state.running}>\r\n              </input>\r\n              <label> Blue: {this.app.state.settings.kruskal.blue} </label>\r\n            </div>\r\n            </div>\r\n            : <></>}\r\n\r\n            {(this.state.filtering === true && \"prim's algorithm\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n           ?<div> <p> Prim's Algorithm </p>\r\n           <canvas\r\n           height = {this.state.height}\r\n           width = {this.state.width}\r\n           style = {{backgroundColor: rgb_to_str([this.state.primred, this.state.primgreen,\r\n                     this.state.primblue])}}\r\n           className = \"colorCanvas\"></canvas>\r\n           <div className = \"sliders\">\r\n             <input className = \"slider\"\r\n             type = \"range\"\r\n             min = \"0\"\r\n             max = \"255\"\r\n             value = {this.app.state.settings.prim.red}\r\n             onChange = {(e) => this.setPrimRed(e.target.value)}\r\n             step = \"1\"\r\n             disabled = {this.state.running}>\r\n             </input>\r\n             <label> Red: {this.app.state.settings.prim.red} </label>\r\n           </div>\r\n           <div className = \"sliders\">\r\n             <input className = \"slider\"\r\n             type = \"range\"\r\n             min = \"0\"\r\n             max = \"255\"\r\n             onChange = {(e) => this.setPrimGreen(e.target.value)}\r\n             value = {this.app.state.settings.prim.green}\r\n             step = \"1\"\r\n             disabled = {this.state.running}>\r\n             </input>\r\n             <label> Green: {this.app.state.settings.prim.green} </label>\r\n           </div>\r\n           <div className = \"sliders\">\r\n             <input className = \"slider\"\r\n             type = \"range\"\r\n             min = \"0\"\r\n             max = \"255\"\r\n             onChange = {(e) => this.setPrimBlue(e.target.value)}\r\n             value = {this.app.state.settings.prim.blue}\r\n             step = \"1\"\r\n             disabled = {this.state.running}>\r\n             </input>\r\n             <label> Blue: {this.app.state.settings.prim.blue} </label>\r\n           </div>\r\n           </div>\r\n           : <></>}\r\n\r\n           {(this.state.filtering === true && \"2-opt\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n          ?<div>  <p> 2-Opt </p>\r\n          <canvas\r\n          height = {this.state.height}\r\n          width = {this.state.width}\r\n          style = {{backgroundColor: rgb_to_str([this.state.opt2red, this.state.opt2green,\r\n                    this.state.opt2blue])}}\r\n          className = \"colorCanvas\"></canvas>\r\n          <div className = \"sliders\">\r\n            <input className = \"slider\"\r\n            type = \"range\"\r\n            min = \"5\"\r\n            max = \"60\"\r\n            value = {this.app.state.settings.opt2.timeout}\r\n            onChange = {(e) => this.setOpt2Timeout(e.target.value) }\r\n            step = \"1\"\r\n            disabled = {this.state.running}>\r\n            </input>\r\n            <label> Timeout : {this.app.state.settings.opt2.timeout}</label>\r\n          </div>\r\n          <div className = \"sliders\">\r\n            <input className = \"slider\"\r\n            type = \"range\"\r\n            min = \"0\"\r\n            max = \"255\"\r\n            value = {this.app.state.settings.opt2.red}\r\n            onChange = {(e) => this.setOpt2Red(e.target.value) }\r\n            step = \"1\"\r\n            disabled = {this.state.running}>\r\n            </input>\r\n            <label> Red: {this.app.state.settings.opt2.red} </label>\r\n          </div>\r\n          <div className = \"sliders\">\r\n            <input className = \"slider\"\r\n            type = \"range\"\r\n            min = \"0\"\r\n            max = \"255\"\r\n            value = {this.app.state.settings.opt2.green}\r\n            onChange = {(e) => this.setOpt2Green(e.target.value) }\r\n            step = \"1\"\r\n            disabled = {this.state.running}>\r\n            </input>\r\n            <label> Green: {this.app.state.settings.opt2.green}</label>\r\n          </div>\r\n          <div className = \"sliders\">\r\n            <input className = \"slider\"\r\n            type = \"range\"\r\n            min = \"0\"\r\n            max = \"255\"\r\n            value = {this.app.state.settings.opt2.blue}\r\n            onChange = {(e) => this.setOpt2Blue(e.target.value) }\r\n            step = \"1\"\r\n            disabled = {this.state.running}>\r\n            </input>\r\n            <label> Blue: {this.app.state.settings.opt2.blue} </label>\r\n          </div>\r\n          </div>\r\n          : <></>}\r\n\r\n          {(this.state.filtering === true && \"3-opt\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n         ?<div> <p> 3-Opt </p>\r\n         <canvas\r\n         height = {this.state.height}\r\n         width = {this.state.width}\r\n         style = {{backgroundColor: rgb_to_str([this.state.opt3red, this.state.opt3green,\r\n                   this.state.opt3blue])}}\r\n         className = \"colorCanvas\"></canvas>\r\n         <div className = \"sliders\">\r\n           <input className = \"slider\"\r\n           type = \"range\"\r\n           min = \"5\"\r\n           max = \"60\"\r\n           value = {this.app.state.settings.opt3.timeout}\r\n           onChange = {(e) => this.setOpt3Timeout(e.target.value)}\r\n           step = \"1\"\r\n           disabled = {this.state.running}>\r\n           </input>\r\n           <label> Timeout : {this.app.state.settings.opt3.timeout}</label>\r\n         </div>\r\n         <div className = \"sliders\">\r\n           <input className = \"slider\"\r\n           type = \"range\"\r\n           min = \"0\"\r\n           max = \"255\"\r\n           value = {this.app.state.settings.opt3.red}\r\n           onChange = {(e) => this.setOpt3Red(e.target.value)}\r\n           step = \"1\"\r\n           disabled = {this.state.running}>\r\n           </input>\r\n           <label> Red: {this.app.state.settings.opt3.red} </label>\r\n         </div>\r\n         <div className = \"sliders\">\r\n           <input className = \"slider\"\r\n           type = \"range\"\r\n           min = \"0\"\r\n           max = \"255\"\r\n           value = {this.app.state.settings.opt3.green}\r\n           onChange = {(e) => this.setOpt3Green(e.target.value)}\r\n           step = \"1\"\r\n           disabled = {this.state.running}>\r\n           </input>\r\n           <label> Green: {this.app.state.settings.opt3.green} </label>\r\n         </div>\r\n         <div className = \"sliders\">\r\n           <input className = \"slider\"\r\n           type = \"range\"\r\n           min = \"0\"\r\n           max = \"255\"\r\n           value = {this.app.state.settings.opt3.blue}\r\n           onChange = {(e) => this.setOpt3Blue(e.target.value)}\r\n           step = \"1\"\r\n           disabled = {this.state.running}>\r\n           </input>\r\n           <label> Blue: {this.app.state.settings.opt3.blue} </label>\r\n         </div>\r\n         </div>\r\n         : <></>}\r\n\r\n         {(this.state.filtering === true && \"2-opt simulated annealing\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n        ?<div> <p> 2-Opt Simulated Annealing </p>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"5\"\r\n          max = \"60\"\r\n          step = \"1\"\r\n          value = {this.app.state.settings.opt2annealing.timeout}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Timeout : {this.app.state.settings.opt2annealing.timeout}  </label>\r\n        </div>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"1\"\r\n          max = \"100\"\r\n          step = \"1\"\r\n          value = {this.app.state.settings.opt2annealing.temperature}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Initial Temperature: {this.app.state.settings.opt2annealing.temperature}</label>\r\n        </div>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"0.0001\"\r\n          max = \"0.1\"\r\n          step = \"0.0001\"\r\n          value = {this.app.state.settings.opt2annealing.acceptance}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Acceptance: {this.app.state.settings.opt2annealing.acceptance}</label>\r\n        </div>\r\n        <canvas\r\n        height = {this.state.height}\r\n        width = {this.state.width}\r\n        style = {{backgroundColor: rgb_to_str([this.state.opt2annealingred, this.state.opt2annealinggreen,\r\n                  this.state.opt2annealingblue])}}\r\n        className = \"colorCanvas\"></canvas>\r\n        <p style={{fontSize: 12}}> High Temperature Color </p>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"0\"\r\n          max = \"255\"\r\n          step = \"1\"\r\n          value =  {this.app.state.settings.opt2annealing.startColor[0]}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Red: {this.app.state.settings.opt2annealing.startColor[0]}</label>\r\n        </div>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"0\"\r\n          max = \"255\"\r\n          step = \"1\"\r\n          value =  {this.app.state.settings.opt2annealing.startColor[1]}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Green: {this.app.state.settings.opt2annealing.startColor[1]}</label>\r\n        </div>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"0\"\r\n          max = \"255\"\r\n          step = \"1\"\r\n          value =  {this.app.state.settings.opt2annealing.startColor[2]}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Blue: {this.app.state.settings.opt2annealing.startColor[2]}</label>\r\n        </div>\r\n        <canvas\r\n        height = {this.state.height}\r\n        width = {this.state.width}\r\n        style = {{backgroundColor: rgb_to_str([this.state.opt2annealingredEnd, this.state.opt2annealinggreenEnd,\r\n                  this.state.opt2annealingblueEnd])}}\r\n        className = \"colorCanvas\"></canvas>\r\n        <p style={{fontSize: 12}}> Low Temperature Color</p>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"0\"\r\n          max = \"255\"\r\n          step = \"1\"\r\n          value =  {this.app.state.settings.opt2annealing.endColor[0]}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Red: {this.app.state.settings.opt2annealing.endColor[0]}</label>\r\n        </div>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"0\"\r\n          max = \"255\"\r\n          step = \"1\"\r\n          value =  {this.app.state.settings.opt2annealing.endColor[1]}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Green: {this.app.state.settings.opt2annealing.endColor[1]}</label>\r\n        </div>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"0\"\r\n          max = \"255\"\r\n          step = \"1\"\r\n          value =  {this.app.state.settings.opt2annealing.endColor[2]}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Blue: {this.app.state.settings.opt2annealing.endColor[2]}</label>\r\n        </div>\r\n        </div>\r\n        : <></>}\r\n\r\n\r\n\r\n        {(this.state.filtering === true && \"greedy coloring\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n       ?<div> <p> Greedy Coloring </p>\r\n       <canvas\r\n       height = {this.state.height}\r\n       width = {this.state.width}\r\n       style = {{backgroundColor: rgb_to_str([this.state.greedyStartRed, this.state.greedyStartGreen,\r\n                 this.state.greedyStartBlue])}}\r\n       className = \"colorCanvas\"></canvas>\r\n       <div className = \"sliders\">\r\n         <input className = \"slider\"\r\n         type = \"range\"\r\n         min = \"0\"\r\n         max = \"255\"\r\n         value = {this.app.state.settings.greedy.startRed}\r\n         onChange = {(e) => this.setGreedyStartRed(e.target.value)}\r\n         step = \"1\"\r\n         disabled = {this.state.running}>\r\n         </input>\r\n         <label> Start Red: {this.app.state.settings.greedy.startRed}</label>\r\n       </div>\r\n       <div className = \"sliders\">\r\n         <input className = \"slider\"\r\n         type = \"range\"\r\n         min = \"0\"\r\n         max = \"255\"\r\n         value = {this.app.state.settings.greedy.startGreen}\r\n         onChange = {(e) => this.setGreedyStartGreen(e.target.value)}\r\n         step = \"1\"\r\n         disabled = {this.state.running}>\r\n         </input>\r\n         <label> Start Green: {this.app.state.settings.greedy.startGreen}</label>\r\n       </div>\r\n       <div className = \"sliders\">\r\n         <input className = \"slider\"\r\n         type = \"range\"\r\n         min = \"0\"\r\n         max = \"255\"\r\n         value = {this.app.state.settings.greedy.startBlue}\r\n         onChange = {(e) => this.setGreedyStartBlue(e.target.value)}\r\n         step = \"1\"\r\n         disabled = {this.state.running}>\r\n         </input>\r\n         <label> Start Blue: {this.app.state.settings.greedy.startBlue} </label>\r\n       </div>\r\n       <canvas\r\n       height = {this.state.height}\r\n       width = {this.state.width}\r\n       style = {{backgroundColor: rgb_to_str([this.state.greedyEndRed, this.state.greedyEndGreen,\r\n                 this.state.greedyEndBlue])}}\r\n       className = \"colorCanvas\"></canvas>\r\n       <div className = \"sliders\">\r\n         <input className = \"slider\"\r\n         type = \"range\"\r\n         min = \"0\"\r\n         max = \"255\"\r\n         value = {this.app.state.settings.greedy.endRed}\r\n         onChange = {(e) => this.setGreedyEndRed(e.target.value)}\r\n         step = \"1\"\r\n         disabled = {this.state.running}>\r\n         </input>\r\n         <label> End Red: {this.app.state.settings.greedy.endRed} </label>\r\n       </div>\r\n       <div className = \"sliders\">\r\n         <input className = \"slider\"\r\n         type = \"range\"\r\n         min = \"0\"\r\n         max = \"255\"\r\n         value = {this.app.state.settings.greedy.endGreen}\r\n         onChange = {(e) => this.setGreedyEndGreen(e.target.value)}\r\n         step = \"1\"\r\n         disabled = {this.state.running}>\r\n         </input>\r\n         <label> End Green: {this.app.state.settings.greedy.endGreen}</label>\r\n       </div>\r\n       <div className = \"sliders\">\r\n         <input className = \"slider\"\r\n         type = \"range\"\r\n         min = \"0\"\r\n         max = \"255\"\r\n         value = {this.app.state.settings.greedy.endBlue}\r\n         onChange = {(e) => this.setGreedyEndBlue(e.target.value)}\r\n         step = \"1\"\r\n         disabled = {this.state.running}>\r\n         </input>\r\n         <label> End Blue: {this.app.state.settings.greedy.endBlue}</label>\r\n       </div>\r\n       </div>\r\n       : <></>}\r\n        </div>\r\n\r\n  }\r\n}\r\n\r\nexport default AlgorithmAttributes;\r\n\r\n\r\nasync function waitSetSettings(app, that){\r\n  await app.setState({settings: {\r\n    spring: {ka: that.state.cspring, kr: that.state.crep, eps: that.state.eps,\r\n            delta: that.state.delta, areascaling: that.state.cPercentage,\r\n            distanceType: that.state.distanceType},\r\n    fruchterman: {cTemp: that.state.cTemp,\r\n            tempHeuristic: that.state.tempHeuristic, eps: that.state.eps},\r\n    forceatlas2: {fr: that.state.kr, gravity: that.state.gravity,\r\n                  gravityType: that.state.gravityType, kg: that.state.kg,\r\n                  tau: that.state.tau, ksmax: that.state.ksmax,\r\n                  overlappingNodes: that.state.overlappingNodes},\r\n    forceatlaslinlog: {fr: that.state.kr, gravity: that.state.gravity,\r\n                  gravityType: that.state.gravityType, kg: that.state.kg,\r\n                  tau: that.state.tau, ksmax: that.state.ksmax,\r\n                  overlappingNodes: that.state.overlappingNodes},\r\n    kruskal: {red: that.state.kruskalred,\r\n              green: that.state.kruskalgreen,\r\n              blue: that.state.kruskalblue},\r\n    prim: {red: that.state.primred,\r\n          green: that.state.primgreen,\r\n          blue: that.state.primblue},\r\n    opt2: {timeout: that.state.opt2timeout,\r\n          red: that.state.opt2red,\r\n          green: that.state.opt2green,\r\n          blue: that.state.opt2blue},\r\n    opt3: {timeout: that.state.opt3timeout,\r\n          red: that.state.opt3red,\r\n          green: that.state.opt3green,\r\n          blue: that.state.opt3blue},\r\n    greedy:{startRed: that.state.greedyStartRed,\r\n            startGreen: that.state.greedyStartGreen,\r\n            startBlue: that.state.greedyStartBlue,\r\n            endRed: that.state.greedyEndRed,\r\n            endGreen: that.state.greedyEndGreen,\r\n            endBlue: that.state.greedyEndBlue}\r\n    }});\r\n  // console.log(app.state.settings);\r\n}\r\n\r\nasync function waitSetKruskalRed(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({kruskalred: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetKruskalGreen(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({kruskalgreen: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetKruskalBlue(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({kruskalblue: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetPrimRed(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({primred: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetPrimGreen(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({primgreen: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetPrimBlue(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({primblue: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetOpt2Timeout(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({opt2timeout: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetOpt2Red(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({opt2red: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetOpt2Green(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({opt2green: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetOpt2Blue(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({opt2blue: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetOpt3Timeout(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({opt3timeout: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetOpt3Red(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({opt3red: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetOpt3Green(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({opt3green: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetOpt3Blue(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({opt3blue: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetGreedyStartRed(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({greedyStartRed: value});\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetGreedyStartGreen(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({greedyStartGreen: value});\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetGreedyStartBlue(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({greedyStartBlue: value});\r\n  waitSetSettings(that.app, that);\r\n}\r\nasync function waitSetGreedyEndRed(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({greedyEndRed: value});\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetGreedyEndGreen(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({greedyEndGreen: value});\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetGreedyEndBlue(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({greedyEndBlue: value});\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitsetCREP(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({crep:value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetCSPRING(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({cspring:value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetDelta(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({delta:value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetEpsilon(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({eps:value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetC(v, that){\r\n  const value = parseFloat(v)\r\n  await that.setState({cPercentage: value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetCTEMP(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({cTemp:value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetKr(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({kr: value})\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetGravity(v, that){\r\n  const value = parseInt(v);\r\n  if(value === 0) await that.setState({gravity:false});\r\n  if(value === 1) await that.setState({gravity: true});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetGravityType(v, that){\r\n  const value = parseInt(v);\r\n  if(value === 0) await that.setState({gravityType: \"Normal\"});\r\n  if(value === 1) await that.setState({gravityType: \"Strong\"});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetGravityStrength(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({kg: value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetTau(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({tau:value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetKsmax(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({ksmax:value})\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetOverlappingNodes(v, that){\r\n  const value = parseInt(v);\r\n  if(value === 0) await that.setState({overlappingNodes:true});\r\n  if(value === 1) await that.setState({overlappingNodes: false})\r\n  waitSetSettings(that.app, that)\r\n}\r\nasync function waitsetTempHeuristic(v, that){\r\n  const value = parseInt(v);\r\n  if(value===1) await that.setState({tempHeuristic: \"Logarithmic\"});\r\n  if(value===2) await that.setState({tempHeuristic: \"Linear\"});\r\n  if(value===3) await that.setState({tempHeuristic: \"Directional\"});\r\n  if(value===4) await that.setState({tempHeuristic: \"None\"});\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitsetCollision(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({collision: value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetDistanceType(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({distanceType : value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\" + color[0] + \",\" + color[1] + \",\" + color[2] + \")\";\r\n}\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport AlgorithmAttributes from\"./AlgorithmAttributes\";\r\n\r\nimport \"./NetworkAlgorithmSettings.css\"\r\n\r\nclass NetworkAlgorithmSettings extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n    }\r\n    this.app = this.props.app;\r\n    this.attributes = React.createRef();\r\n  }\r\n\r\n  setOpen(v){\r\n    this.setState({open:v});\r\n  }\r\n\r\n\r\n  render(){\r\n    return <div>\r\n              <Modal\r\n              isOpen = {this.state.open}\r\n              onRequestClose = {() => this.setOpen(false)}\r\n              className = \"algorithmsettings\"\r\n              overlayClassName = \"algorithmsettingsoverlay\">\r\n                <AlgorithmAttributes\r\n                 filtering = {this.app.state.filtering}\r\n                 filter = {this.app.state.filter}\r\n                 settings = {this}\r\n                 ref= {this.attributes}\r\n                 app = {this.app}/>\r\n              </Modal>\r\n           </div>\r\n  }\r\n}\r\n\r\nexport default NetworkAlgorithmSettings;\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"./Upload.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass UploadWindow extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      filename: \"\",\r\n    };\r\n  }\r\n\r\n\r\n  setOpen(v){\r\n    this.setState({open:v});\r\n  }\r\n\r\n  checkFile(e){\r\n    console.log(e);\r\n    e.preventDefault();\r\n  }\r\n\r\n  setFilename(e){\r\n    this.setState({filename: e.target.files[0].name});\r\n  }\r\n\r\n  render(){\r\n    return <div>\r\n              <Modal isOpen = {this.state.open}\r\n                onRequestClose = {() => this.setOpen(false)}\r\n                className = \"upload\"\r\n                overlayClassName = \"uploadoverlay\"\r\n                >\r\n                  <p> Currently Supported Formats: .csv files</p>\r\n                  <p> First Vertices are specified in rows, with their properties</p>\r\n                  <p> Then following a line break, Edges are specified in rows, with\r\n                      their corresponding properties</p>\r\n                  <div className = \"formBlock\">\r\n                    <form onSubmit = {(e) => this.checkFile(e)}>\r\n                      <input\r\n                       onChange = {(e) => this.setFilename(e)}\r\n                       type = \"file\"\r\n                       id = \"myFile\"\r\n                       name = \"filename\"/>\r\n                      <input type = \"submit\"/>\r\n                    </form>\r\n                  </div>\r\n              </Modal>\r\n          </div>\r\n  }\r\n}\r\n\r\nexport default UploadWindow;\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"./ConfirmationWindow.css\"\r\nclass ConfirmationWindow extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      confirm: false,\r\n    };\r\n    this.parent = this.props.parent;\r\n    this.msg = this.props.msg\r\n\r\n  }\r\n\r\n  async setConfirm(v){\r\n    await this.setState({confirm: v});\r\n    this.setState({open:false});\r\n    if(v === true) this.props.trigger(this.parent);\r\n  }\r\n  setOpen(v){\r\n    this.setState({open:v})\r\n  }\r\n\r\n  render(){\r\n\r\n    return <div>\r\n            <Modal isOpen = {this.state.open === true}\r\n            onRequestClose = {() => this.setOpen(false)}\r\n            overlayClassName = \"confirmationWindowOverlay\"\r\n            className = \"confirmationWindow\">\r\n              <p> {this.msg} </p>\r\n              <p> Are you sure you wish to proceed? </p>\r\n              <button className = \"confirmNo\"\r\n              onClick = {() => this.setConfirm(false)}> No </button>\r\n              <button className = \"confirmYes\"\r\n               onClick = {() => this.setConfirm(true)}> Yes </button>\r\n            </Modal>\r\n           </div>\r\n  }\r\n}\r\n\r\nexport default ConfirmationWindow;\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport GeneralNetworkSettings from \"./GeneralNetworkSettings\";\r\nimport NetworkAlgorithmSettings from \"./NetworkAlgorithmSettings\";\r\nimport UploadWindow from \"./Upload/UploadWindow\";\r\nimport ConfirmationWindow from \"../ConfirmationWindow\";\r\n\r\nimport \"./NetworkSideDrawer.css\";\r\n\r\nModal.setAppElement(\"#root\")\r\n\r\nexport const DrawerToggleButton = props => (\r\n  <button onClick = {props.openSettings} className = \"toggle_button\"\r\n  style = {{height: props.height/20, width: props.height/20, backgroundSize: 'cover'}}>\r\n  </button>\r\n)\r\n\r\n\r\nclass NetworkSideDrawer extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      open:false,\r\n      dimension: 2,\r\n    }\r\n    this.tutorial = React.createRef();\r\n    this.generalsettings = React.createRef();\r\n    this.algorithmsettings = React.createRef();\r\n    this.uploadwindow = React.createRef();\r\n    this.confirmDimensionWindow = React.createRef();\r\n    this.confirmCustomWindow = React.createRef();\r\n    this.app = this.props.app;\r\n\r\n  }\r\n\r\n  setOpen(v){\r\n    this.setState({open:v});\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    Modal.setAppElement(document.getElementById('BC'));\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    return <div>\r\n\r\n            <Modal isOpen = {this.state.open}\r\n            onRequestClose = {() => this.setOpen(false)}\r\n            className = \"sidedrawer\"\r\n            overlayClassName = \"sidedraweroverlay\"\r\n            style = {{overlay:{top:this.props.height*1/20}}}\r\n            >\r\n              <ConfirmationWindow\r\n              ref = {this.confirmDimensionWindow}\r\n              parent = {this}\r\n              trigger = {switchDimension}\r\n              msg = {\"Any unsaved changes will be lost.\"}/>\r\n              <ConfirmationWindow\r\n              ref = {this.confirmCustomWindow}\r\n              parent = {this}\r\n              trigger = {setCustomNetwork}\r\n              msg = {\"Any unsaved changes will be lost\"}\r\n              />\r\n              <GeneralNetworkSettings ref = {this.generalsettings} app = {this.app}/>\r\n              <NetworkAlgorithmSettings ref = {this.algorithmsettings} app = {this.app}/>\r\n              <UploadWindow ref = {this.uploadwindow}></UploadWindow>\r\n              <div className = \"settings\">\r\n                <br></br>\r\n                <a target = \"_blank\" href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization\"> Tutorial </a>\r\n                <br></br>\r\n                <button onClick= {() => this.confirmDimensionWindow.current.setOpen(true)}>\r\n                {this.app.state.dimension === 3 || this.app.state.dimension === \"Custom\"? 2:3}D Networks\r\n                </button>\r\n                <br></br>\r\n                <button onClick = {() => this.generalsettings.current.setOpen(true)}> General Settings </button>\r\n                <br></br>\r\n                <button onClick = {() => this.algorithmsettings.current.setOpen(true)}> Algorithm Settings </button>\r\n                <br></br>\r\n                <button onClick = {() => this.uploadwindow.current.setOpen(true)}> Upload Your Data</button>\r\n                <br></br>\r\n                <button onClick = {() => this.confirmCustomWindow.current.setOpen(true)}> Create Custom Network </button>\r\n                <br></br>\r\n                <a href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization#network-algorithm-visualization\" target= \"_blank\" > Documentation & Code </a>\r\n                <br></br>\r\n                <a href =\"https://github.com/alexandreLamarre/Network-Algorithm-Visualization/issues\" target =\"_blank\"> Report a Bug </a>\r\n                <br></br>\r\n              </div>\r\n            </Modal>\r\n          </div>\r\n  }\r\n}\r\n\r\nexport default NetworkSideDrawer;\r\n\r\nasync function switchDimension(that){\r\n  if(that.app.state.dimension === 2) {\r\n    await that.app.setState({dimension: 3, running: false});\r\n  }\r\n  else if(that.app.state.dimension == 3 || that.app.state.dimension === \"Custom\") {\r\n    await that.app.setState({dimension: 2, running: false});\r\n  }\r\n}\r\n\r\nasync function setCustomNetwork(that){\r\n  await that.app.setState({dimension: \"Custom\", running:false});\r\n}\r\n","import React from \"react\";\r\nimport {DrawerToggleButton} from \"./NetworkSideDrawer\";\r\nimport NetworkSideDrawer from \"./NetworkSideDrawer\";\r\n\r\n\r\nimport \"./NetworkNavBar.css\";\r\n\r\nclass NetworkNavBar extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.settings = React.createRef();\r\n    this.app = this.props.app;\r\n  }\r\n\r\n  openSettings(){\r\n    const open = this.settings.current.state.open;\r\n    this.settings.current.setOpen(!open);\r\n  }\r\n\r\n  render(){\r\n    return <div className = \"gonavbar\">\r\n              <NetworkSideDrawer height = {this.props.height}\r\n              ref = {this.settings} app = {this.app}></NetworkSideDrawer>\r\n              <header className = \"toolbar\" style = {{height: this.props.height*1/20}}>\r\n                <nav className =\"toolbar__navigation\">\r\n                  <div><DrawerToggleButton openSettings = {() => this.openSettings()}\r\n                  height = {this.props.height}></DrawerToggleButton></div>\r\n                  <div className = \"toolbar__logo\"\r\n                  style = {{fontSize: this.props.height/40, marginTop: this.props.height/240}} >\r\n                  <a > Network Analysis {this.app.state.dimension}{this.app.state.dimension === \"Custom\"?\"\":\"D\"}\r\n                  </a></div>\r\n                  <div className =\"toolbar__search\"\r\n                  style = {{fontSize: this.props.height/40, marginTop: this.props.height/240}}>\r\n                      <form>\r\n                      <label> Search :\r\n                      </label>\r\n                      <input minLength = \"2\" list = \"search_values\"/>\r\n                      <datalist id = \"search_values\">\r\n                        <option value = \"Basic Spring Embedding\"/>\r\n                        <option value = \"Fruchterman-Reingold\"/>\r\n                        <option value = \"Force Atlas 2\"/>\r\n                        <option value = \"Force Atlas 2 (LinLog)\"/>\r\n                        <option value = \"Hall's Algorithm\"/>\r\n                        <option value = \"Generalized Eigenvector Spectral Drawing\"/>\r\n                        <option value = \"Kruskal's Algorithm\"/>\r\n                        <option value = \"Prim's Algorithm\"/>\r\n                        <option value = \"2-opt\"/>\r\n                        <option value = \"3-opt\"/>\r\n                        <option value = \"2-opt simulated annealing\"/>\r\n                      </datalist>\r\n                      </form>\r\n                  </div>\r\n                </nav>\r\n              </header>\r\n            </div>\r\n  }\r\n}\r\n\r\nexport default NetworkNavBar;\r\n","import Vertex from \"../datatypes/Vertex\";\r\nimport Edge from \"../datatypes/Edge\";\r\n\r\nexport function createRandomNetwork3D(maxWidth, maxHeight, maxDepth, numV, numE, conn, randomType, startColors, endColors, resize, minsize, maxsize){\r\n  let connected = conn;\r\n  let seed = randomType;\r\n  const maxDegree = numV-1;\r\n  let maxEdges = Math.floor((maxDegree*numV)/2)\r\n  const maxEdgesValue = maxEdges;\r\n  let vertices = [];\r\n  let available_vertices = [];\r\n  const center = [maxWidth/2, maxHeight/2, maxDepth/2];\r\n  const radius = (maxHeight/2)*0.90;\r\n\r\n  //create random points on canvas\r\n  for(let i = 0; i < numV; i ++){\r\n    var point = [0,0]\r\n    if(seed === \"random\" || seed === \"cycle\") point = createRandomPos(maxWidth, maxHeight, maxDepth);\r\n    if(seed === \"randomcircle\") point = createRandomPosSphere(center, radius);\r\n    const v = new Vertex(point[0], point[1], point[2]);\r\n    v.size = 5; //default for 3d because it looks better, while 3 looks better for 2D.\r\n\r\n    vertices.push(v);\r\n    available_vertices.push(i);\r\n  }\r\n  let edges = [];\r\n  let already_connected = new Map();\r\n  if(!(seed === \"cycle\")){\r\n    let remainingEdges = numE;\r\n    if(connected === \"True\"){\r\n      let unvisited = [];\r\n      for(var i = 0; i < numV; i++){\r\n        unvisited.push(i);\r\n      }\r\n      let visited = [];\r\n      var vIndex1 = pickRandomVertex(unvisited);\r\n      var v1 = unvisited[vIndex1];\r\n      visited.push(v1);\r\n      unvisited = removeFromArray(unvisited, vIndex1);\r\n\r\n      var visited_num = 1;\r\n      while(visited_num < numV){\r\n        var vIndex2 = pickRandomVertex(unvisited)\r\n        var v2 = unvisited[vIndex2];\r\n        visited.push(v2); //add to visited\r\n        const e = new Edge(v1,v2);\r\n        e.setColor(\"rgb(211,211,211)\");\r\n        edges.push(e);\r\n        vertices[v1].increment_degree();\r\n        vertices[v2].increment_degree();\r\n        remainingEdges --;\r\n        maxEdges --;\r\n        const indexTo = v1 + 1000* v2; // works as long as numV < 1000\r\n        const indexFrom = v2+ 1000*v1;\r\n        already_connected.set(indexTo, true);\r\n        already_connected.set(indexFrom, true);\r\n        //remove from unvisited\r\n        unvisited = removeFromArray(unvisited, vIndex2);\r\n        //reset v1\r\n        vIndex1 = pickRandomVertex(visited);\r\n        v1 = visited[vIndex1];\r\n        visited_num ++;\r\n      }\r\n    }\r\n    while(remainingEdges > 0 && maxEdges > 0 && available_vertices.length > 1){\r\n      const [random1, random2] = connectRandomVertices(available_vertices.slice());\r\n      if(random1 === random2) console.log(\"unexpected\");\r\n      if(random1 === undefined) console.log(\"unexpected undefiend 1\");\r\n      if(random2 === undefined) console.log(\"unexpected undefined 2\");\r\n      // console.log(\"rem:\", remainingEdges, \"max\", maxEdges);\r\n      const indexTo = random1+1000*random2; // as long as numV < 1000 this works\r\n      const indexFrom = random2+1000*random1;\r\n      if(already_connected.get(indexTo) === undefined ){\r\n        const e = new Edge(random1, random2);\r\n        e.setColor(\"rgb(211,211,211)\");\r\n        edges.push(e);\r\n        vertices[random1].increment_degree();\r\n        vertices[random2].increment_degree();\r\n        if(vertices[random1].degree > maxDegree) available_vertices.splice(random1, 1);\r\n        if(vertices[random2].degree > maxDegree) available_vertices.splice(random2, 1);\r\n        already_connected.set(indexTo, true);\r\n        already_connected.set(indexFrom, true);\r\n        remainingEdges --;\r\n        maxEdges --;\r\n        }\r\n      }\r\n  }\r\n  else{\r\n    //seed = cycle\r\n    var [path,root] = initial_random_cycle(vertices);\r\n    for(let i = 0; i < path.length-1; i++){\r\n      edges.push(new Edge(path[i], path[i+1]));\r\n      edges[i].setColor(\"rgb(211,211,211)\");\r\n    }\r\n    for(let i = 0; i < vertices.length; i++){\r\n      vertices[i].degree = 2;\r\n    }\r\n  }\r\n\r\n  var max_degree = find_max_degree(vertices);\r\n  // console.log(\"max_degree\", max_degree);\r\n  var shouldRecolor = !(sameColor(startColors, endColors));\r\n  // console.log(shouldRecolor);\r\n  var colorGradient;\r\n  if(shouldRecolor === true) var colorGradient = createColorGradient(startColors, endColors, max_degree);\r\n  // console.log(colorGradient);\r\n  if(resize === true || shouldRecolor === true){\r\n  for(let i = 0; i < vertices.length; i++){\r\n      if(resize === true) vertices[i].size = assign_size(vertices[i].degree, max_degree, minsize, maxsize)+2;\r\n      if(shouldRecolor === true) vertices[i].color = assign_color(vertices[i].degree, max_degree, colorGradient);\r\n      // console.log(vertices[i].size)\r\n      // console.log(vertices[i].color);\r\n    }\r\n  }\r\n\r\n  return [vertices,edges];\r\n}\r\n\r\nfunction createRandomPos(maxWidth, maxHeight, maxDepth){\r\n  return [Math.random()*(maxWidth+1-5), Math.random()*(maxHeight+1-5), Math.random()*(maxDepth+1-5)];\r\n}\r\n\r\nfunction createRandomPosSphere(center, radius){\r\n  const randomAngle = Math.random()*(2*Math.PI);\r\n  const z = Math.random()*center[2] - center[2];\r\n  const theta = Math.asin(z/center[2]);\r\n  return [center[0]+ radius*Math.cos(theta)*Math.cos(randomAngle), center[1]+radius*Math.sin(theta)*Math.sin(randomAngle), center[2]+z]\r\n}\r\n\r\nfunction connectRandomVertices(vertices){\r\n  var random1 = vertices[Math.floor(Math.random()*vertices.length)];\r\n  vertices.splice(random1,1);\r\n  var random2 = vertices[Math.floor(Math.random()*vertices.length)];\r\n\r\n  return [random1, random2];\r\n}\r\n\r\nfunction pickRandomVertex(array){\r\n  return Math.floor(Math.random()*array.length)\r\n}\r\n\r\nfunction removeFromArray(array, index){\r\n  return array.slice(0,index).concat(array.slice(index+1))\r\n}\r\n\r\nfunction initial_random_cycle(vertices){\r\n\r\n  var root = 0;\r\n  var initial_path = []\r\n\r\n  //construct adjacency matrix\r\n  const adj = []\r\n  var available_vertices = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    available_vertices.push(i);\r\n\r\n  }\r\n\r\n\r\n  root = pick_random_array(available_vertices);\r\n  available_vertices = remove_from_array(available_vertices, root);\r\n\r\n  initial_path.push(root);\r\n  for(let i = 0; i < vertices.length -1; i++){\r\n    const next_node = pick_random_array(available_vertices);\r\n    available_vertices = remove_from_array(available_vertices, next_node);\r\n    initial_path.push(next_node);\r\n  }\r\n  initial_path.push(root);\r\n\r\n  return [initial_path, root];\r\n}\r\n\r\nfunction remove_from_array(array, item){\r\n  var index  = array.indexOf(item)\r\n  return array.slice(0,index).concat(array.slice(index+1));\r\n}\r\n\r\nfunction pick_random_array(array){\r\n  return array[Math.floor(Math.random()*array.length)];\r\n}\r\n\r\n\r\nfunction find_max_degree(vertices){\r\n  var max_degree = -Infinity;\r\n  for(let i = 0; i < vertices.length; i++){\r\n    max_degree = Math.max(vertices[i].degree, max_degree);\r\n  }\r\n  return max_degree;\r\n}\r\n\r\nfunction assign_size(degree, max_degree, minsize, maxsize){\r\n  //min degree is 1 or 0\r\n  return minsize +(maxsize - minsize)*(degree/max_degree)\r\n}\r\n\r\nfunction assign_color(degree, max_degree, gradient){\r\n\r\n  var selection = gradient[Math.floor((degree/max_degree) * (gradient.length-1))]\r\n\r\n  return rgb_to_str(selection)\r\n}\r\n\r\nfunction createColorGradient(startColor, endColor, maxDegree){\r\n  // console.log(\"inside color gradient\", startColor, endColor, maxDegree);\r\n  var [startHue, startSaturation, startLightness] = rgb_to_hsl(startColor);\r\n  var [endHue, endSaturation, endLightness] = rgb_to_hsl(endColor);\r\n\r\n  // console.log(startHue, startSaturation, startLightness);\r\n  // console.log(endHue, endSaturation, endLightness);\r\n  var incrementHue = (endHue-startHue)/maxDegree;\r\n\r\n  const gradient = [];\r\n\r\n  for(let i = 0; i < maxDegree; i++){\r\n    const newHue = startHue+(incrementHue*i)%360;\r\n    const [red,green,blue] = hsl_to_rgb((startHue+incrementHue*i)%360, startSaturation,\r\n                                            startLightness)\r\n    gradient.push([Math.abs(red%256), Math.abs(green%256), Math.abs(blue%256)]);\r\n    // console.log(gradient[i]);\r\n  }\r\n  return gradient;\r\n}\r\n\r\nfunction rgb_to_hsl(rgbColor){\r\n  var red = rgbColor[0]/255;\r\n  var green = rgbColor[1]/255;\r\n  var blue = rgbColor[2]/255;\r\n  var Cmax = Math.max(...[red,green,blue]);\r\n  var Cmin = Math.min(...[red,green,blue]);\r\n  var delta = Cmax-Cmin;\r\n\r\n\r\n  var hue = calculate_hue(delta, Cmax, red, green, blue)%360;\r\n  var lightness = (Cmax+Cmin)/2;\r\n  var saturation = delta === 0? 0: delta/(1-Math.abs(2*lightness-1));\r\n\r\n  return [hue, saturation, lightness];\r\n}\r\n\r\nfunction hsl_to_rgb(hue, saturation, lightness){\r\n  const C = (1 - Math.abs(2*lightness-1))*saturation\r\n  const X = C * (1 - Math.abs(hue/60)%2 -1);\r\n  const m = lightness - C/2;\r\n  const [R_prime, G_prime, B_prime] = check_degrees(hue, C, X);\r\n  return [((R_prime+m)*255)%256, ((G_prime + m)* 255)%256, ((B_prime+m) * 255)%256];\r\n}\r\n\r\nfunction calculate_hue(delta, Cmax, red, green, blue){\r\n  if(delta === 0) return 0;\r\n  if(Cmax === red) return 60*(((green-blue)/delta)%6);\r\n  if(Cmax === green) return 60*((blue-red)/delta+2);\r\n  if(Cmax === blue) return 60*((red- green)/delta + 4);\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\" + parseInt(color[0]) + \",\" + parseInt(color[1]) + \",\" + parseInt(color[2]) +\")\";\r\n}\r\n\r\n/*\r\nInput is RGB colors in 3d array\r\n*/\r\nfunction sameColor(startColor, endColor){\r\n  if(startColor[0] === endColor[0] && startColor[1] === endColor[1] && startColor[2] === endColor[2]) return true;\r\n  return false;\r\n}\r\n\r\nfunction check_degrees(hue, C, X){\r\n  if((hue >= 0 && hue < 60) || hue == 360) return [C,X,0];\r\n  if(hue >= 60 && hue < 120 ) return [X,C,0];\r\n  if(hue >= 120 && hue < 180 ) return [0, C, X];\r\n  if(hue >= 180 && hue < 240 ) return [0, X, C];\r\n  if(hue >= 240 && hue < 300 ) return [X, 0, C];\r\n  if(hue >= 300 && hue < 360 ) return [C, 0, X];\r\n  return [0,0,0];\r\n}\r\n","import Force from \"../datatypes/Force\";\r\nimport Vertex from \"../datatypes/Vertex\";\r\nvar C= 1;\r\nvar K = 0.01; //OPTIMAL DISTANCE\r\nvar ITERATIONS = 300;\r\n\r\nexport function fruchtermanReingold3D(vertices,edges,graph_distancex, graph_distancey, iterations, settings){\r\n  const W = graph_distancex -6;\r\n  const L = graph_distancey -6;\r\n  const kIter = iterations;\r\n  ITERATIONS = kIter;\r\n  const coolingtype = settings.tempHeuristic;\r\n  const tempHeuristic = settings.tempHeuristic;\r\n  C = 1;\r\n  K = C* Math.sqrt((W)*(L)/(vertices.length));\r\n  const epsilon = settings.eps;\r\n\r\n  // console.log(settings);\r\n\r\n  let t = 1;\r\n  let animations = [];\r\n  let temperature = (1/10)*W * settings.cTemp;\r\n  let temperature_list = [];\r\n  let previousAngle = [];\r\n  let scaling_factor = [];\r\n  if(coolingtype === \"Directional\"){\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      temperature_list.push(temperature);\r\n    }\r\n  }\r\n  const initial_temperature = temperature;\r\n\r\n  while(t<kIter){\r\n    let force_list = [];\r\n    //calculate repulsive forces\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      let f = new Force(0,0,0);\r\n      for(let j = 0; j < vertices.length; j ++){\r\n        if(i!== j){\r\n          const delta = distance(vertices[i], vertices[j]);\r\n          const calcs = frepulse(vertices[i], vertices[j], delta);\r\n          // var delta = distance(vertices[i], vertices[j]);\r\n          // var unitvector = unitVector(vertices[j], vertices[i])\r\n          f.addVector(calcs);\r\n        }\r\n      }\r\n      force_list.push(f);\r\n    }\r\n    //calculate attractive forces\r\n    for(let i = 0; i < edges.length; i++){\r\n      const e = edges[i];\r\n      if(e.start === e.end) console.log(\"well fuck\");\r\n      const delta = distance(vertices[e.start], vertices[e.end]);\r\n      const calcs = fattract(vertices[e.start], vertices[e.end], delta);\r\n      const ncalcs = [-calcs[0], -calcs[1], -calcs[2]]\r\n\r\n      force_list[e.end].addVector(calcs);\r\n      force_list[e.start].addVector(ncalcs);\r\n    }\r\n    //update positions\r\n    const iter_animations = [];\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var minZ = Infinity;\r\n    var maxX = 0;\r\n    var maxY = 0;\r\n    var maxZ = 0;\r\n    var maxForce = 0;\r\n    const origin = new Vertex(0,0,0);\r\n\r\n    for(let i = 0; i < vertices.length; i++){\r\n      const unitvector = unitVector(force_list[i], origin)\r\n      const unitForce = new Force(unitvector[0], unitvector[1], unitVector[2]);\r\n      unitForce.setX(unitForce.x*Math.min(temperature, Math.abs(force_list[i].x)));\r\n      unitForce.setY(unitForce.y*Math.min(temperature, Math.abs(force_list[i].y)));\r\n      unitForce.setZ(unitForce.z*Math.min(temperature, Math.abs(force_list[i].z)));\r\n      vertices[i].add(unitForce);\r\n\r\n      //UPDATE CONVERGENCE\r\n      // if(i == 1){\r\n      //   maxForce = distance([new_x,new_y], old_vertices);\r\n      // }\r\n      // else{\r\n      //   maxForce = distance([new_x,new_y], old_vertices) > maxForce? distance([new_x,new_y], old_vertices): maxForce;\r\n      // }\r\n\r\n\r\n      minX = Math.min(minX, vertices[i].x);\r\n      minY = Math.min(minY, vertices[i].y);\r\n      minZ = Math.min(minZ, vertices[i].z);\r\n      maxX = vertices[i].x > maxX? vertices[i].x:maxX;\r\n      maxY = vertices[i].y > maxY? vertices[i].y:maxY;\r\n      maxZ = vertices[i].z > maxZ? vertices[i].z:maxZ;\r\n\r\n      iter_animations.push([vertices[i].x, vertices[i].y, vertices[i].z])\r\n    }\r\n    //update scaling factors, animations and particle temperature\r\n    scaling_factor.push([-minX,-minY, -minZ, W/(-minX+maxX), L/(-minY+maxY), L/(-minZ+maxZ)]);\r\n    animations.push(iter_animations);\r\n\r\n    if(tempHeuristic !== \"Directional\")temperature = cool(temperature, tempHeuristic, initial_temperature);\r\n    t+= 1;\r\n    // if(maxForce < epsilon) break;\r\n  }\r\n  const iter_animations = [];\r\n\r\n  for(let i = 0; i < animations.length; i++){\r\n    for(let j = 0; j < animations[i].length; j ++){\r\n      animations[i][j][0] = (animations[i][j][0] + scaling_factor[i][0])*scaling_factor[i][3];\r\n      animations[i][j][1] = (animations[i][j][1] + scaling_factor[i][1])*scaling_factor[i][4];\r\n      animations[i][j][2] = (animations[i][j][2] + scaling_factor[i][2]) * scaling_factor[i][5];\r\n    }\r\n  }\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var minZ = Infinity;\r\n  var maxX = 0;\r\n  var maxY = 0;\r\n  var maxZ = 0;\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    minZ = Math.min(vertices[i].z, minZ);\r\n    maxX = vertices[i].x > maxX? vertices[i].x:maxX;\r\n    maxY = vertices[i].y > maxY? vertices[i].y:maxY;\r\n    maxZ = vertices[i].z > maxZ? vertices[i].z:maxZ;\r\n  }\r\n  // maxX = Math.max(W, maxX);\r\n  // maxY = Math.max(L, maxY);\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    vertices[i].x = (vertices[i].x + (-minX)) * W/(-minX+maxX);\r\n    vertices[i].y = (vertices[i].y + (-minY)) * L/(-minY+maxY);\r\n    vertices[i].z = (vertices[i].z + (-minZ))* L/(-minZ+maxZ);\r\n  }\r\n  // console.log(vertices);\r\n  return [vertices, animations];\r\n}\r\n\r\nfunction frepulse(v1,v2, delta){\r\n  const unitvector = unitVector(v1,v2)\r\n\r\n  return [((Math.pow(K,2))/delta)*unitvector[0], ((Math.pow(K,2))/delta)*unitvector[1], ((Math.pow(K,2))/delta)*unitvector[2]];\r\n}\r\n\r\nfunction fattract(v1,v2,delta){\r\n  const unitvector = unitVector(v1,v2);\r\n\r\n  return [unitvector[0]*(Math.pow(delta,2))/K, unitvector[1]*(Math.pow(delta,2))/K, unitvector[2]*(Math.pow(delta,2))/K];\r\n}\r\n\r\nfunction distance(v1,v2){\r\n  // console.log(x,y);\r\n  var distX = Math.pow((v1.x - v2.x), 2);\r\n  var distY = Math.pow((v1.y - v2.y), 2);\r\n  var distZ = Math.pow((v1.z - v2.z), 2);\r\n  if(distX + distY + distZ === 0) distX = 0.00000000000000000001\r\n\r\n  return  Math.sqrt((distX + distY+ distZ));\r\n}\r\n/**\r\n* UnitVector from X to Y\r\n*/\r\nfunction unitVector(v1,v2){\r\n  const new_x = v2.x - v1.x;\r\n  const new_y = v2.y - v1.y;\r\n  const new_z = v2.z - v1.z;\r\n  const dist = distance(v1,v2);\r\n  return [new_x/dist, new_y/dist, new_z/dist];\r\n}\r\n\r\nfunction cool(t, tempHeuristic, initial_temperature){\r\n  if(tempHeuristic === \"Linear\"){\r\n    return t - initial_temperature/ITERATIONS\r\n  }\r\n  if(tempHeuristic === \"Logarithmic\"){\r\n    return 0.90*t\r\n  }\r\n  if(tempHeuristic === \"Directional\"){\r\n    return t\r\n  }\r\n  return t\r\n}\r\n","import Force from \"../datatypes/Force\";\r\n\r\nvar CREP = 20;\r\nvar CSPRING = 20;\r\nvar lx = 0;\r\nvar ly = 0;\r\n/**\r\n* Basic spring embedding algorithm\r\n*/\r\nexport function springEmbedding3D(vertices,edges,graph_distancex, graph_distancey, iterations, settings){\r\n  // relevant constants for spring embedding\r\n  const W = graph_distancex -6;\r\n  const L = graph_distancey -6;\r\n  lx = 1 + ((Math.sqrt(W)/2-1)*settings.areascaling)/100;\r\n  ly = 1 + ((Math.sqrt(L)/2-1)*settings.areascaling)/100;\r\n  const K = iterations;\r\n\r\n  const epsilon = settings.eps;\r\n  const delta = settings.delta;\r\n  CREP = settings.kr;\r\n  CSPRING = settings.ka;\r\n  const distType = settings.distanceType;\r\n\r\n  // console.log(settings);\r\n\r\n  let t = 1;\r\n  let animations = [];\r\n  let scaling_factor = [];\r\n\r\n  while(t<K){\r\n    let force_list = [];\r\n    for(let i =0; i < vertices.length; i++){\r\n      let f = new Force(0,0,0);\r\n      let vert_connected = []; //represents vertices we should not repulse later\r\n      // CALCULATE ATTRACTION FORCES\r\n      for(let j = 0; j < edges.length; j++){\r\n        if(i === edges[j].start && i !== edges[j].end){\r\n          const calcs = fattract(vertices[edges[j].start], vertices[edges[j].end], distType);\r\n          f.addVector(calcs)\r\n          vert_connected.push(edges[j].end);\r\n        }\r\n        if(i === edges[j].end && i !== edges[j].start){\r\n          const calcs = fattract(vertices[edges[j].end], vertices[edges[j].start], distType)\r\n          f.addVector(calcs)\r\n          vert_connected.push(edges[j].start);\r\n        }\r\n      }\r\n      //CALCULATE REPULSIVE FORCES\r\n      for(let j =0; j < vertices.length; j++){\r\n        if(i === j ) continue;\r\n        let connected = false;\r\n        for(let k = 0; k < vert_connected.length; k++){\r\n          if(j === vert_connected[k]) connected = true;\r\n        }\r\n        if(!connected){\r\n          const calcs = frepulse(vertices[i], vertices[j]);\r\n          f.addVector(calcs)\r\n        }\r\n      }\r\n      force_list.push(f)\r\n    }\r\n\r\n\r\n    //UPDATE POSITIONS\r\n    const iteration_animation = [];\r\n    var maxF = 0;\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var minZ = Infinity;\r\n    var maxX = 0;\r\n    var maxY = 0;\r\n    var maxZ = 0;\r\n\r\n    for(let i = 0; i < vertices.length; i++){\r\n      force_list[i].scale(delta);\r\n      vertices[i].add(force_list[i]);\r\n\r\n      //update scaling_factor\r\n      minX =  minX = Math.min(minX, vertices[i].x)\r\n      minY = Math.min(minY, vertices[i].y);\r\n      minZ = Math.min(minZ, vertices[i].z);\r\n      maxX = vertices[i].x > maxX? vertices[i].x:maxX;\r\n      maxY = vertices[i].y > maxY? vertices[i].y:maxY;\r\n      maxZ = vertices[i].z > maxZ? vertices[i].z: maxZ;\r\n      //update animations\r\n      iteration_animation.push([vertices[i].x, vertices[i].y, vertices[i].z]);\r\n    }\r\n    scaling_factor.push([-minX, -minY, -minZ, W/((-minX)+maxX), L/((-minY)+maxY), L/((-minZ)+maxZ)])\r\n\r\n\r\n    animations.push(iteration_animation);\r\n    t += 1\r\n  }\r\n  //scale animations properly without affecting computations\r\n  for(let i = 0; i < animations.length; i++){\r\n    for(let j = 0; j < animations[i].length; j ++){\r\n      animations[i][j][0] = (animations[i][j][0] + scaling_factor[i][0])*scaling_factor[i][3];\r\n      animations[i][j][1] = (animations[i][j][1] + scaling_factor[i][1])*scaling_factor[i][4];\r\n      animations[i][j][2] = (animations[i][j][2] + scaling_factor[i][2])*scaling_factor[i][5];\r\n    }\r\n  }\r\n\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var minZ = Infinity;\r\n  var maxX = 0;\r\n  var maxY = 0;\r\n  var mazZ = 0;\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    minZ = Math.min(vertices[i].z, minZ);\r\n    maxX = vertices[i].x > maxX? vertices[i].x:maxX;\r\n    maxY = vertices[i].x > maxY? vertices[i].y:maxY;\r\n    maxZ = vertices[i].z > maxZ? vertices[i].z: maxZ;\r\n  }\r\n\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    vertices[i].x = (vertices[i].x + -minX) * (W/(-minX+maxX));\r\n    vertices[i].y = (vertices[i].y + -minY) * (L/(-minY+maxY));\r\n    vertices[i].z = (vertices[i].z + -minZ) * (L/(-minZ+maxZ))\r\n  }\r\n  return [vertices, animations];\r\n}\r\n\r\n\r\n\r\n\r\nfunction frepulse(v1,v2){\r\n  var dist = distance(v2,v1);\r\n  const unitV = unitVector(v2,v1);\r\n  return [(CREP*unitV[0])/Math.sqrt(dist) , (CREP*unitV[1])/Math.sqrt(dist),\r\n                      (CREP*unitV[2])/Math.sqrt(dist)];\r\n\r\n}\r\n\r\nfunction fattract(v1,v2, distanceType){\r\n  var dist = distance(v1,v2);\r\n  const unitV = unitVector(v1,v2);\r\n\r\n  return [CSPRING* Math.log(dist/(lx)) * unitV[0],\r\n          CSPRING* Math.log(dist/(ly)) * unitV[1],\r\n          CSPRING* Math.log(dist/(ly)) * unitV[2]];\r\n}\r\n\r\nfunction distance(v1,v2){\r\n  const dist = Math.sqrt(Math.pow((v1.x - v2.x), 2) + Math.pow((v1.y - v2.y), 2) + Math.pow((v1.z-v2.z),2))\r\n  return dist === 0? 0.00000000000000000001: dist;\r\n}\r\n\r\n/**\r\n* UnitVector from X to Y\r\n*/\r\nfunction unitVector(v1,v2){\r\n  const new_x = v2.x - v1.x;\r\n  const new_y = v2.y - v1.y;\r\n  const new_z = v2.z - v1.z;\r\n  const dist = distance(v1,v2);\r\n  return [new_x/dist, new_y/dist, new_z/dist];\r\n}\r\n","import Force from \"../datatypes/Force\"\r\nvar ka = 1;\r\nvar kr = 1;\r\nvar kg = 10;\r\nvar ks = 0.1;\r\nvar tau = 0.1;\r\nvar ksmax = 10;\r\n//============================ REMEMBER TO ADD NO OVERLAP SETTING ==========================\r\nexport function forceAtlasLinLog3D(vertices,edges, graph_distancex, graph_distancey, iterations, settings ){\r\n\r\n  // Algorithm constants\r\n  const kIter = iterations;\r\n  const W = graph_distancex -6;\r\n  const L = graph_distancey -6;\r\n  // console.log(settings);\r\n  kr = settings.fr;\r\n  kg = settings.kg;\r\n  tau = settings.tau;\r\n  ksmax = settings.ksmax;\r\n\r\n\r\n  //set up loop variables\r\n  // console.log(degreeArray);\r\n  let t = 1;\r\n  let animations = [];\r\n  let scaling_factor = [];\r\n  let temperature = (1/10)*W;\r\n\r\n\r\n  let previous_forces = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    previous_forces.push(new Force(0,0,0));\r\n  }\r\n  //calculate forces\r\n  while(t< kIter){\r\n    let force_list = [];\r\n\r\n    //calculate repulsive forces\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      let f = new Force(0,0,0);\r\n      // if(t === 1)console.log(\"vertex\", i)\r\n      for(let j = 0; j < vertices.length; j ++){\r\n        if(i!== j){\r\n\r\n          const repulse_force = frepulse(vertices[i], vertices[j]);\r\n          f.addVector(repulse_force);\r\n        }\r\n      }\r\n      force_list.push(f);\r\n    }\r\n\r\n    //calculate attractive forces\r\n    for(let i = 0; i < edges.length; i ++){\r\n      const e = edges[i];\r\n      const attractive_force = fattract(vertices[e.start], vertices[e.end]);\r\n      const attractive_force_opp = [-attractive_force[0], -attractive_force[1], -attractive_force[2]];\r\n      force_list[e.start].addVector(attractive_force);\r\n      force_list[e.end].addVector(attractive_force_opp);\r\n    }\r\n\r\n\r\n    // calculate forces of gravity\r\n    if(settings.gravity === true){\r\n      // console.log(settings.gravity);\r\n      const center = (t === 1)? [W/2, L/2, L/2]: [(W/2) * 1/(scaling_factor[t-2][3]),(L/2) * 1/(scaling_factor[t-2][4]), (L/2) * 1/(scaling_factor[t-2][5])];\r\n      const center_force = new Force(center[0], center[1], center[2]);\r\n\r\n      for(let i = 0; i < vertices.length; i ++){\r\n        const gravity_force = fgravity(vertices[i], center_force);\r\n        // if(t === 1) console.log(gravity_force);\r\n        force_list[i].addVector(gravity_force)\r\n      }\r\n    }\r\n\r\n    //update positions\r\n    const iter_animations = [];\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var minZ = Infinity;\r\n    var maxX = 0;\r\n    var maxY = 0;\r\n    var maxZ = 0;\r\n    var maxForce = 0;\r\n\r\n    //update global speed\r\n    var sG = 0;\r\n    var traG = 0;\r\n    var swgG = 0;\r\n    for(let i = 0; i < force_list.length; i++){\r\n      const origin = new Force(0,0,0);\r\n      const combined_force  = new Force(force_list[i].x + previous_forces[i].x, force_list[i].y + previous_forces[i].y,\r\n                                        force_list[i].z + previous_forces[i].z);\r\n      const traN = distance(combined_force, origin)/2\r\n      traG += (vertices[i].x+1) * traN;\r\n      const direction_force = new Force(force_list[i].x - previous_forces[i].x, force_list[i].y - previous_forces[i].y,\r\n                                        force_list[i].z -previous_forces[i].z);\r\n      const swgN = distance(direction_force, origin);\r\n      swgG += (vertices[i].degree+1)*swgN;\r\n    }\r\n    sG = tau*(traG/swgG);\r\n    // console.log(\"sG\",sG);\r\n\r\n    var sN = 0;\r\n    for(let i = 0; i < vertices.length; i++){\r\n      //find direction of forces\r\n      const origin = new Force(0,0,0);\r\n      const unitvector = unitVector(origin, force_list[i]);\r\n      //calculate temperatures\r\n      const direction_force = new Force(force_list[i].x - previous_forces[i].x, force_list[i].y - previous_forces[i].y,\r\n                                            force_list[i].z - previous_forces[i].z);\r\n      const swgN = distance(direction_force, origin);\r\n      sN = Math.min((ks*sG)/(1+sG*Math.sqrt(swgN)),ksmax/distance(force_list[i], origin));\r\n      // console.log(\"sN\", sN);\r\n      vertices[i].setX(vertices[i].x + sN*force_list[i].x);\r\n      vertices[i].setY(vertices[i].y + sN*force_list[i].y);\r\n      vertices[i].setZ(vertices[i].z + sN*force_list[i].z);\r\n\r\n      //update previous forces\r\n      previous_forces[i] = force_list[i];\r\n\r\n      //constants for scaling factor\r\n      minX = Math.min(minX, vertices[i].x);\r\n      minY = Math.min(minY, vertices[i].y);\r\n      minZ = Math.min(minZ, vertices[i].z);\r\n      maxX = vertices[i].x> maxX? vertices[i].x: maxX;\r\n      maxY = vertices[i].y > maxY? vertices[i].y: maxY;\r\n      maxZ = vertices[i].z > maxZ? vertices[i].z: maxZ;\r\n      //add animations\r\n      iter_animations.push([vertices[i].x, vertices[i].y, vertices[i].z]);\r\n    }\r\n    scaling_factor.push([-minX,-minY, -minZ, W/(-minX+maxX), L/(-minY+maxY), L/(-minZ+maxZ)]);\r\n    animations.push(iter_animations);\r\n    t+=1;\r\n  }\r\n  //Scale all the animations within the frame\r\n  for(let i = 0; i < animations.length; i++){\r\n    for(let j = 0; j < animations[i].length; j ++){\r\n      animations[i][j][0] = (animations[i][j][0] + scaling_factor[i][0])*scaling_factor[i][3];\r\n      animations[i][j][1] = (animations[i][j][1] + scaling_factor[i][1])*scaling_factor[i][4];\r\n      animations[i][j][2] = (animations[i][j][2] + scaling_factor[i][2])*scaling_factor[i][5];\r\n    }\r\n  }\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var minZ = Infinity;\r\n  var maxX = 0;\r\n  var maxY = 0;\r\n  var maxZ = 0;\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    minZ = Math.min(vertices[i].z, minZ);\r\n    maxX = Math.max(vertices[i].x, maxX);\r\n    maxY = Math.max(vertices[i].y, maxY);\r\n    maxZ = Math.max(vertices[i].z, maxZ)\r\n  }\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    vertices[i].x = (vertices[i].x + (-minX)) * (W/(maxX+(-minX)));\r\n    vertices[i].y = (vertices[i].y + (-minY)) * (L/(maxY + (-minY)));\r\n    vertices[i].z = (vertices[i].z + (-minZ)) * (L/(maxZ + (-minZ)));\r\n  }\r\n\r\n  return [vertices, animations];\r\n  //Algorithm\r\n}\r\n\r\nfunction frepulse(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(y,x);\r\n  return [unitvector[0]*kr*(((x.degree+1)*(y.degree+1))/dist),\r\n            unitvector[1]*kr*(((x.degree+1)*(y.degree+1))/dist),\r\n            unitvector[2]*kr*(((x.degree+1)*(y.degree+1))/dist)];\r\n\r\n}\r\n\r\nfunction fattract(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(x,y);\r\n  return [unitvector[0] *Math.log(1+dist), unitvector[1]*Math.log(1+dist),\r\n                                        unitvector[2]*Math.log(1+dist)];\r\n}\r\n\r\nfunction fattractDissuade(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(x,y);\r\n  return [unitvector[0]*Math.log(1+dist)/(x.degree+1), unitvector[1]*Math.log(1+dist)/(x.degree+1),\r\n              unitvector[2]*Math.log(1+dist)/(x.degree+1)]\r\n}\r\n\r\n\r\n\r\nfunction fgravity(v, center){\r\n  var dist_center = distance(v,center);\r\n  var unitvector = unitVector(v,center);\r\n  return [unitvector[0]*kg*(v.degree+1)*dist_center, unitvector[1]*kg*(v.degree+1)*dist_center,\r\n                unitvector[2]*kg*(v.degree+1)*dist_center];\r\n}\r\n\r\nfunction distance(v1,v2){\r\n  var dist = Math.pow(v1.x-v2.x,2) + Math.pow((v1.y-v2.y),2) + Math.pow(v1.z-v2.z,2)\r\n  if(dist === 0) dist = 0.00000000000000000001\r\n  return  Math.sqrt(dist);\r\n}\r\n\r\n/**\r\n* UnitVector from X to Y\r\n*/\r\nfunction unitVector(v1,v2){\r\n  const new_x = v2.x - v1.x;\r\n  const new_y = v2.y - v1.y;\r\n  const new_z = v2.z - v1.z;\r\n  var dist = distance(v1,v2);\r\n  return [new_x/dist, new_y/dist, new_z/dist];\r\n}\r\n","import Force from \"../datatypes/Force\"\r\nvar ka = 1;\r\nvar kr = 1;\r\nvar kg = 10;\r\nvar ks = 0.1;\r\nvar tau = 0.1;\r\nvar ksmax = 10;\r\n//============================ REMEMBER TO ADD NO OVERLAP SETTING ==========================\r\nexport function forceAtlas23D(vertices,edges, graph_distancex, graph_distancey, iterations, settings ){\r\n\r\n  // Algorithm constants\r\n  const kIter = iterations;\r\n  const W = graph_distancex -6;\r\n  const L = graph_distancey -6;\r\n  // console.log(settings);\r\n  kr = settings.fr;\r\n  kg = settings.kg;\r\n  tau = settings.tau;\r\n  ksmax = settings.ksmax;\r\n\r\n\r\n  //set up loop variables\r\n  // console.log(degreeArray);\r\n  let t = 1;\r\n  let animations = [];\r\n  let scaling_factor = [];\r\n  let temperature = (1/10)*W;\r\n\r\n\r\n  let previous_forces = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    previous_forces.push(new Force(0,0,0));\r\n  }\r\n  //calculate forces\r\n  while(t< kIter){\r\n    let force_list = [];\r\n\r\n    //calculate repulsive forces\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      let f = new Force(0,0,0);\r\n      // if(t === 1)console.log(\"vertex\", i)\r\n      for(let j = 0; j < vertices.length; j ++){\r\n        if(i!== j){\r\n\r\n          const repulse_force = frepulse(vertices[i], vertices[j]);\r\n          f.addVector(repulse_force);\r\n        }\r\n      }\r\n      force_list.push(f);\r\n    }\r\n\r\n    //calculate attractive forces\r\n    for(let i = 0; i < edges.length; i ++){\r\n      const e = edges[i];\r\n      const attractive_force = fattract(vertices[e.start], vertices[e.end]);\r\n      const attractive_force_opp = [-attractive_force[0], -attractive_force[1], -attractive_force[2]];\r\n      force_list[e.start].addVector(attractive_force);\r\n      force_list[e.end].addVector(attractive_force_opp);\r\n    }\r\n\r\n\r\n    // calculate forces of gravity\r\n    if(settings.gravity === true){\r\n      const center = (t === 1)? [W/2, L/2, L/2]: [(W/2) * 1/(scaling_factor[t-2][3]),(L/2) * 1/(scaling_factor[t-2][4]), (L/2) * 1/(scaling_factor[t-2][5])];\r\n      const center_force = new Force(center[0], center[1], center[2]);\r\n\r\n      for(let i = 0; i < vertices.length; i ++){\r\n        const gravity_force = fgravity(vertices[i], center_force);\r\n        force_list[i].addVector(gravity_force)\r\n      }\r\n    }\r\n\r\n    //update positions\r\n    const iter_animations = [];\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var minZ = Infinity;\r\n    var maxX = 0;\r\n    var maxY = 0;\r\n    var maxZ = 0;\r\n    var maxForce = 0;\r\n\r\n    //update global speed\r\n    var sG = 0;\r\n    var traG = 0;\r\n    var swgG = 0;\r\n    for(let i = 0; i < force_list.length; i++){\r\n      const origin = new Force(0,0,0);\r\n      const combined_force  = new Force(force_list[i].x + previous_forces[i].x, force_list[i].y + previous_forces[i].y,\r\n                                        force_list[i].z + previous_forces[i].z);\r\n      const traN = distance(combined_force, origin)/2\r\n      traG += (vertices[i].x+1) * traN;\r\n      const direction_force = new Force(force_list[i].x - previous_forces[i].x, force_list[i].y - previous_forces[i].y,\r\n                                        force_list[i].z -previous_forces[i].z);\r\n      const swgN = distance(direction_force, origin);\r\n      swgG += (vertices[i].degree+1)*swgN;\r\n    }\r\n    sG = tau*(traG/swgG);\r\n    // console.log(\"sG\",sG);\r\n\r\n    var sN = 0;\r\n    for(let i = 0; i < vertices.length; i++){\r\n      //find direction of forces\r\n      const origin = new Force(0,0,0);\r\n      const unitvector = unitVector(origin, force_list[i]);\r\n      //calculate temperatures\r\n      const direction_force = new Force(force_list[i].x - previous_forces[i].x, force_list[i].y - previous_forces[i].y,\r\n                                            force_list[i].z - previous_forces[i].z);\r\n      const swgN = distance(direction_force, origin);\r\n      sN = Math.min((ks*sG)/(1+sG*Math.sqrt(swgN)),ksmax/distance(force_list[i], origin));\r\n      // console.log(\"sN\", sN);\r\n      vertices[i].setX(vertices[i].x + sN*force_list[i].x);\r\n      vertices[i].setY(vertices[i].y + sN*force_list[i].y);\r\n      vertices[i].setZ(vertices[i].z + sN*force_list[i].z);\r\n\r\n      //update previous forces\r\n      previous_forces[i] = force_list[i];\r\n\r\n      //constants for scaling factor\r\n      minX = Math.min(minX, vertices[i].x);\r\n      minY = Math.min(minY, vertices[i].y);\r\n      minZ = Math.min(minZ, vertices[i].z);\r\n      maxX = vertices[i].x> maxX? vertices[i].x: maxX;\r\n      maxY = vertices[i].y > maxY? vertices[i].y: maxY;\r\n      maxZ = vertices[i].z > maxZ? vertices[i].z: maxZ;\r\n      //add animations\r\n      iter_animations.push([vertices[i].x, vertices[i].y, vertices[i].z]);\r\n    }\r\n    scaling_factor.push([-minX,-minY, -minZ, W/(-minX+maxX), L/(-minY+maxY), L/(-minZ+maxZ)]);\r\n    animations.push(iter_animations);\r\n    t+=1;\r\n  }\r\n  //Scale all the animations within the frame\r\n  for(let i = 0; i < animations.length; i++){\r\n    for(let j = 0; j < animations[i].length; j ++){\r\n      animations[i][j][0] = (animations[i][j][0] + scaling_factor[i][0])*scaling_factor[i][3];\r\n      animations[i][j][1] = (animations[i][j][1] + scaling_factor[i][1])*scaling_factor[i][4];\r\n      animations[i][j][2] = (animations[i][j][2] + scaling_factor[i][2])*scaling_factor[i][5];\r\n    }\r\n  }\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var minZ = Infinity;\r\n  var maxX = 0;\r\n  var maxY = 0;\r\n  var maxZ = 0;\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    minZ = Math.min(vertices[i].z, minZ);\r\n    maxX = Math.max(vertices[i].x, maxX);\r\n    maxY = Math.max(vertices[i].y, maxY);\r\n    maxZ = Math.max(vertices[i].z, maxZ)\r\n  }\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    vertices[i].x = (vertices[i].x + (-minX)) * (W/(maxX+(-minX)));\r\n    vertices[i].y = (vertices[i].y + (-minY)) * (L/(maxY + (-minY)));\r\n    vertices[i].z = (vertices[i].z + (-minZ)) * (L/(maxZ + (-minZ)));\r\n  }\r\n\r\n  return [vertices, animations];\r\n  //Algorithm\r\n}\r\n\r\nfunction frepulse(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(y,x);\r\n  return [unitvector[0]*kr*(((x.degree+1)*(y.degree+1))/dist),\r\n            unitvector[1]*kr*(((x.degree+1)*(y.degree+1))/dist),\r\n            unitvector[2]*kr*(((x.degree+1)*(y.degree+1))/dist)];\r\n\r\n}\r\n\r\nfunction fattract(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(x,y);\r\n  return [unitvector[0] *dist, unitvector[1]*dist,\r\n                                        unitvector[2]*dist];\r\n}\r\n\r\nfunction fattractDissuade(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(x,y);\r\n  return [unitvector[0]*dist/(x.degree+1), unitvector[1]*dist/(x.degree+1),\r\n              unitvector[2]*dist/(x.degree+1)]\r\n}\r\n\r\n\r\n\r\nfunction fgravity(v, center){\r\n  var dist_center = distance(v,center);\r\n  var unitvector = unitVector(v,center);\r\n  return [unitvector[0]*kg*(v.degree+1)*dist_center, unitvector[1]*kg*(v.degree+1)*dist_center,\r\n                unitvector[2]*kg*(v.degree+1)*dist_center];\r\n}\r\n\r\nfunction distance(v1,v2){\r\n  var dist = Math.pow(v1.x-v2.x,2) + Math.pow((v1.y-v2.y),2) + Math.pow(v1.z-v2.z,2)\r\n  if(dist === 0) dist = 0.00000000000000000001\r\n  return  Math.sqrt(dist);\r\n}\r\n\r\n/**\r\n* UnitVector from X to Y\r\n*/\r\nfunction unitVector(v1,v2){\r\n  const new_x = v2.x - v1.x;\r\n  const new_y = v2.y - v1.y;\r\n  const new_z = v2.z - v1.z;\r\n  var dist = distance(v1,v2);\r\n  return [new_x/dist, new_y/dist, new_z/dist];\r\n}\r\n","import React from \"react\";\r\nimport Vertex from \"./datatypes/Vertex\";\r\nimport Edge from \"./datatypes/Edge\";\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport {createRandomNetwork3D} from \"./networkgeneration/createRandomNetwork3D\";\r\nimport {fruchtermanReingold3D} from \"./NetworkAlgorithms/FruchtermanReingold3D\";\r\nimport {springEmbedding3D} from \"./NetworkAlgorithms/springEmbedding3D\";\r\nimport {forceAtlasLinLog3D} from \"./NetworkAlgorithms/forceAtlasLinLog-3D\";\r\nimport {forceAtlas23D} from \"./NetworkAlgorithms/forceAtlas2-3D\";\r\nimport {kruskal} from \"./MSTAlgorithms/kruskal\";\r\nimport {prim} from \"./MSTAlgorithms/prims\";\r\nimport {opt2} from \"./TSP/opt2\";\r\nimport {opt2Annealing} from \"./TSP/opt2Annealing\";\r\nimport {opt3} from \"./TSP/opt3\";\r\nimport {GreedyColoring} from \"./Coloring/GreedyColoring\";\r\nimport {misraGries} from \"./Coloring/misraGries\";\r\n\r\nimport \"./Network3D.css\";\r\n\r\nvar MAX_TIMEOUT = 30; //seconds\r\n\r\nasync function waitAnimateNetwork(that,startIndex, endIndex, animations,func){\r\n  if(animations !== null) await that.setState({currentAnimations: animations});\r\n  await that.setState({currentAnimationIndex: startIndex, animationIndex: endIndex, paused: false});\r\n  // console.log(\"start\",startIndex,\"end\", endIndex,\"animations\", animations);\r\n  if(that.state.group === \"layout\") that.animateNetwork();\r\n  if(that.state.group === \"coloring\") that.animateColoring();\r\n  if(that.state.group === \"TSP\") that.animateTSP()\r\n  // if(that.state.group === \"coloring\") continue;\r\n  // if(that.state.group === \"TSP\") continue;\r\n}\r\n\r\nclass NetworkVisualizer3D extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      height: 0,\r\n      width: 0,\r\n      depth: 0,\r\n      scene : null,\r\n      camera : null,\r\n      renderer: null,\r\n      vertices: [],\r\n      edges: [],\r\n      spheres : [],\r\n      lines: [],\r\n      algoType: \"spring\",\r\n      randomType: \"random\",\r\n      iterations: 100,\r\n      maxtimeouts: 0,\r\n      dragging: false,\r\n      previousMouseX : 0,\r\n      previousMouseY: 0,\r\n      algoType: \"spring\",\r\n      randomType: \"random\",\r\n      TSP: false,\r\n      cameraChanged: false,\r\n      currentAnimations: [],\r\n      currentAnimationIndex: 0,\r\n      animationIndex: 0,\r\n      paused: true,\r\n      group: \"layout\",\r\n    }\r\n    this.app = this.props.app;\r\n    this.canvas = React.createRef();\r\n  }\r\n\r\n  componentDidMount(){\r\n    const w = window.innerHeight*0.55;\r\n    const h = window.innerHeight*0.55;\r\n    const d = window.innerHeight*0.55; //depth === 'z'- axis\r\n    this.canvas.current.height = h;\r\n    this.canvas.current.width = w;\r\n\r\n    var renderer = new THREE.WebGLRenderer({canvas: this.canvas.current, alpha:true});\r\n    renderer.setSize(w, h);\r\n    var scene = new THREE.Scene();\r\n    var camera = new THREE.PerspectiveCamera(75, w/h, 0.1, 1000);\r\n    var pointLight = new THREE.PointLight( 0xffffff , 1);\r\n    pointLight.position.set(1,1,2);\r\n    camera.add(pointLight)\r\n    camera.position.z = 1.7*d;\r\n    camera.position.x = w/2;\r\n    camera.position.y = h/2;\r\n    scene.add(camera);\r\n    renderer.render(scene, camera);\r\n\r\n    const [vertices,edges] = createRandomNetwork3D(w, h,d, this.app.state.numV,\r\n      this.app.state.numE, this.app.state.connected, this.state.randomType,\r\n      [this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue],\r\n      [this.app.state.endRed, this.app.state.endGreen, this.app.state.endBlue],\r\n      this.app.state.degreesize, this.app.state.minsize, this.app.state.maxsize);\r\n\r\n    const spheres = [];\r\n    //displaying initial_vertices\r\n    for(let i = 0; i< vertices.length; i++){\r\n      const color = vertices[i].color;\r\n\r\n      //make a sphere\r\n      var geometry = new THREE.SphereGeometry(vertices[i].size,8,8);\r\n      var material = new THREE.MeshLambertMaterial(new THREE.Color(vertices[i].color));\r\n      var sphere = new THREE.Mesh(geometry, material);\r\n      const v = vertices[i]\r\n      sphere.position.set(v.x, v.y, v.z);\r\n      spheres.push(sphere);\r\n      scene.add(sphere);\r\n    }\r\n\r\n    const lines = [];\r\n    //displaying intial edges\r\n    for(let j = 0; j < edges.length; j++){\r\n        var material = new THREE.LineBasicMaterial({color : 0xa9a9a9});\r\n        material.opacity = 0.1;\r\n        var points = [];\r\n        const e = edges[j];\r\n        const v = vertices;\r\n        points.push(spheres[e.start].position);\r\n        points.push(spheres[e.end].position);\r\n        var geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n\r\n\r\n        var line = new THREE.Line(geometry, material);\r\n        scene.add(line);\r\n        lines.push(line);\r\n    }\r\n\r\n    renderer.render(scene, camera);\r\n\r\n\r\n    this.setState({\r\n      width: w,\r\n      height: h,\r\n      depth: d,\r\n      scene: scene,\r\n      camera: camera,\r\n      renderer: renderer,\r\n      vertices: vertices,\r\n      edges: edges,\r\n      spheres: spheres,\r\n      lines: lines,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount(){\r\n      var id = this.state.maxtimeouts;\r\n      while(id){\r\n        clearInterval(id);\r\n        id --;\r\n      }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    for(let i = 0; i< this.state.vertices.length; i++){\r\n      const v = this.state.vertices[i];\r\n      this.state.spheres[i].position.set(v.x, v.y, v.z);\r\n      // this.state.spheres[i].\r\n      this.state.spheres[i].material.color = new THREE.Color(this.state.vertices[i].color)\r\n    }\r\n\r\n\r\n    for(let j = 0; j< this.state.edges.length; j++){\r\n      const e = this.state.edges[j];\r\n      const v = this.state.vertices;\r\n\r\n      var pos = this.state.lines[j].geometry.attributes.position.array;\r\n      pos[0] = v[e.start].x;\r\n      pos[1] = v[e.start].y;\r\n      pos[2] = v[e.start].z;\r\n      pos[3] = v[e.end].x;\r\n      pos[4] = v[e.end].y;\r\n      pos[5] = v[e.end].z;\r\n      this.state.lines[j].geometry.attributes.position.needsUpdate = true;\r\n      this.state.lines[j].material.color = new THREE.Color(this.state.edges[j].color);\r\n    }\r\n\r\n    this.state.renderer.render(this.state.scene, this.state.camera);\r\n  }\r\n\r\n  generateForceDirectedLayout(){\r\n    const values = springEmbedding3D(this.state.vertices, this.state.edges,\r\n        this.state.width, this.state.height, this.state.iterations, this.app.state.settings.spring);\r\n    const final_vertices = values[0];\r\n    const animations = values[1];\r\n    // console.log(animations);\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateReingold(){\r\n    const values = fruchtermanReingold3D(this.state.vertices, this.state.edges, this.state.width,\r\n        this.state.height, this.state.iterations, this.app.state.settings.fruchterman);\r\n\r\n    const final_vertices = values[0];\r\n    const animations = values[1];\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateKamadaKawai(){\r\n\r\n  }\r\n\r\n  generateForceAtlas2(){\r\n    const [final_vertices, animations] = forceAtlas23D(this.state.vertices, this.state.edges,\r\n                this.state.width, this.state.height, this.state.iterations, this.app.state.settings.forceatlas2)\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateForceAtlasLinLog(){\r\n    const values = forceAtlasLinLog3D(this.state.vertices, this.state.edges,\r\n                this.state.width, this.state.height, this.state.iterations, this.app.state.settings.forceatlaslinlog);\r\n    const animations = values[1];\r\n    // console.log(animations);\r\n    const final_vertices = values[0];\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateHall(){\r\n\r\n  }\r\n\r\n  generateSpectralDrawing(){\r\n\r\n  }\r\n\r\n  generateRadialFlowDirected(){\r\n\r\n  }\r\n\r\n  generateKruskal(){\r\n    const [animations, sorted_edges] = kruskal(this.state.vertices, this.state.edges, 3,\r\n      [this.app.state.settings.kruskal.red, this.app.state.settings.kruskal.green,\r\n        this.app.state.settings.kruskal.blue]);\r\n    const that = this;\r\n    waitSetEdges(that, sorted_edges, animations);\r\n  }\r\n\r\n  generatePrim(){\r\n    const animations = prim(this.state.vertices, this.state.edges, 3,\r\n      [this.app.state.settings.prim.red, this.app.state.settings.prim.green,\r\n      this.app.state.settings.prim.blue]);\r\n    waitAnimateNetwork(this,0,animations.length,animations);\r\n  }\r\n\r\n  generate2Opt(){\r\n    const animations = [];\r\n    this.app.setState({running:true});\r\n    const selected_color = [this.app.state.settings.opt2.red, this.app.state.settings.opt2.green,\r\n                      this.app.state.settings.opt2.blue];\r\n    var edges = this.state.edges;\r\n    var better_solution = false;\r\n    for(let i = 0; i < (this.app.state.settings.opt2.timeout*1000)/this.app.state.animationSpeed; i++){\r\n      [edges, better_solution]= opt2(this.state.vertices,\r\n        edges, this.app.state.dimension, selected_color);\r\n      animations.push(edges);\r\n    }\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generate2OptAnnealing(){\r\n    const animations = [];\r\n    this.app.setState({running:true});\r\n    var current_temperature = this.app.state.settings.opt2annealing.temperature;\r\n    const max_temperature = current_temperature;\r\n    var temp = current_temperature;\r\n    for(let i = 0; i < (this.app.state.settings.opt2annealing.timeout*1000)/this.app.state.animationSpeed; i++){\r\n      temp = 0.992*temp;\r\n    }\r\n    var min_temperature = temp;\r\n    // console.log(\"max\", max_temperature, \"min\", min_temperature);\r\n\r\n    var edges = this.state.edges;\r\n    var better_solution = false;\r\n    for(let i = 0; i < (this.app.state.settings.opt2annealing.timeout*1000)/this.app.state.animationSpeed; i++){\r\n      [edges, better_solution] = opt2Annealing(this.state.vertices,\r\n          edges, this.app.state.dimension, this.app.state.settings.opt2annealing.startColor,\r\n          this.app.state.settings.opt2annealing.endColor, current_temperature,\r\n          min_temperature, max_temperature,\r\n          this.app.state.settings.opt2annealing.acceptance);\r\n      animations.push(edges);\r\n      current_temperature = 0.992*current_temperature;\r\n    }\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generate3Opt(){\r\n    const animations = [];\r\n    this.app.setState({running:true});\r\n    const selected_color = [this.app.state.settings.opt3.red, this.app.state.settings.opt3.green,\r\n                      this.app.state.settings.opt3.blue];\r\n    var edges = this.state.edges;\r\n    var better_solution = false;\r\n    for(let i = 0; i < (this.app.state.settings.opt3.timeout*1000)/this.app.state.animationSpeed; i++){\r\n      [edges, better_solution]= opt3(this.state.vertices,\r\n        edges, this.app.state.dimension, selected_color);\r\n      animations.push(edges);\r\n    }\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateGreedyVertex(){\r\n    const [vertices, animations] = GreedyColoring(this.state.vertices, this.state.edges, this.app.state.dimension, [255,255,0], [0,0,255])\r\n    waitAnimateNetwork(this,0,animations.length,animations);\r\n  }\r\n\r\n  generateMisraGries(){\r\n    // console.log(\"generate misra gries\");\r\n    const animations = misraGries(this.state.vertices, this.state.edges, [255,0,0], [0,255,0]);\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  runAlgorithm(){\r\n    if(this.app.state.running === false){\r\n      if(this.state.algoType === \"spring\") this.generateForceDirectedLayout();\r\n      if(this.state.algoType === \"fruchtermanReingold\") this.generateReingold();\r\n      if(this.state.algoType === \"kamadaKawai\") this.generateKamadaKawai();\r\n      if(this.state.algoType === \"forceAtlas2\") this.generateForceAtlas2();\r\n      if(this.state.algoType === \"forceatlaslinlog\") this.generateForceAtlasLinLog();\r\n      if(this.state.algoType === \"hall\") this.generateHall();\r\n      if(this.state.algoType === \"spectralDrawing\") this.generateSpectralDrawing();\r\n      if(this.state.algoType === \"radialFlowDirected\") this.generateRadialFlowDirected();\r\n      if(this.state.algoType === \"kruskal\") this.generateKruskal();\r\n      if(this.state.algoType === \"prim\") this.generatePrim();\r\n      if(this.state.algoType === \"2opt\") this.generate2Opt();\r\n      if(this.state.algoType === \"2optannealing\") this.generate2OptAnnealing();\r\n      if(this.state.algoType === \"3opt\") this.generate3Opt();\r\n      if(this.state.algoType === \"greedyvertex\") this.generateGreedyVertex();\r\n      if(this.state.algoType === \"misra\") this.generateMisraGries();\r\n    }\r\n    else{\r\n      waitAnimateNetwork(this, this.state.currentAnimationIndex, this.state.currentAnimations.length-1, null);\r\n    }\r\n\r\n  }\r\n\r\n  animateNetwork(){\r\n    let x = 0;\r\n    this.app.setState({running:true});\r\n    const start = this.state.currentAnimationIndex;\r\n    const end = this.state.animationIndex;\r\n    for(let k = start; k < end; k++){\r\n\r\n      x = setTimeout(() => {\r\n        const vertices = this.state.vertices;\r\n        for(let i = 0; i <vertices.length; i++){\r\n          vertices[i].setVector(this.state.currentAnimations[k][i]);\r\n        }\r\n        this.setState({vertices: vertices, currentAnimationIndex: this.state.currentAnimationIndex+1});\r\n        if(k === end-1) this.setState({paused: true, currentAnimationIndex: end});\r\n        // console.log(\"animating\")\r\n      }, (k-start) * this.app.state.animationSpeed)\r\n    }\r\n    this.setState({maxtimeouts: x});\r\n  }\r\n\r\n  animateColoring(){\r\n    let x = 0;\r\n    this.app.setState({running:true});\r\n    // console.log(\"animating\");\r\n    const start = this.state.currentAnimationIndex;\r\n    const end = this.state.animationIndex;\r\n\r\n    for(let k =start; k < end; k++){\r\n      x = setTimeout(() => {\r\n        const vertices = this.state.vertices;\r\n        const edges= this.state.edges;\r\n        const animations = this.state.currentAnimations;\r\n\r\n        this.setState({vertices: animations[k].vertices, edges:animations[k].edges, currentAnimationIndex: this.state.currentAnimationIndex + 1});\r\n        // console.log(\"animating\")\r\n        if(k === end-1){\r\n          // console.log(\"pausing\")\r\n          this.setState({paused: true,currentAnimationIndex: end});\r\n\r\n          // console.log(final_vertices);\r\n        }\r\n      }, (k-start) * this.app.state.animationSpeed)\r\n    }\r\n    this.setState({maxtimeouts: x});\r\n  }\r\n\r\n  animateTSP(func){\r\n    let x = 0;\r\n    this.app.setState({running:true});\r\n    // console.log(this.app.state.running)\r\n    const start = this.state.currentAnimationIndex;\r\n    const end = this.state.animationIndex;\r\n    for(let k =start; k < end; k++){\r\n      x = setTimeout(() => {\r\n        const vertices = this.state.vertices;\r\n        const edges= this.state.edges;\r\n        const animations = this.state.currentAnimations;\r\n\r\n        this.setState({edges: animations[k], currentAnimationIndex: this.state.currentAnimationIndex + 1});\r\n        // console.log(\"animating\")\r\n        if(k === end-1){\r\n          // console.log(\"pausing\")\r\n          this.setState({paused: true,currentAnimationIndex: end});\r\n\r\n          // console.log(final_vertices);\r\n        }\r\n      }, (k-start) * this.app.state.animationSpeed)\r\n    }\r\n\r\n    this.setState({maxtimeouts: x});\r\n  }\r\n\r\n  resetNetwork(){\r\n    var renderer = new THREE.WebGLRenderer({canvas: this.canvas.current, alpha:true});\r\n    renderer.setSize(this.state.width, this.state.height);\r\n    var scene = new THREE.Scene();\r\n    var camera = new THREE.PerspectiveCamera(75, this.state.width/this.state.height, 0.1, 1000);\r\n    var pointLight = new THREE.PointLight( 0xffffff , 1);\r\n    pointLight.position.set(1,1,2);\r\n    camera.add(pointLight)\r\n    camera.position.z = 1.7*this.state.depth;\r\n    camera.position.x = this.state.width/2;\r\n    camera.position.y = this.state.height/2;\r\n    scene.add(camera);\r\n    renderer.render(scene, camera);\r\n\r\n    const [vertices,edges] = createRandomNetwork3D(this.state.width,this.state.height,\r\n      this.state.depth, this.app.state.numV, this.app.state.numE, this.app.state.connected,\r\n            this.state.randomType,\r\n            [this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue],\r\n            [this.app.state.endRed, this.app.state.endGreen, this.app.state.endBlue],\r\n            this.app.state.degreesize, this.app.state.minsize, this.app.state.maxsize);\r\n    const spheres = [];\r\n    //displaying initial_vertices\r\n    for(let i = 0; i< vertices.length; i++){\r\n      const color = vertices[i].color;\r\n\r\n      //make a sphere\r\n      var geometry = new THREE.SphereGeometry(vertices[i].size,8,8);\r\n      var material = new THREE.MeshLambertMaterial(new THREE.Color(vertices[i].color));\r\n      var sphere = new THREE.Mesh(geometry, material);\r\n      const v = vertices[i]\r\n      sphere.position.set(v.x, v.y, v.z);\r\n      spheres.push(sphere);\r\n      scene.add(sphere);\r\n    }\r\n\r\n    const lines = [];\r\n    //displaying intial edges\r\n    for(let j = 0; j < edges.length; j++){\r\n        var material = new THREE.LineBasicMaterial({color : 0xa9a9a9});\r\n        material.opacity = 0.1;\r\n        var points = [];\r\n        const e = edges[j];\r\n        const v = vertices;\r\n        points.push(spheres[e.start].position);\r\n        points.push(spheres[e.end].position);\r\n        var geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n\r\n\r\n        var line = new THREE.Line(geometry, material);\r\n        scene.add(line);\r\n        lines.push(line);\r\n    }\r\n    renderer.render(scene,camera);\r\n\r\n    this.setState({\r\n      vertices: vertices,\r\n      edges: edges,\r\n      scene: scene,\r\n      camera: camera,\r\n      renderer: renderer,\r\n      spheres: spheres,\r\n      lines: lines,\r\n    })\r\n\r\n    this.app.setState({numV: vertices.length, numE: edges.length});\r\n  }\r\n\r\n  zoomCamera(v){\r\n    const delta = Math.sign(v);\r\n    this.state.camera.position.z += 10*delta;\r\n    this.state.renderer.render(this.state.scene, this.state.camera);\r\n    if(this.state.cameraChanged === false) this.setState({cameraChanged: true})\r\n  }\r\n\r\n  resetCamera(){\r\n    this.state.camera.position.z = this.state.depth * 1.7;\r\n    this.state.camera.position.x = this.state.width/2;\r\n    this.state.camera.position.y = this.state.height/2;\r\n    this.state.renderer.render(this.state.scene, this.state.camera);\r\n    this.setState({cameraChanged:false})\r\n  }\r\n\r\n  startDrag(e){\r\n    this.state.previousMouseX = e.clientX;\r\n    this.state.previousMouseY = e.clientY;\r\n    this.state.dragging = true;\r\n  }\r\n\r\n  endDrag(){\r\n    this.state.dragging = false;\r\n  }\r\n\r\n  rotateCamera(e){\r\n    if(this.state.dragging){\r\n      const deltaX = e.clientX - this.state.previousMouseX;\r\n      const deltaY = e.clientY - this.state.previousMouseY;\r\n      this.state.previousMouseX = e.clientX;\r\n      this.state.previousMouseY = e.clientY;\r\n      this.state.camera.position.y += deltaY\r\n      this.state.camera.position.x += -deltaX\r\n      this.state.renderer.render(this.state.scene, this.state.camera);\r\n      if(this.state.cameraChanged === false) this.setState({cameraChanged:true})\r\n    }\r\n  }\r\n\r\n  setAlgoType(v){\r\n    // this.attribute.current.setLayout(v)\r\n    this.setState({algoType: v});\r\n    if(v === \"2opt\" || v === \"3opt\" ||\r\n        v === \"2optannealing\" || v === \"3optannealing\"){\r\n          this.setState({group:\"TSP\"});\r\n          if(this.state.randomType !== \"cycle\") this.setRandomizedType(\"cycle\");\r\n        }\r\n    else if(v === \"spring\" || v === \"fruchterman\" || v === \"forceAtlas2\"\r\n                      || v === \"forceatlaslinlog\"){\r\n        this.setState({group:\"layout\"});\r\n      }\r\n    else if(v === \"kruskal\" || v === \"prim\" || v === \"greedyvertex\" ||\r\n                                        v === \"misra\"){\r\n        this.setState({group:\"coloring\"});\r\n    }\r\n  }\r\n\r\n  setRandomizedType(v){\r\n    const that = this;\r\n    waitSetRandomizedType(that, v);\r\n  }\r\n\r\n  clearAnimations(){\r\n    var id = this.state.maxtimeouts;\r\n    while(id){\r\n      clearInterval(id);\r\n      id --;\r\n    }\r\n  }\r\n\r\n  cancelAnimation(){\r\n    this.setState({currentAnimations: [], paused: true});\r\n    this.clearAnimations();\r\n    this.app.setState({running: false});\r\n  }\r\n\r\n  pauseAnimation(){\r\n    this.setState({paused:true});\r\n    this.clearAnimations();\r\n    // console.log(this.state.currentAnimationIndex);\r\n  }\r\n\r\n  resetColoring(){\r\n    const shouldRecolor = !(sameColor([this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue],\r\n                              [this.app.state.endRed, this.app.state.endGreen, this.app.state.endBlue]));\r\n    if(shouldRecolor === true){\r\n      const new_vertices = this.state.vertices.slice();\r\n      const max_degree = find_max_degree(this.state.vertices);\r\n      var gradient = createColorGradient([this.app.state.startRed, this.app.state.startGreen,\r\n                                          this.app.state.startBlue], [this.app.state.endRed,\r\n                                          this.app.state.endGreen, this.app.state.endBlue], max_degree);\r\n      for(let i = 0; i < new_vertices.length; i++){\r\n        new_vertices[i].color = assign_color(new_vertices[i].degree, max_degree, gradient);\r\n      }\r\n      const new_edges = [];\r\n      for(let j = 0; j < this.state.edges.length; j++){\r\n        const e = new Edge(this.state.edges[j].start, this.state.edges[j].end);\r\n        e.setColor(\"rgb(211,211,211)\");\r\n        new_edges.push(e);\r\n      }\r\n      this.setState({vertices: new_vertices, edges: new_edges});\r\n    }\r\n    else{\r\n      const new_vertices = this.state.vertices.slice();\r\n      const color = rgb_to_str([this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue]);\r\n      for(let i = 0; i < new_vertices.length; i ++){\r\n        new_vertices[i].color = color;\r\n      }\r\n      const new_edges = [];\r\n      for(let j = 0; j < this.state.edges.length; j++){\r\n        const e = new Edge(this.state.edges[j].start, this.state.edges[j].end);\r\n        e.setColor(\"rgb(211,211,211)\");\r\n        new_edges.push(e);\r\n      }\r\n      this.setState({vertices: new_vertices, edges: new_edges});\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n  }\r\n\r\n  updateVertexSize(){\r\n    if(this.app.state.degreesize === false){\r\n      const new_size = 5;\r\n      const new_vertices = this.state.vertices.slice();\r\n      for(let i = 0; i < new_vertices.length; i++){\r\n        const old_size = new_vertices[i].size;\r\n        this.state.spheres[i].scale.x = new_size/old_size;\r\n        this.state.spheres[i].scale.y = new_size/old_size;\r\n        this.state.spheres[i].scale.z = new_size/old_size;\r\n      }\r\n      const new_spheres = [];\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n    else{\r\n      const max_degree = find_max_degree(this.state.vertices);\r\n      const new_vertices = this.state.vertices.slice();\r\n      for(let i = 0; i < new_vertices.length; i ++){\r\n        new_vertices[i].size = Math.floor(assign_size(new_vertices[i].degree,\r\n          max_degree, this.app.state.minsize, this.app.state.maxsize)+2);\r\n        this.state.spheres[i].scale.x = new_vertices[i].size/5;\r\n        this.state.spheres[i].scale.y = new_vertices[i].size/5;\r\n        this.state.spheres[i].scale.z = new_vertices[i].size/5;\r\n      }\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n  }\r\n\r\n  updateColoring(){\r\n    const shouldRecolor = !(sameColor([this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue],\r\n                              [this.app.state.endRed, this.app.state.endGreen, this.app.state.endBlue]));\r\n    if(shouldRecolor === true){\r\n      const new_vertices = this.state.vertices.slice();\r\n      const max_degree = find_max_degree(this.state.vertices);\r\n      var gradient = createColorGradient([this.app.state.startRed, this.app.state.startGreen,\r\n                                          this.app.state.startBlue], [this.app.state.endRed,\r\n                                          this.app.state.endGreen, this.app.state.endBlue], max_degree);\r\n      for(let i = 0; i < new_vertices.length; i++){\r\n        new_vertices[i].color = assign_color(new_vertices[i].degree, max_degree, gradient);\r\n      }\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n    else{\r\n      const new_vertices = this.state.vertices.slice();\r\n      const color = rgb_to_str([this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue]);\r\n      for(let i = 0; i < new_vertices.length; i ++){\r\n        new_vertices[i].color = color;\r\n      }\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n  }\r\n\r\n  skipFrame(){\r\n    this.clearAnimations();\r\n    const animations_index = Math.min(this.state.currentAnimationIndex + 1,\r\n                                      this.state.currentAnimations.length-1);\r\n    waitAnimateNetwork(this, animations_index, animations_index+1, null);\r\n  }\r\n\r\n  rewindFrame(){\r\n    this.clearAnimations();\r\n    const animations_index = Math.max(this.state.currentAnimationIndex -2, 0);\r\n    waitAnimateNetwork(this, animations_index, animations_index+1, null);\r\n  }\r\n\r\n  skipForward(){\r\n    this.clearAnimations();\r\n    const animations_index = Math.min(this.state.currentAnimations.length-1,\r\n        this.state.currentAnimationIndex + Math.floor(1000/this.app.state.animationSpeed));\r\n    const end_index = this.state.paused === true? animations_index+1:\r\n                              this.state.currentAnimations.length;\r\n    waitAnimateNetwork(this, animations_index, end_index, null);\r\n  }\r\n\r\n  skipBackward(){\r\n    this.clearAnimations();\r\n    const animations_index = Math.max(0,\r\n        this.state.currentAnimationIndex - Math.floor(1000/this.app.state.animationSpeed));\r\n    const end_index = this.state.paused === true? animations_index+1:\r\n                            this.state.currentAnimations.length-1;\r\n    waitAnimateNetwork(this, animations_index, end_index, null);\r\n  }\r\n\r\n  skipToBeginning(){\r\n    this.clearAnimations();\r\n    const animations_index = 0\r\n    this.setState({currentAnimationIndex:0})\r\n    waitAnimateNetwork(this, 0, 1,null);\r\n  }\r\n  skipToEnd(){\r\n    this.clearAnimations();\r\n    const animations_index = this.state.currentAnimations.length-1;\r\n    waitAnimateNetwork(this, animations_index, animations_index+1, null)\r\n  }\r\n\r\n  openNetworkSettings(){\r\n    waitOpenNetworkSettings(this);\r\n  }\r\n\r\n  openAlgorithmSettings(){\r\n    waitOpenAlgorithmSettings(this);\r\n  }\r\n\r\n  saveAsCSV(){\r\n    let csvContent = \"data:text/csv;charset=utf-8,\";\r\n    const vertices = this.state.vertices;\r\n    const edges = this.state.edges;\r\n\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      csvContent += vertices[i].toCSV();\r\n    }\r\n    for(let i = 0; i < edges.length; i++){\r\n      csvContent += (edges[i].toCSV());\r\n    }\r\n    var link = document.createElement('a');\r\n    link.href = csvContent;\r\n    link.download = 'Network.csv';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n\r\n  }\r\n\r\n  saveAs(extension){\r\n    const rendererElement = this.state.renderer.domElement;\r\n    const image = rendererElement.toDataURL(\"network/\"+extension);\r\n    var link = document.createElement('a');\r\n    link.href = image;\r\n    link.download = 'Network.'+extension;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  render(){\r\n    return <div>\r\n              <canvas style = {{marginTop: this.props.height*1/20+this.props.height/40}}\r\n              className = \"canvas3d\"\r\n              ref = {this.canvas}\r\n              onWheel = {(e) => this.zoomCamera(e.deltaY)}\r\n              onMouseDown = {(e) => this.startDrag(e)}\r\n              onMouseUp = {() => this.endDrag()}\r\n              onMouseMove = {(e) => this.rotateCamera(e)}>\r\n              </canvas>\r\n              <br></br>\r\n              <div className = \"animationButtons\">\r\n              <button className = \"FirstFrameB\" title = \"Skip to algorithm start\"\r\n              disabled = {this.app.state.running === false || this.state.currentAnimationIndex === 1}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                onClick = {() => this.skipToBeginning()}></button>\r\n              <button className = \"FastBackB\" title = \"Rewind algorithm 1 second\"\r\n              disabled = {this.app.state.running === false || this.state.currentAnimationIndex === 1}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                  onClick = {() => this.skipBackward()}></button>\r\n              <button className = \"PreviousFrameB\" title = \"Previous frame\"\r\n              disabled = {this.app.state.running === false || this.state.currentAnimationIndex === 1}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                  onClick = {() => this.rewindFrame()}></button>\r\n              <button className = \"StartB\" hidden = {this.state.paused === false} title = \"Run algorithm\"\r\n              disabled = {(this.state.currentAnimationIndex === this.state.currentAnimations.length)\r\n              && this.state.currentAnimations.length !== 0}\r\n              onClick={() => this.runAlgorithm()}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n              <button className = \"PauseB\" hidden = {this.state.paused === true} title = \"Pause Algorithm\"\r\n              onClick = {() => this.pauseAnimation()}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                   width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n              <button className = \"StopB\"\r\n              title = \"Clear algorithm\"\r\n              disabled = {this.app.state.running === false}\r\n              onClick = {() => this.cancelAnimation()}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n              <button className = \"NextFrameB\"\r\n              title = \"Next Frame\"\r\n              disabled = {this.app.state.running === false\r\n                          || this.state.currentAnimationIndex === this.state.currentAnimations.length}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                  onClick = {() => this.skipFrame()}></button>\r\n              <button className = \"FastForwardB\"\r\n              title = \"Skip forward 1 second\"\r\n              disabled = {this.app.state.running === false\r\n                          || this.state.currentAnimationIndex === this.state.currentAnimations.length}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                  onClick = {() => this.skipForward()}></button>\r\n              <button className = \"LastFrameB\"\r\n              title = \"Skip to algorithm termination\"\r\n              disabled = {this.app.state.running === false\r\n                          || this.state.currentAnimationIndex === this.state.currentAnimations.length}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                  onClick = {() => this.skipToEnd()}></button>\r\n              <button className= \"CameraB\"\r\n              title = \"Reset camera\"\r\n              disabled = {this.state.offsetX === 0 && this.state.offsetY === 0 && this.state.scaleFactor === 1}\r\n              onClick = {() => this.resetCamera()}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n              <button className = \"ResetColoringB\"\r\n              title = \"Reset Coloring\"\r\n              disabled = {this.app.state.running === true}\r\n              onClick = {() => this.resetColoring()}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n              </div>\r\n              <br></br>\r\n              <div className = \"selectContainer\">\r\n                <div className = \"selectalgorow\">\r\n                <select className = \"selectalgo\"\r\n                onChange = {(event) => this.setAlgoType(event.target.value)}\r\n                style = {{width: (this.state.height*8)/10}}>\r\n                  <optgroup label = \"Force Directed Algorithms\">\r\n                  <option value = \"spring\"> Basic Spring Embedding </option>\r\n                  <option value = \"fruchtermanReingold\"> Fruchterman-Reingold </option>\r\n                  <option value = \"kamadaKawai\" disabled = {true} hidden = {true}> Kamada-Kawai </option>\r\n                  <option value = \"forceAtlas2\"> Force Atlas 2 </option>\r\n                  <option value = \"forceAtlasLinLog\"> Force Atlas 2 (LinLog) </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Spectral Layout Algorithms\">\r\n                  <option value = \"hall\" disabled = {true}> Hall's algorithm </option>\r\n                  <option value = \"spectralDrawing\" disabled = {true}> Generalized Eigenvector (Koren)</option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Custom Algorithms\" hidden = {true}>\r\n                    <option value = \"radialFlowDirected\" disabled = {true}>  Radial Flow Directed </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Minimum Spanning Trees\">\r\n                    <option value =\"kruskal\"> Kruskral's Algorithm</option>\r\n                    <option value = \"prim\"> Prim's Algorithm </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"TSP\">\r\n                    <option value = \"2opt\"> 2-Opt </option>\r\n                    <option value = \"3opt\"> 3-Opt </option>\r\n                    <option value = \"2optannealing\"> 2-Opt Simulated Annealing </option>\r\n                    <option value = \"3optannealing\" disabled = {true} hidden = {true}> 3-Opt Simulated Annealing </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Edge Coloring Algorithms\">\r\n                    <option value = \"misra\"> Misra-Gries Algorithm (Fan Rotation)</option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Vertex Coloring Algorithms\">\r\n                    <option value = \"greedyvertex\"> Greedy Coloring </option>\r\n                  </optgroup>\r\n                </select>\r\n                <div className = \"dropdown\">\r\n                  <button className = \"saveB\"\r\n                  title = \"Save as\"\r\n                  style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}>\r\n                  </button>\r\n                  <div className = \"dropdown-content\">\r\n                    <a className = \"aFile\" onClick = {() => this.saveAsCSV()}>.csv</a>\r\n                    {/* <a className = \"aFile\" onClick = {() => this.saveAs(\"png\")} hidden ={true}>.png</a>\r\n                    <a className = \"aFile\" onClick = {() => this.saveAs(\"jpg\")} hidden = {true}>.jpg</a>\r\n                    */}\r\n                  </div>\r\n                </div>\r\n                <button className = \"AlgoB\"\r\n                title = \"Algorithm Settings\"\r\n                onClick = {() => this.openAlgorithmSettings()}\r\n                disabled = {this.app.state.running === true}\r\n                  style = {{height:Math.min(this.state.width/10,100),\r\n                    width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}>\r\n                </button>\r\n                </div>\r\n                <br></br>\r\n                <div className = \"selectalgorow\" value = {this.state.randomType}>\r\n                <select className = \"selectalgo\"\r\n                style = {{width: (this.state.height*8)/10}}\r\n                disabled = {this.app.state.running === true}\r\n                onChange = {(event) => this.setRandomizedType(event.target.value)}\r\n                value = {this.state.randomType}>\r\n                  <option value = \"random\" disabled = {this.state.TSP === true}> Random </option>\r\n                  <option value = \"randomcircle\" disabled = {this.state.TSP === true}> Random Sphere </option>\r\n                  <option value = \"cycle\"> Random Hamiltonian Cycle </option>\r\n                  <option value = \"randomclustering\" disabled = {true}> Random Clustering </option>\r\n                </select>\r\n                <button className = \"resetB\"\r\n                onClick = {() => this.resetNetwork()}\r\n                title = \"New random network\"\r\n                disabled = {this.app.state.running === true}\r\n                  style = {{height:Math.min(this.state.width/10,100),\r\n                    width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}>\r\n                    </button>\r\n                <button className = \"generalB\"\r\n                title = \"Network Settings\"\r\n                onClick = {() => this.openNetworkSettings()}\r\n                disabled = {this.app.state.running === true}\r\n                  style = {{height:Math.min(this.state.width/10,100),\r\n                    width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}>\r\n                    </button>\r\n                </div>\r\n\r\n              </div>\r\n          </div>\r\n  }\r\n\r\n}\r\n\r\nexport default NetworkVisualizer3D;\r\n\r\nasync function waitSetRandomizedType(that,v){\r\n  await that.setState({randomType: v});\r\n  that.resetNetwork();\r\n}\r\n\r\nasync function animateEdges(that, edges){\r\n  await that.setState({edges: edges});\r\n}\r\n\r\nfunction find_max_degree(vertices){\r\n  var max_degree = -Infinity;\r\n  for(let i = 0; i < vertices.length; i++){\r\n    max_degree = Math.max(vertices[i].degree, max_degree);\r\n  }\r\n  return max_degree;\r\n}\r\n\r\nfunction assign_size(degree, max_degree, minsize, maxsize){\r\n  //min degree is 1 or 0\r\n  return minsize +(maxsize - minsize)*(degree/max_degree)\r\n}\r\n\r\nfunction sameColor(startColor, endColor){\r\n  if(startColor[0] === endColor[0] && startColor[1] === endColor[1] && startColor[2] === endColor[2]) return true;\r\n  return false;\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\" + parseInt(color[0]) + \",\" + parseInt(color[1]) + \",\" + parseInt(color[2]) +\")\";\r\n}\r\n\r\nfunction createColorGradient(startColor, endColor, maxDegree){\r\n  // console.log(\"inside color gradient\", startColor, endColor, maxDegree);\r\n  var [startHue, startSaturation, startLightness] = rgb_to_hsl(startColor);\r\n  var [endHue, endSaturation, endLightness] = rgb_to_hsl(endColor);\r\n\r\n  // console.log(startHue, startSaturation, startLightness);\r\n  // console.log(endHue, endSaturation, endLightness);\r\n  var incrementHue = (endHue-startHue)/maxDegree;\r\n\r\n  const gradient = [];\r\n\r\n  for(let i = 0; i < maxDegree; i++){\r\n    const newHue = startHue+(incrementHue*i)%360;\r\n    const [red,green,blue] = hsl_to_rgb((startHue+incrementHue*i)%360, startSaturation,\r\n                                            startLightness)\r\n    gradient.push([Math.abs(red%256), Math.abs(green%256), Math.abs(blue%256)]);\r\n    // console.log(gradient[i]);\r\n  }\r\n  return gradient;\r\n}\r\n\r\nfunction rgb_to_hsl(rgbColor){\r\n  var red = rgbColor[0]/255;\r\n  var green = rgbColor[1]/255;\r\n  var blue = rgbColor[2]/255;\r\n  var Cmax = Math.max(...[red,green,blue]);\r\n  var Cmin = Math.min(...[red,green,blue]);\r\n  var delta = Cmax-Cmin;\r\n\r\n\r\n  var hue = calculate_hue(delta, Cmax, red, green, blue)%360;\r\n  var lightness = (Cmax+Cmin)/2;\r\n  var saturation = delta === 0? 0: delta/(1-Math.abs(2*lightness-1));\r\n\r\n  return [hue, saturation, lightness];\r\n}\r\n\r\nfunction hsl_to_rgb(hue, saturation, lightness){\r\n  const C = (1 - Math.abs(2*lightness-1))*saturation\r\n  const X = C * (1 - Math.abs(hue/60)%2 -1);\r\n  const m = lightness - C/2;\r\n  const [R_prime, G_prime, B_prime] = check_degrees(hue, C, X);\r\n  return [((R_prime+m)*255)%256, ((G_prime + m)* 255)%256, ((B_prime+m) * 255)%256];\r\n}\r\n\r\nfunction calculate_hue(delta, Cmax, red, green, blue){\r\n  if(delta === 0) return 0;\r\n  if(Cmax === red) return 60*(((green-blue)/delta)%6);\r\n  if(Cmax === green) return 60*((blue-red)/delta+2);\r\n  if(Cmax === blue) return 60*((red- green)/delta + 4);\r\n}\r\n\r\nfunction check_degrees(hue, C, X){\r\n  if((hue >= 0 && hue < 60) || hue == 360) return [C,X,0];\r\n  if(hue >= 60 && hue < 120 ) return [X,C,0];\r\n  if(hue >= 120 && hue < 180 ) return [0, C, X];\r\n  if(hue >= 180 && hue < 240 ) return [0, X, C];\r\n  if(hue >= 240 && hue < 300 ) return [X, 0, C];\r\n  if(hue >= 300 && hue < 360 ) return [C, 0, X];\r\n  return [0,0,0];\r\n}\r\n\r\nfunction assign_color(degree, max_degree, gradient){\r\n\r\n  var selection = gradient[Math.floor((degree/max_degree) * (gradient.length-1))]\r\n\r\n  return rgb_to_str(selection)\r\n}\r\n\r\nasync function waitSetEdges(that, sorted_edges,animations){\r\n  await that.setState({edges: sorted_edges});\r\n  waitAnimateNetwork(that, 0, animations.length,animations)\r\n}\r\n\r\nasync function waitOpenNetworkSettings(that){\r\n  await that.app.navbar.current.openSettings();\r\n  that.app.navbar.current.settings.current.generalsettings.current.setOpen(true);\r\n}\r\n\r\nasync function waitOpenAlgorithmSettings(that){\r\n  await that.app.navbar.current.openSettings();\r\n  that.app.navbar.current.settings.current.algorithmsettings.current.setOpen(true);\r\n}\r\n","import React from \"react\";\r\nimport Vertex from \"./datatypes/Vertex\";\r\nimport Edge from \"./datatypes/Edge\";\r\nimport ConfirmationWindow from \"./ConfirmationWindow\";\r\n\r\nimport \"./NetworkCustom.css\";\r\n\r\nconst VERTEX_SIZE = 5;\r\nconst VERTEX_COLOR = \"rgb(0,255,255)\";\r\nconst SELECTED_COLOR = \"rgb(255,0,255)\";\r\n\r\nclass NetworkCustomVisualizer extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      height: 0,\r\n      width: 0,\r\n      gridConstant: 10,\r\n      gridX: 0,\r\n      gridY: 0,\r\n      mouseX: 0,\r\n      mouseY: 0,\r\n      previousMouseX: 0,\r\n      previousMouseY: 0,\r\n      dragging: false,\r\n      edgeStart: [null,null],\r\n      edgeStartIndex: 0,\r\n      mouseLeave: true,\r\n      vertex_list: [],\r\n      edge_list: [],\r\n      vertices: {},\r\n      edges: {},\r\n      operationType: \"newVertex\",\r\n      operationsBuffer: [],\r\n      operationsBufferIndex: -1,\r\n      selected_vertices: null,\r\n      box: null,\r\n      startBoxVertices: null,\r\n    }\r\n    this.app = this.props.app;\r\n    this.canvas = React.createRef();\r\n    this.confirmClear = React.createRef();\r\n  }\r\n\r\n  componentDidMount(){\r\n    const w = window.innerHeight * 0.55;\r\n    const h = window.innerHeight * 0.55;\r\n\r\n    const c = this.state.gridConstant;\r\n    const gridX = w/c;\r\n    const gridY = h/c;\r\n    const vertices = {}\r\n    for(let i = 0; i < c; i++){\r\n      // const x = Math.floor(Math.round((gridX*i+ Number.EPSILON) * 100) / 100);\r\n      for(let j = 0; j < c; j++){\r\n        // const y = Math.floor(Math.round((gridY*j+ Number.EPSILON) * 100) / 100);\r\n        vertices[[i,j]] = [];\r\n      }\r\n    }\r\n    this.setState({height: h, width: w, vertices: vertices, gridX: gridX, gridY: gridY});\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    this.canvas.current.width = this.state.width;\r\n    this.canvas.current.height = this.state.height;\r\n\r\n    const ctx = this.canvas.current.getContext(\"2d\");\r\n    ctx.scale(this.state.scale, this.state.scale);\r\n    ctx.clearRect(0,0,this.state.width, this.state.height);\r\n    for(let i = 0; i < this.state.vertex_list.length; i++){\r\n      const v = this.state.vertex_list[i];\r\n      ctx.beginPath();\r\n      ctx.fillStyle = v.color;\r\n      ctx.arc(v.x,v.y, v.size, 0, Math.PI*2);\r\n      ctx.fill();\r\n      ctx.closePath();\r\n    }\r\n\r\n\r\n    // DEBUGGING ONLY: draw grid\r\n    // for(let i = 1; i < this.state.gridConstant; i++){\r\n    //   ctx.beginPath();\r\n    //   ctx.moveTo(i*this.state.gridX, 0);\r\n    //   ctx.lineTo(i*this.state.gridX, this.state.height);\r\n    //   ctx.stroke();\r\n    //   ctx.closePath();\r\n    // }\r\n    // for(let i = 1; i < this.state.gridConstant; i++){\r\n    //   ctx.beginPath();\r\n    //   ctx.moveTo(0, this.state.gridY*i);\r\n    //   ctx.lineTo(this.state.width, this.state.gridY*i);\r\n    //   ctx.stroke();\r\n    //   ctx.closePath();\r\n    // }\r\n\r\n    for(let i = 0; i < this.state.edge_list.length; i++){\r\n      // console.log(\"edge\", key);\r\n      const e = this.state.edge_list[i];\r\n      const v1 = this.state.vertex_list[e[0]];\r\n      const v2 = this.state.vertex_list[e[1]];\r\n      // console.log(startX, startY, endX, endY)\r\n      ctx.beginPath();\r\n      ctx.fillStyle = \"rgb(0,0,0)\";\r\n      ctx.moveTo(v1.x, v1.y);\r\n      ctx.lineTo(v2.x, v2.y);\r\n      ctx.globalAlpha = 0.3;\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n    }\r\n\r\n    if(this.state.operationType === \"newVertex\" && this.state.mouseLeave === false){\r\n      ctx.beginPath();\r\n      ctx.fillStyle = rgb_to_str(this.app.state.startRed,this.app.state.startGreen,\r\n                                    this.app.state.startBlue);\r\n      ctx.globalAlpha= 0.7;\r\n      ctx.arc(this.state.mouseX, this.state.mouseY, VERTEX_SIZE, 0, 2*Math.PI);\r\n      ctx.fill();\r\n      ctx.closePath();\r\n    }\r\n    if(this.state.operationType === \"ConnectEdge\" && this.state.dragging === true){\r\n      if(this.state.edgeStart[0] !== null && this.state.edgeStart[1] !== null){\r\n        ctx.beginPath();\r\n        ctx.globalAlpha = 0.2;\r\n        ctx.moveTo(this.state.edgeStart[0], this.state.edgeStart[1])\r\n        ctx.lineTo(this.state.mouseX, this.state.mouseY);\r\n        ctx.strokeStyle = \"rgb(0,0,0)\";\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n      }\r\n    }\r\n    if(this.state.box !== null){\r\n      ctx.beginPath();\r\n      ctx.lineWidth = 2;\r\n      ctx.setLineDash([5, 15]);\r\n      ctx.moveTo(this.state.box[0], this.state.box[1]);\r\n      ctx.lineTo(this.state.box[2], this.state.box[1]);\r\n      ctx.moveTo(this.state.box[2], this.state.box[1]);\r\n      ctx.lineTo(this.state.box[2], this.state.box[3]);\r\n      ctx.moveTo(this.state.box[2], this.state.box[3]);\r\n      ctx.lineTo(this.state.box[0], this.state.box[3]);\r\n      ctx.moveTo(this.state.box[0], this.state.box[3]);\r\n      ctx.lineTo(this.state.box[0], this.state.box[1]);\r\n      // ctx.rect(this.state.box[0], this.state.box[1], this.state.box[2], this.state.box[3]);\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n    }\r\n  }\r\n\r\n  updateCursorPostion(e){\r\n    const x = this.state.mouseX;\r\n    const y = this.state.mouseY;\r\n    const prevX = this.state.previousX;\r\n    const prevY = this.state.previousY;\r\n    const vertices = this.state.vertices;\r\n    const edge = this.state.edges;\r\n    const edgeStartIndex = this.state.edgeStartIndex;\r\n    const startX = this.state.edgeStart[0];\r\n    const startY = this.state.edgeStart[1];\r\n    const rect = this.canvas.current.getBoundingClientRect(x,y);\r\n    const box = this.state.box;\r\n    // console.log(this.state.edgeStart);\r\n    if(this.state.operationType === \"ConnectEdge\" && this.state.dragging === true) {\r\n      this.tryConnectEdge(startX, startY, edgeStartIndex, x, y, vertices);\r\n    }\r\n    if(this.state.operationType === \"SelectMove\" && this.state.dragging === true){\r\n      this.createBox(x,y, startX, startY, box, prevX, prevY);\r\n    }\r\n\r\n    const xPos =  e.clientX -rect.left;\r\n    const yPos =  e.clientY - rect.top;\r\n\r\n    this.setState({mouseX: xPos,mouseY:yPos, previousX: x, previousY:y, mouseLeave: false});\r\n\r\n  }\r\n\r\n  setOperationType(v){\r\n    // console.log(this.state.vertices);\r\n    if(this.state.selected_vertices !== null){\r\n      for(let i = 0; i < this.state.selected_vertices.length; i++){\r\n        this.state.selected_vertices[i].vertex.color = VERTEX_COLOR;\r\n      }\r\n    }\r\n    this.setState({operationType: v, box:null, selected_vertices: null, edgeStart: [null, null]})\r\n  }\r\n\r\n  processClickOutcome(e){\r\n    if(this.state.operationType === \"newVertex\") this.placeVertex(e);\r\n  }\r\n\r\n  processDragOutcome(e){\r\n    this.setState({dragging:true});\r\n\r\n  }\r\n\r\n  placeVertex(e){\r\n    if(this.state.vertex_list.length >= 200){\r\n      alert(\"Maximum number of vertices (200) exceeded\");\r\n      return\r\n    }\r\n    const rect = this.canvas.current.getBoundingClientRect();\r\n    const vertices = this.state.vertices;\r\n    const vertex_list = this.state.vertex_list;\r\n    const x = e.clientX -rect.left;\r\n    const y = e.clientY - rect.top\r\n    const [vertexX, vertexY] = this.getGrid(x, y)\r\n\r\n    /* TODO CHECK if another vertex is too closed*/\r\n    var tooClose = false;\r\n    for(let i = 0; i < vertices[[vertexX,vertexY]].length; i++){\r\n      const v = this.state.vertex_list[vertices[[vertexX,vertexY]][i]];\r\n      if(distance(v.x,v.y,x, y) < (VERTEX_SIZE+VERTEX_SIZE)*(VERTEX_SIZE+VERTEX_SIZE)){\r\n        tooClose = true;\r\n      }\r\n    }\r\n    if(tooClose === false){\r\n      const v = new Vertex(x, y);\r\n      v.size = VERTEX_SIZE;\r\n      v.color = VERTEX_COLOR;\r\n      var details = {}\r\n      vertex_list.push(v)\r\n      vertices[[vertexX, vertexY]].push(vertex_list.length-1);\r\n      details.vertex = v.copy_vertex();\r\n      details.vertexIndex = vertex_list.length-1;\r\n      details.grid = [vertexX, vertexY];\r\n      details.gridIndex = [vertices[[vertexX, vertexY]]].length-1;\r\n      this.addActionToBuffer(\"vertex\", details);\r\n      this.setState({vertices:vertices, vertex_list: vertex_list});\r\n    }\r\n  }\r\n\r\n  tryConnectEdge(edge_startX, edge_startY, edgeStartIndex, x, y, vertices){\r\n    // console.log(\"connecting\");\r\n    // console.log(\"input\", x, y, vertices, edge_start, edge_end);\r\n    if(edge_startX === null && edge_startY === null){\r\n      const [new_x,new_y] = this.getGrid(x,y);\r\n      // console.log(new_x, new_y);\r\n      for(let i = 0; i < vertices[[new_x,new_y]].length; i++){\r\n        const v = this.state.vertex_list[vertices[[new_x,new_y]][i]];\r\n        if(distance(v.x,v.y,x, y) < (VERTEX_SIZE+2)*(VERTEX_SIZE+2)){\r\n          this.setState({edgeStart: [v.x,v.y], edgeStartIndex: vertices[[new_x,new_y]][i]});\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    else{\r\n      const [new_x,new_y] = this.getGrid(x,y);\r\n      // console.log(vertices[[new_x, new_y]]);\r\n      // console.log(new_x, new_y);\r\n      for(let i = 0; i < vertices[[new_x,new_y]].length; i++){\r\n        const v = this.state.vertex_list[vertices[[new_x,new_y]][i]];\r\n        // console.log(v);\r\n        if(distance(v.x,v.y,x, y) < (VERTEX_SIZE+2)*(VERTEX_SIZE+2)){\r\n          // console.log(\"VERTEX SPOTTED!\");\r\n          const edges = this.state.edges;\r\n          const edge_list = this.state.edge_list;\r\n          const [new_edges, new_edge_list] = this.addEdge(edges,\r\n                    edge_list, this.state.edgeStartIndex, vertices[[new_x,new_y]][i]);\r\n          this.setState({edgeStart: [v.x,v.y],\r\n            edgeStartIndex: vertices[[new_x, new_y]][i],edges: new_edges,\r\n                                                  edge_list: new_edge_list});\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  addEdge(edges, edge_list, startVertexIndex, endVertexIndex){\r\n\r\n    if(edges[[startVertexIndex,endVertexIndex]] === undefined &&\r\n      edges[[endVertexIndex, startVertexIndex]] === undefined &&\r\n                    startVertexIndex !== endVertexIndex){\r\n      // console.log(\"successful connection\");\r\n      if(edge_list.length > 199){\r\n        alert(\"Maximum number of edges(600) exceeded\");\r\n        return [edges,edge_list];\r\n      }\r\n      edges[[startVertexIndex, endVertexIndex]] = true;\r\n      edge_list.push([startVertexIndex, endVertexIndex]);\r\n      const details = {};\r\n      details.grid = [startVertexIndex, endVertexIndex];\r\n      details.edge = [startVertexIndex, endVertexIndex];\r\n      details.index = edge_list.length-1;\r\n      this.addActionToBuffer(\"edge\", details);\r\n    }\r\n    return [edges, edge_list];\r\n  }\r\n\r\n  createBox(x,y, startX,startY, box, previousX, previousY){\r\n    if(startX === null && startY === null){\r\n      if(box === null){\r\n        const selected_vertices = this.state.selected_vertices;\r\n        if(selected_vertices !== null){\r\n          for(let i = 0; i < selected_vertices.length; i++){\r\n            selected_vertices[i].vertex.color = VERTEX_COLOR;\r\n          }\r\n        }\r\n      this.setState({edgeStart: [x,y], selected_vertices: null});\r\n      }\r\n      else{\r\n        if(Math.min(box[0], box[2]) < x && x < Math.max(box[0], box[2]) &&\r\n          Math.min(box[1], box[3])< y && y<Math.max(box[1], box[3])){\r\n            var deltaX = x - previousX;\r\n            var deltaY = y - previousY;\r\n            const selected_vertices = this.state.selected_vertices;\r\n            if(box[0]+deltaX<0 || box[2]+deltaX > this.state.width) deltaX = 0;\r\n            if(box[1]+deltaY<0 || box[3]+deltaY > this.state.height) deltaY = 0;\r\n            const vertices = this.state.vertices;\r\n            this.updateSelectedVertices(vertices, selected_vertices, deltaX, deltaY);\r\n            this.setState({box: [box[0]+deltaX, box[1]+deltaY, box[2]+deltaX, box[3]+deltaY]});\r\n          }\r\n          else{\r\n            this.setState({box:null});\r\n          }\r\n      }\r\n    }\r\n    else{\r\n      // console.log(startX, startY, x, y);\r\n      this.setState({box: [Math.min(startX,x), Math.min(startY,y), Math.max(x,startX), Math.max(y,startY)]});\r\n    }\r\n  }\r\n\r\n  updateSelectedVertices(vertices,selected_vertices, dx, dy){\r\n    var new_vertices = vertices;\r\n    for(let i = 0; i < selected_vertices.length; i++){\r\n      selected_vertices[i].vertex.x += dx;\r\n      selected_vertices[i].vertex.y += dy;\r\n      const new_grid = this.getGrid(selected_vertices[i].vertex.x,\r\n                                    selected_vertices[i].vertex.y);\r\n\r\n      if(new_grid[0] !== selected_vertices[i].grid[0] || new_grid[1]\r\n        !== selected_vertices[i].grid[1]){\r\n          new_vertices = this.updateVertexGrids(vertices,selected_vertices[i], new_grid);\r\n        };\r\n    }\r\n    this.setState({vertices: new_vertices});\r\n  }\r\n\r\n  updateVertexGrids(vertices,selected_vertex, new_grid){\r\n    const old_grid = selected_vertex.grid;\r\n    // console.log(\"updating vertex grids from\", old_grid, \"to\", new_grid);\r\n    const index_value = vertices[old_grid].indexOf(selected_vertex.index);\r\n    // console.log(\"element to remove\", selected_vertex.index);\r\n    vertices[old_grid].splice(index_value,1);\r\n    // console.log(\"vertices[old+grid]\",vertices[old_grid]);\r\n    vertices[new_grid].push(selected_vertex.index);\r\n    // console.log(\"vertices[new_grid]\",vertices[new_grid]);\r\n    selected_vertex.grid = new_grid;\r\n\r\n    return vertices;\r\n  }\r\n\r\n\r\n  clearDragOutcome(){\r\n    this.setState({dragging:false, edgeStart: [null,null], edgeStartIndex: null});\r\n    const box = this.state.box;\r\n    const selected_vertices = this.state.selected_vertices;\r\n    if(box !== null &&  selected_vertices === null){\r\n      this.selectVertices(box);\r\n    }\r\n    else if(box !==null){\r\n      const selected_vertices = this.state.selected_vertices;\r\n      const selected_vertices_copy = [];\r\n      for(let i = 0; i < selected_vertices.length; i ++){\r\n        const new_details = {}\r\n        new_details.vertex = selected_vertices[i].vertex.copy_vertex();\r\n        new_details.vertex.color = VERTEX_COLOR;\r\n        new_details.grid = selected_vertices[i].grid;\r\n        new_details.index = selected_vertices[i].index;\r\n        selected_vertices_copy.push(new_details);\r\n      }\r\n      const box_select = {}\r\n      const startBox = this.state.startBoxVertices;\r\n      // console.log(\"assert\", startBox !== null);\r\n      box_select.start = startBox;\r\n      box_select.end = selected_vertices_copy;\r\n      const is_different_box = this.isDifferentBox(startBox, selected_vertices_copy);\r\n      if(is_different_box === true) this.addActionToBuffer(\"box\", box_select);\r\n      this.setState({startBoxVertices: null});\r\n    }\r\n  }\r\n\r\n  isDifferentBox(start, end){\r\n    if(start === undefined || end === undefined ||\r\n        start === null || end === null) return false;\r\n    if(start.length === 0 || end.length === 0) return false;\r\n\r\n    if(start[0].vertex.x !== end[0].vertex.x ||\r\n              start[0].vertex.y !== end[0].vertex.y) return true;\r\n    return false;\r\n  }\r\n\r\n  getGrid(x,y){\r\n    const gridX = this.state.gridX;\r\n    const gridY = this.state.gridY;\r\n\r\n    const new_x = Math.floor(x/gridX);\r\n    const new_y = Math.floor(y/gridY);\r\n    return [Math.min(Math.max(0,new_x), this.state.gridConstant-1),\r\n      Math.min(Math.max(new_y,0),this.state.gridConstant-1)];\r\n  }\r\n\r\n  getListGrid(x0, y0, x1, y1){\r\n    const startGrid = this.getGrid(x0,y0);\r\n    const endGrid = this.getGrid(x1,y1);\r\n    // console.log(\"startGrid\", startGrid);\r\n    // console.log(\"endGrid\", endGrid);\r\n    if(startGrid[0] === endGrid[0] && startGrid[1] === endGrid[1]) return [startGrid];\r\n    else if(startGrid[0] === endGrid[0]){\r\n      const res = [];\r\n      for(let i = startGrid[1]; i <= endGrid[1]; i++){\r\n        res.push([startGrid[0], i])\r\n      }\r\n      return res;\r\n    }\r\n    else if(startGrid[1] === endGrid[1]){\r\n      const res = [];\r\n      for(let j = startGrid[0]; j <= endGrid[0]; j++){\r\n        res.push([j, startGrid[1]]);\r\n      }\r\n      return res;\r\n    }\r\n    else{\r\n      const res = [];\r\n      for(let i = startGrid[1]; i <= endGrid[1]; i++){\r\n        for(let j = startGrid[0]; j <= endGrid[0]; j++){\r\n          res.push([j, i]);\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  selectVertices(box){\r\n    var x0 = Math.min(box[0], box[2]);\r\n    var y0 = Math.min(box[1], box[3]);\r\n    var x1 = Math.max(box[0], box[2]);\r\n    var y1 = Math.max(box[1], box[3]);\r\n\r\n    // console.log(\"coordinates\", x0,y0,x1,y1);\r\n    const boxesToCheck = this.getListGrid(x0,y0,x1,y1);\r\n    // console.log(\"boxes\", boxesToCheck);\r\n    const selected_vertices = this.unPackVertexFromGrid(boxesToCheck, x0, y0, x1,y1);\r\n    // console.log(\"selected_vertices\", selected_vertices);\r\n    const selected_vertices_copy = [];\r\n    for(let i = 0; i < selected_vertices.length; i++){\r\n      const new_details = {}\r\n      new_details.vertex = selected_vertices[i].vertex.copy_vertex();\r\n      new_details.grid = selected_vertices[i].grid;\r\n      new_details.index = selected_vertices[i].index;\r\n      selected_vertices_copy.push(new_details);\r\n    }\r\n    for(let i = 0; i < selected_vertices.length; i++){\r\n      selected_vertices[i].vertex.color = SELECTED_COLOR;\r\n    }\r\n    this.setState({selected_vertices: selected_vertices, startBoxVertices: selected_vertices_copy});\r\n  }\r\n\r\n  unPackVertexFromGrid(box_array, x0, y0, x1, y1){\r\n    const selected_vertices = [];\r\n    // console.log(this.state.vertices);\r\n    for(let i = 0; i < box_array.length; i++){\r\n      var index_list = this.state.vertices[box_array[i]];\r\n      for(let j = 0; j < index_list.length; j++){\r\n        const v = this.state.vertex_list[index_list[j]]\r\n        if(v.x >= x0 && v.y >= y0 && v.x <=x1 && v.y <= y1)selected_vertices.push({vertex: v,\r\n                                      grid: box_array[i], index: index_list[j]});\r\n      }\r\n    }\r\n    return selected_vertices;\r\n  }\r\n\r\n  /*\r\n  The following accpetable {types:details} pairs are\r\n    vertex :\r\n    edge :\r\n    box :\r\n  */\r\n  addActionToBuffer(type, details){\r\n    var buffer = this.state.operationsBuffer;\r\n    var bufferIndex = this.state.operationsBufferIndex;\r\n    if(bufferIndex === buffer.length-1){\r\n      buffer.push({type:type, details: details});\r\n      bufferIndex++;\r\n      // console.log(\"buffer\", buffer);\r\n      // console.log(\"bufferIndex\", bufferIndex);\r\n      this.setState({operationsBuffer: buffer, operationsBufferIndex: bufferIndex});\r\n      // console.log(buffer);\r\n    }\r\n    else{\r\n      // console.log(\"Not at buffer end\", buffer);\r\n      // console.log(bufferIndex)\r\n      const new_buffer =[]\r\n      for(let i = 0; i < bufferIndex+1; i++){\r\n        new_buffer.push(buffer[i]);\r\n      }\r\n      // console.log(\"spliced buffer\", new_buffer)\r\n      // console.log(new_buffer);\r\n      new_buffer.push({type: type, details: details});\r\n      // console.log(new_buffer);\r\n      bufferIndex ++;\r\n      // console.log(\"assert\", bufferIndex === new_buffer.length-1);\r\n      this.setState({operationsBuffer: new_buffer, operationsBufferIndex: bufferIndex});\r\n      // console.log(new_buffer);\r\n    }\r\n  }\r\n\r\n  undoActionFromBuffer(){\r\n    this.setOperationType(\"undo\");\r\n    var bufferIndex = this.state.operationsBufferIndex;\r\n    const buffer = this.state.operationsBuffer;\r\n    // console.log(\"buffer\", buffer, \"index\", bufferIndex);\r\n    if(buffer[bufferIndex].type === \"vertex\"){\r\n      const vertex_list = this.state.vertex_list;\r\n      const vertices = this.state.vertices;\r\n      vertex_list.splice(buffer[bufferIndex].details.vertexIndex, 1);\r\n      vertices[buffer[bufferIndex].details.grid].splice(buffer[bufferIndex].gridIndex,1);\r\n      bufferIndex --;\r\n      this.setState({vertex_list: vertex_list, vertices: vertices, operationsBufferIndex: bufferIndex});\r\n    }\r\n    else if(buffer[bufferIndex].type === \"edge\"){\r\n      const edge_list = this.state.edge_list;\r\n      const edges = this.state.edges;\r\n      edge_list.splice(buffer[bufferIndex].details.index,1);\r\n      edges[buffer[bufferIndex].details.grid] = undefined;\r\n      bufferIndex --;\r\n      this.setState({edge_list: edge_list, edges: edges, operationsBufferIndex: bufferIndex});\r\n    }\r\n    else if(buffer[bufferIndex].type === \"box\"){\r\n      const startBox = buffer[bufferIndex].details.start;\r\n      const endBox = buffer[bufferIndex].details.end;\r\n      const vertices = this.state.vertices;\r\n      const vertex_list = this.state.vertex_list;\r\n\r\n      for(let i = 0; i < endBox.length; i++){\r\n        const index_value = vertices[endBox[i].grid].indexOf(endBox[i].index);\r\n        vertices[endBox[i].grid].splice(index_value,1);\r\n        vertices[startBox[i].grid].push(endBox[i].index);\r\n        vertex_list[endBox[i].index] = startBox[i].vertex;\r\n      }\r\n      bufferIndex --;\r\n      this.setState({vertices: vertices, vertex_list: vertex_list, operationsBufferIndex: bufferIndex});\r\n    }\r\n\r\n  }\r\n\r\n  redoActionFromBuffer(){\r\n    this.setOperationType(\"redo\")\r\n    var bufferIndex = this.state.operationsBufferIndex;\r\n    const buffer = this.state.operationsBuffer;\r\n    // console.log(\"buffer\", buffer, \"index\", bufferIndex);\r\n    if(buffer[bufferIndex+1].type === \"vertex\"){\r\n      bufferIndex ++;\r\n      const vertex_list = this.state.vertex_list;\r\n      const vertices = this.state.vertices;\r\n      vertex_list.push(buffer[bufferIndex].details.vertex);\r\n      vertices[buffer[bufferIndex].details.grid].push(vertex_list.length-1);\r\n      this.setState({vertex_list: vertex_list, vertices: vertices, operationsBufferIndex: bufferIndex});\r\n    }\r\n    else if(buffer[bufferIndex+1].type === \"edge\"){\r\n      bufferIndex ++;\r\n      const edge_list = this.state.edge_list;\r\n      const edges = this.state.edges;\r\n      edge_list.push(buffer[bufferIndex].details.edge);\r\n      edges[buffer[bufferIndex].details.grid] = true;\r\n      this.setState({edge_list: edge_list, edges: edges, operationsBufferIndex: bufferIndex});\r\n    }\r\n    else if(buffer[bufferIndex+1].type === \"box\"){\r\n      const startBox = buffer[bufferIndex+1].details.start;\r\n      const endBox = buffer[bufferIndex+1].details.end;\r\n      const vertices = this.state.vertices;\r\n      const vertex_list = this.state.vertex_list;\r\n      for(let i = 0; i < startBox.length; i++){\r\n        const index_value = vertices[startBox[i].grid].indexOf(startBox[i].index);\r\n        vertices[startBox[i].grid].splice(index_value, 1);\r\n        vertices[endBox[i].grid].push(startBox[i].index);\r\n        vertex_list[startBox[i].index]= endBox[i].vertex;\r\n      }\r\n      bufferIndex++;\r\n      this.setState({vertices: vertices, vertex_list: vertex_list, operationsBufferIndex: bufferIndex});\r\n    }\r\n  }\r\n\r\n  processMouseLeave(){\r\n    this.setState({mouseLeave:true});\r\n    this.clearDragOutcome();\r\n  }\r\n\r\n  saveAsCSV(){\r\n    let csvContent = \"data:text/csv;charset=utf-8,\";\r\n    const vertex_list = this.state.vertex_list;\r\n    const edge_list = this.state.edge_list;\r\n    //update degrees appropriately\r\n    for(let i = 0 ; i < vertex_list.length; i ++){\r\n      vertex_list[i].degree = 0;\r\n    }\r\n    for(let i = 0; i < edge_list.length; i++){\r\n      vertex_list[edge_list[i][0]].degree ++;\r\n      vertex_list[edge_list[i][1]].degree ++;\r\n    }\r\n\r\n    for(let i = 0; i < vertex_list.length; i ++){\r\n      csvContent += vertex_list[i].toCSV();\r\n    }\r\n    for(let i = 0; i < edge_list.length; i++){\r\n      const edge = new Edge(edge_list[i], \"rgb(0,0,0)\", 1)\r\n      edge.alpha = 0.1;\r\n      csvContent += (edge.toCSV());\r\n    }\r\n    var link = document.createElement('a');\r\n    link.href = csvContent;\r\n    link.download = 'Network.csv';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n\r\n  }\r\n\r\n  saveAs(extension){\r\n    const canvas = this.canvas.current;\r\n    const image = canvas.toDataURL(\"network/\"+extension);\r\n    var link = document.createElement('a');\r\n    link.href = image;\r\n    link.download = 'Network.'+extension;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n\r\n\r\n  }\r\n\r\n\r\n  render(){\r\n    const num_b = 10;\r\n    return <div>\r\n            <ConfirmationWindow\r\n            ref = {this.confirmClear}\r\n            parent={this}\r\n            trigger ={clearNetwork}\r\n            msg = {\"Any unsaved changes will be lost.\"}/>\r\n            <canvas style = {{marginTop: this.props.height*1/20+this.props.height/40}}\r\n            onClick = {(e) => this.processClickOutcome(e)}\r\n            onMouseMove = {(e) => this.updateCursorPostion(e)}\r\n            onMouseLeave = {() => this.processMouseLeave()}\r\n            onMouseDown = {(e) => this.processDragOutcome(e)}\r\n            onMouseUp = {() => this.clearDragOutcome()}\r\n            className = \"networkCanvas\"\r\n            ref = {this.canvas}>\r\n            </canvas>\r\n            <br></br>\r\n            <div className = \"animationsButtons\">\r\n            <button className = \"placeB\"\r\n            disabled = {this.state.operationType === \"newVertex\"}\r\n            title = \"Place Vertices\"\r\n            onClick = {() => this.setOperationType(\"newVertex\")}\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n              width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n             </button>\r\n            <button className = \"connectB\"\r\n            disabled = {this.state.operationType === \"ConnectEdge\"}\r\n            title = \"Connect Vertices\"\r\n            onClick = {() => this.setOperationType(\"ConnectEdge\")}\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n              width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n             </button>\r\n            <button className = \"selectB\"\r\n            disabled = {this.state.operationType === \"SelectMove\"}\r\n            title = \"Select & Move Area\"\r\n            onClick = {() => this.setOperationType(\"SelectMove\")}\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n              width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n             </button>\r\n             {/*\r\n            <button className = \"moveB\"\r\n            title = \"Move Frame\"\r\n            disabled = {this.state.operationType === \"moveCamera\"}\r\n            onClick = {() => this.setOperationType(\"moveCamera\")}\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n              width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n            </button>\r\n            <button className = \"CameraB\"\r\n            title = \"Reset Camera\"\r\n            onClick = {() => this.resetCamera()}\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n            width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n            </button> */}\r\n            <button className = \"clearB\"\r\n            title = \"Clear Frame\"\r\n            onClick = {() => this.confirmClear.current.setOpen(true)}\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n              width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n            </button>\r\n            <button className = \"settingsB\"\r\n            title = \"Graphical settings\"\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n              width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n            </button>\r\n            <button className = \"undoB\"\r\n            onClick = {() => this.undoActionFromBuffer()}\r\n            disabled = {this.state.operationsBufferIndex === -1}\r\n            title = \"Undo\"\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n              width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n            </button>\r\n            <button className = \"redoB\"\r\n            onClick = {() => this.redoActionFromBuffer()}\r\n            disabled = {this.state.operationsBuffer.length-1 === this.state.operationsBufferIndex}\r\n            title = \"Redo\"\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n            width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n            </button>\r\n            <div className = \"dropdown\">\r\n              <button className = \"saveB\"\r\n              title = \"Save as\"\r\n              style = {{height:Math.min(this.state.width/num_b,100),\r\n              width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n              </button>\r\n              <div className = \"dropdown-content\">\r\n                <a className = \"aFile\" onClick = {() => this.saveAsCSV()}>.csv</a>\r\n                <a className = \"aFile\" onClick = {() => this.saveAs(\"png\")}>.png</a>\r\n                <a className = \"aFile\" onClick = {() => this.saveAs(\"jpg\")}>.jpg</a>\r\n              </div>\r\n            </div>\r\n            <button className = \"uploadB\"\r\n            disabled = {true}\r\n            title = \"Upload\"\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n            width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n            </button>\r\n            <button className = \"exportB\"\r\n            title = \"Export to Network Viusalizer\"\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n            width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n            </button>\r\n            </div>\r\n            <br></br>\r\n           </div>\r\n  }\r\n}\r\n\r\nfunction clearNetwork(that){\r\n  const vertices = {};\r\n  const c = that.state.gridConstant;\r\n  for(let i = 0; i < c; i++){\r\n    for(let j = 0; j < c; j++){\r\n      vertices[[i,j]] = [];\r\n    }\r\n  }\r\n  that.setState({vertices: vertices, edges: {}, edgeStart: [null,null], box:null,\r\n  selected_vertices: null, vertex_list: [], edge_list: [], operationsBuffer: [],\r\n    operationsBufferIndex:-1});\r\n}\r\n\r\nfunction distance(x1,x2,y1,y2){\r\n  return Math.pow(x1-y1,2) + Math.pow(x2-y2, 2);\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\"+color[0]+\",\" + color[1]+\",\"+color[2]+\")\";\r\n}\r\n\r\n\r\n\r\nexport default NetworkCustomVisualizer;\r\n","import React from 'react';\nimport './App.css';\nimport NetworkVisualizer from \"./Network\";\nimport NetworkNavBar from \"./Settings/NetworkNavBar\";\nimport NetworkVisualizer3D from \"./Network3D\";\nimport NetworkCustomVisualizer from \"./NetworkCustom\";\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      running:false,\n      animationSpeed: 50,\n      numV: 120,\n      numE: 300,\n      connected: \"True\",\n      maxE: 600,\n      minE: 20,\n      height: 0,\n      width: 0,\n      settings: {\n        spring: {ka: 2, kr: 1, eps: 0.5,\n                delta: 0.1, areascaling: 0,\n                distanceType: 1},\n        fruchterman: {cTemp: 1,\n                tempHeuristic: \"Logarithmic\", eps: 0.5},\n        forceatlas2: {fr: 10, gravity: false,\n                      gravityType: \"Normal\", kg: 10,\n                      tau: 0.1, ksmax: 10,\n                      overlappingNodes: true},\n        forceatlaslinlog: {fr: 10, gravity: false,\n                      gravityType: \"Normal\", kg: 10,\n                      tau: 0.1, ksmax: 10,\n                      overlappingNodes: true},\n        kruskal: {red: 255,\n                  green: 0,\n                  blue: 0},\n        prim: {red:255,\n               green: 0,\n               blue: 0},\n        opt2:{\n          timeout: 30,\n          red:255,\n          green: 0,\n          blue: 0,\n        },\n        opt2annealing:{\n          timeout: 30,\n          temperature: 100,\n          acceptance: 0.0001,\n          startColor: [255,0,0],\n          endColor: [0,0,255],\n        },\n        opt3:{\n          timeout: 30,\n          red:255,\n          green: 0,\n          blue: 0,\n        },\n        greedy:{\n          startRed: 0,\n          startGreen: 255,\n          startBlue: 0,\n          endRed: 255,\n          endGreen: 0,\n          endBlue: 0,\n        }\n      },\n\n\n      dimension: 2,\n      degreesize: false,\n      minsize: 3,\n      maxsize: 10,\n      startRed: 0,\n      startGreen: 255,\n      startBlue: 255,\n      endRed: 0,\n      endGreen: 255,\n      endBlue: 255,\n      filter: \"\",\n      filtering: false,\n    }\n    this.network = React.createRef();\n    this.network3d = React.createRef();\n    this.customnetwork = React.createRef();\n    this.navbar = React.createRef();\n  }\n\n  componentDidMount(){\n    const w = window.innerWidth;\n    const h = window.innerHeight;\n    this.setState({height: h, width: w});\n  }\n\n  render() {\n    let network;\n    if(this.state.dimension === 2){\n      network = <NetworkVisualizer height = {this.state.height}\n      ref = {this.network} app = {this}/>\n    }\n    else if(this.state.dimension === 3){\n      network = <NetworkVisualizer3D\n      height = {this.state.height}\n      ref = {this.network3d} app = {this}/>\n    }\n    else if(this.state.dimension === \"Custom\"){\n      network = <NetworkCustomVisualizer height = {this.state.height}\n      ref = {this.customnetwork} app = {this}></NetworkCustomVisualizer>\n    }\n\n    return (\n      <div className=\"App\">\n        <div className = \"AppElements\">\n          <NetworkNavBar height = {this.state.height}\n          ref = {this.navbar} app = {this}/>\n          {network}\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}