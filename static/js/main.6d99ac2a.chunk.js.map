{"version":3,"sources":["datatypes/Vertex.js","datatypes/Edge.js","networkgeneration/createRandomNetwork.js","datatypes/Force.js","NetworkAlgorithms/springEmbedding.js","NetworkAlgorithms/FruchtermanReingold.js","NetworkAlgorithms/kamadaKawai.js","NetworkAlgorithms/forceAtlas2.js","NetworkAlgorithms/forceAtlasLinLog.js","datatypes/SquareMatrix.js","Spectral/Hall.js","Spectral/spectralDrawing.js","datatypes/UnionSets.js","MSTAlgorithms/kruskal.js","MSTAlgorithms/prims.js","TSP/opt2.js","TSP/opt2Annealing.js","TSP/opt3.js","Coloring/GreedyColoring.js","Coloring/misraGries.js","Network.js","Settings/GeneralNetworkSettings.js","Settings/AlgorithmAttributes.js","Settings/NetworkAlgorithmSettings.js","Settings/Upload/UploadWindow.js","ConfirmationWindow.js","Settings/NetworkSideDrawer.js","Settings/NetworkNavBar.js","networkgeneration/createRandomNetwork3D.js","NetworkAlgorithms/FruchtermanReingold3D.js","NetworkAlgorithms/springEmbedding3D.js","NetworkAlgorithms/forceAtlasLinLog-3D.js","NetworkAlgorithms/forceAtlas2-3D.js","Network3D.js","NetworkCustom.js","App.js","serviceWorker.js","index.js"],"names":["Vertex","x","y","z","this","undefined","degree","size","color","other","vector","setX","setY","setZ","v","row","toString","colors","split","replace","Edge","start","end","weight","alpha","e","setColor","setAlpha","createRandomNetwork","maxWidth","maxHeight","numV","numE","conn","randomType","startColors","endColors","resize","minsize","maxsize","connected","seed","maxDegree","maxEdges","Math","floor","vertices","available_vertices","center","radius","i","point","createRandomPos","createRandomPosCircle","push","edges","already_connected","Map","remainingEdges","unvisited","visited","vIndex1","pickRandomVertex","v1","removeFromArray","visited_num","vIndex2","v2","increment_degree","indexTo","indexFrom","set","length","connectRandomVertices","slice","random1","random2","console","log","get","splice","root","initial_path","pick_random_array","remove_from_array","next_node","initial_random_cycle","path","startColor","endColor","max_degree","Infinity","max","find_max_degree","shouldRecolor","colorGradient","rgb_to_hsl","startHue","startSaturation","startLightness","endHue","incrementHue","gradient","hsl_to_rgb","red","green","blue","abs","createColorGradient","assign_size","assign_color","random","randomAngle","PI","cos","sin","array","index","concat","item","indexOf","selection","rgbColor","Cmax","Cmin","min","delta","lightness","calculate_hue","hue","saturation","C","m","X","check_degrees","Force","CREP","CSPRING","lx","ly","frepulse","dist","distance","unitV","unitVector","sqrt","fattract","distanceType","pow","new_x","new_y","K","ITERATIONS","unitvector","distX","distY","cool","t","tempHeuristic","initial_temperature","kamadaKawai","graph_distancex","graph_distancey","iterations","L0","new_vertices","new_edges","j","k","adj","force_list","adj_row","force_list_row","max_dij","maxRow","map","apply","FloydWarshallAlgo","ideal_length","maxdM","partials_list","dM","dx","dy","d2Ed2x","d2Ed2y","d2Edxdy","d2Edydx","dEdx","dEdy","new_dEdx","new_dEdy","kr","kg","tau","ksmax","fgravity","dist_center","assert","require","SquareMatrix","array2d","container","return_vector","value","new_mat","new_row","dotProduct","getRow","getColumn","sum","hall","degreeArray","createAdjacencyMatrix","spectralDrawing","W","H","dimension","epsilon","DIMENSION","A","D","Dinv","L","degree_row","inverse_degree_row","laplacian_row","intermediate_mat","matrixMultiply","eigenvectors","new_vi_vector","randomVector","normalize","new_vi","orthogonalize","lMultiply","minX","maxX","minY","maxY","minZ","maxZ","animations","animations_iter","new_vector","reduce","a","b","u","numeratorDtimesUj","rMultiply","numerator","denominator","UnionSets","contents","representative","el","setRepresentative","getRepresentative","VERTICES","kruskal","coloring","rgb_to_str","color_animations","make_set","sorted_edges","sort","e1","e2","copy_input","createFrame","current_vertices","current_edges","trees","tree_indices","add","val","dim","copy_vertex","copy_edge","prim","inital_frame","vertexQueue","key","parent","vertex","pop","poppedValue","I","opt2","better_solution","selected_color","calculate_distance_path","n","new_path","temp","total_dist","opt2Annealing","temperature","minTemperature","maxTemperature","acceptance","selected_index","new_dist","accepted","opt3","c","values","reverse_segment_if_better","B","E","F","d0","d1","d2","d3","d4","reversed_path","reversed_path_three","GreedyColoring","initial_color","end_color","assigned_colors","color1","color2","num_colors","uniform_factor","new_colors","new_hue","convertHSLtoRGB","new_color","convertColor","getAvailableColors","getNeighbors","construct3DacceptableRGB","neighbors","all_colors","available_colors","colorConvert","checkColorIn","arr","parseFloat","color_array","parseInt","misraGries","uncolored_edges","copyEdges","incident_colors","createEmptyColors","incident_vertices","adjacent_vertices","createIncidentVertexList","edge_colors","edge_list","createEdgeColors","edge","getMaxFan","max_fan","fan_colors","u_adjacent_colors","fan_end_adjacent_colors","u_free_color","pickColor","fan_end_free_color","invertPath","w","findFreeColorToRotate","sub_fan","next_vertex","center_vertex","other_vertex","fan_options","other_vertex_index","fan","last_added","maximal","bad_colors","acceptable_color","remove_index","taken_colors","different","current_vertex","last_vertex","is_more_path","switchColor","vertex1","vertex2","R_prime","G_prime","B_prime","is_free","waitAnimateNetwork","that","startIndex","endIndex","func","setState","currentAnimations","currentAnimationIndex","animationIndex","paused","state","group","animateNetwork","animateColoring","animateTSP","NetworkVisualizer","props","canvas","React","createRef","width","height","sorted","maxtimeouts","algoType","layoutType","TSP","offsetX","offsetY","dragging","previousMouseX","previousMouseY","scaleFactor","app","help","tutorial","window","innerHeight","h","startRed","startGreen","startBlue","endRed","endGreen","endBlue","degreesize","mouseX","mouseY","current","ctx","getContext","scale","beginPath","fillStyle","arc","fill","closePath","index1","index2","moveTo","lineTo","globalAlpha","strokeStyle","stroke","cancelAnimation","settings","areascaling","eps","ka","distType","scaling_factor","f","vert_connected","calcs","addVector","iteration_animation","springEmbedding","spring","kIter","coolingtype","cTemp","temperature_list","ncalcs","iter_animations","origin","unitForce","fruchtermanReingold","fruchterman","fr","previous_forces","repulse_force","attractive_force","attractive_force_opp","gravity","center_force","gravity_force","sG","traG","swgG","traN","swgN","sN","forceAtlas2","forceatlas2","forceAtlasLinLog","forceatlaslinlog","waitSetEdges","running","timeout","animationSpeed","current_temperature","opt2annealing","max_temperature","min_temperature","generateForceDirectedLayout","generateReingold","generateKamadaKawai","generateForceAtlas2","generateForceAtlasLinLog","generateHall","generateSpectralDrawing","generateRadialFlowDirected","generateKruskal","generatePrim","generate2Opt","generate2OptAnnealing","generate3Opt","generateGreedyVertex","generateMisraGries","setTimeout","setVector","setRandomizedType","waitSetRandomizedType","waitSetLayout","innerWidth","id","clearInterval","clearAnimations","sameColor","preventDefault","clientX","clientY","deltaX","deltaY","new_offsetX","new_offsetY","wdith","sign","new_scale_factor","animations_index","waitOpenNetworkSettings","waitOpenAlgorithmSettings","csvContent","toCSV","link","document","createElement","href","download","body","appendChild","click","removeChild","extension","image","toDataURL","className","style","marginTop","ref","onMouseLeave","setDrag","onMouseDown","onMouseUp","onMouseMove","updateCamera","onWheel","zoomCamera","title","disabled","backgroundSize","onClick","skipToBeginning","skipBackward","rewindFrame","hidden","runAlgorithm","pauseAnimation","skipFrame","skipForward","skipToEnd","resetCamera","resetColoring","onChange","event","setAlgoType","target","label","saveAsCSV","saveAs","openAlgorithmSettings","resetNetwork","openNetworkSettings","Component","navbar","openSettings","generalsettings","setOpen","algorithmsettings","network","network3d","updateVertexSize","updateColoring","GeneralNetworkSettings","open","convertValuesToRgb","ms","waitSetVertices","waitSetConnected","waitSetDegreeSize","waitSetRed","waitSetGreen","waitSetBlue","waitSetEndRed","waitSetEndGreen","waitSetEndBlue","waitSetMinVertexSize","waitSetMaxVertexSize","isOpen","onRequestClose","overlayClassName","type","setAnimationSpeed","step","name","setVertices","setEdges","setConnected","setScaleDegreeSize","setMinVertexSize","setMaxVertexSize","backgroundColor","setRed","setGreen","setBlue","setEndRed","setEndGreen","setEndBlue","AlgorithmAttributes","layout","parentHelp","crep","cspring","cPercentage","collision","gravityType","overlappingNodes","kruskalred","kruskalgreen","kruskalblue","primred","primgreen","primblue","opt2timeout","opt2red","opt2green","opt2blue","opt2annealingtimeout","opt2annealingtemperature","opt2annealingacceptance","opt2annealingred","opt2annealinggreen","opt2annealingblue","opt2annealingredEnd","opt2annealinggreenEnd","opt2annealingblueEnd","opt3timeout","opt3red","opt3green","opt3blue","greedyStartRed","greedy","greedyStartGreen","greedyStartBlue","greedyEndRed","greedyEndGreen","greedyEndBlue","filtering","filter","waitsetCREP","waitsetCSPRING","waitsetDelta","waitsetEpsilon","waitsetC","waitsetCTEMP","waitsetKr","waitsetGravity","waitsetGravityType","waitsetGravityStrength","waitsetTau","waitsetKsmax","waitsetOverlappingNodes","waitsetTempHeuristic","waitsetCollision","waitsetDistanceType","waitSetKruskalRed","waitSetKruskalGreen","waitSetKruskalBlue","waitSetPrimRed","waitSetPrimGreen","waitSetPrimBlue","waitSetOpt2Timeout","waitSetOpt2Red","waitSetOpt2Green","waitSetOpt2Blue","waitSetOpt3Timeout","waitSetOpt3Red","waitSetOpt3Green","waitSetOpt3Blue","waitSetGreedyStartRed","waitSetGreedyStartGreen","waitSetGreedyStartBlue","waitSetGreedyEndRed","waitSetGreedyEndGreen","waitSetGreedyEndBlue","toLowerCase","setCSPRING","setCREP","setEpsilon","setDelta","setC","setDistanceType","setCTEMP","setTempHeuristic","setKr","setGravity","setGravityStrength","setTau","setKsmax","setOverlappingNodes","setKruskalRed","setKruskalGreen","setKruskalBlue","setPrimRed","setPrimGreen","setPrimBlue","setOpt2Timeout","setOpt2Red","setOpt2Green","setOpt2Blue","setOpt3Timeout","setOpt3Red","setOpt3Green","setOpt3Blue","setGreedyStartRed","setGreedyStartGreen","setGreedyStartBlue","setGreedyEndRed","setGreedyEndGreen","setGreedyEndBlue","waitSetSettings","NetworkAlgorithmSettings","attributes","Modal","setAppElement","UploadWindow","filename","file","error","files","reader","FileReader","readAsText","onload","depth","text","vertex_values","next_values","resizeVertices","edge_values","parseInput","result","relevant_network","customnetwork","upload3D","vertex_list","vertex_grid","edge_map","gridConstant","getGrid","edgeStart","box","selected_vertices","operationsBuffer","operationsBufferIndex","onSubmit","checkFile","setFile","ConfirmationWindow","confirm","msg","trigger","setConfirm","DrawerToggleButton","NetworkSideDrawer","uploadwindow","confirmDimensionWindow","confirmCustomWindow","getElementById","overlay","top","switchDimension","setCustomNetwork","NetworkNavBar","search","search_term","setAttribute","fontSize","setSearch","openSearch","minLength","list","createRandomNetwork3D","maxDepth","createRandomPosSphere","theta","asin","distZ","new_z","NetworkVisualizer3D","scene","camera","renderer","spheres","lines","d","THREE","setSize","pointLight","position","render","geometry","material","sphere","opacity","points","setFromPoints","line","pos","needsUpdate","springEmbedding3D","fruchtermanReingold3D","forceAtlas23D","forceAtlasLinLog3D","cameraChanged","old_size","endDrag","startDrag","rotateCamera","clearNetwork","x1","x2","y1","y2","NetworkCustomVisualizer","gridX","gridY","edgeStartIndex","mouseLeave","operationType","startBoxVertices","confirmClear","clearRect","lineWidth","setLineDash","prevX","previousX","prevY","previousY","startX","startY","rect","getBoundingClientRect","tryConnectEdge","createBox","xPos","left","yPos","placeVertex","alert","vertexX","vertexY","tooClose","details","vertexIndex","grid","gridIndex","addActionToBuffer","edge_startX","edge_startY","addEdge","new_edge_list","startVertexIndex","endVertexIndex","updateSelectedVertices","new_grid","updateVertexGrids","selected_vertex","old_grid","index_value","selectVertices","selected_vertices_copy","new_details","box_select","startBox","isDifferentBox","x0","y0","startGrid","endGrid","res","boxesToCheck","getListGrid","unPackVertexFromGrid","box_array","index_list","buffer","bufferIndex","new_buffer","setOperationType","endBox","clearDragOutcome","processClickOutcome","updateCursorPostion","processMouseLeave","processDragOutcome","undoActionFromBuffer","redoActionFromBuffer","App","maxE","minE","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6d99ac2a.chunk.js","sourcesContent":["class Vertex {\r\n  constructor(x, y, z){\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    if(this.z === undefined) this.z = null;\r\n    this.degree = 0;\r\n    this.size = 3;\r\n    this.color = \"rgb(0,255,255)\";\r\n  }\r\n\r\n  add(other){\r\n    this.x += other.x;\r\n    this.y += other.y;\r\n    if(this.z !== null) this.z += other.z;\r\n  }\r\n\r\n  /*In case we need to set specific coordinates, but we shouldn't have to */\r\n\r\n  setX(x){\r\n    this.x = x;\r\n  }\r\n\r\n  setY(y){\r\n    this.y = y;\r\n  }\r\n\r\n  setZ(z){\r\n    this.z = z;\r\n  }\r\n\r\n  increment_degree(){\r\n    this.degree += 1;\r\n  }\r\n\r\n  setSize(size){\r\n    this.size = size;\r\n  }\r\n\r\n  setColor(color){\r\n    this.color = color;\r\n  }\r\n\r\n  setVector(vector){\r\n    this.setX(vector[0]);\r\n    this.setY(vector[1]);\r\n    if(vector[2] !== undefined && this.z !== null){\r\n      this.setZ(vector[2]);\r\n    }\r\n  }\r\n\r\n  copy_vertex(){\r\n    const v = new Vertex(this.x, this.y, this.z);\r\n    v.color = this.color;\r\n    v.degree = this.degree;\r\n    v.size = this.size;\r\n    return v;\r\n  }\r\n\r\n  toCSV(){\r\n    var row = \"vertex,\";\r\n    row += this.x.toString()+\",\";\r\n    row += this.y.toString()+\",\";\r\n    if(this.z === null) row += \" ,\";\r\n    else{ row += this.z.toString()+\",\"};\r\n    row += this.degree.toString() + \",\";\r\n    row+= this.size.toString() + \",\";\r\n    const color = this.color;\r\n    const colors = color.split(\",\")\r\n    colors[0] = colors[0].replace(\"rgb\", \"\");\r\n    colors[0] = colors[0].replace(\"(\", \"\");\r\n    colors[2] = colors[2].replace(\")\", \"\");\r\n    row += colors[0] +\",\";\r\n    row += colors[1] + \",\";\r\n    row += colors[2] + \"\\n\";\r\n    return row;\r\n  }\r\n}\r\n\r\nexport default Vertex;\r\n","class Edge{\r\n  /*\r\n  Colors are in rgba format\r\n  */\r\n  constructor(start, end, color, weight){\r\n    this.start = start;\r\n    this.end = end;\r\n    this.weight = weight;\r\n    if(this.weight === undefined || this.weight === null) this.weight = 1;\r\n    this.color = color;\r\n    if(this.color === undefined || color ===null) this.color = \"rgb(0,0,0)\";\r\n    this.alpha = 0.1;\r\n  }\r\n\r\n  setColor(color){\r\n    this.color = color;\r\n  }\r\n\r\n  setAlpha(alpha){\r\n    this.alpha = alpha;\r\n  }\r\n\r\n  copy_edge(){\r\n    const e = new Edge(this.start, this.end);\r\n    e.setColor(this.color);\r\n    e.setAlpha(this.alpha);\r\n    return e;\r\n  }\r\n\r\n  toCSV(){\r\n    var row = \"edge,\";\r\n    row += this.start.toString() +\",\";\r\n    row += this.end.toString() + \",\";\r\n    row += this.weight.toString() +\",\";\r\n    row += this.alpha.toString() + \",\";\r\n    const color = this.color;\r\n    const colors = color.split(\",\")\r\n    colors[0] = colors[0].replace(\"rgb\", \"\");\r\n    colors[0] = colors[0].replace(\"(\", \"\");\r\n    colors[2] = colors[2].replace(\")\", \"\");\r\n    row += colors[0] +\",\";\r\n    row += colors[1] + \",\";\r\n    row += colors[2] + \"\\n\";\r\n    return row;\r\n  }\r\n}\r\n\r\nexport default Edge;\r\n","import Vertex from \"../datatypes/Vertex\";\r\nimport Edge from \"../datatypes/Edge\";\r\n\r\nexport default function createRandomNetwork(maxWidth, maxHeight, numV, numE, conn, randomType, startColors, endColors, resize, minsize, maxsize){\r\n  let connected = conn === undefined? \"False\": conn;\r\n  let seed = randomType === undefined? \"random\": randomType;\r\n  // console.log(\"startColors:\", startColors);\r\n  // console.log(\"endColors:\", endColors);\r\n  // console.log(\"resize\", resize);\r\n  // console.log(\"minsize\", minsize);\r\n  // console.log(\"maxsize\", maxsize);\r\n  const maxDegree = numV-1;\r\n  let maxEdges = Math.floor((maxDegree*numV)/2)\r\n  const maxEdgesValue = maxEdges;\r\n  let vertices = [];\r\n  let available_vertices = [];\r\n  const center = [maxWidth/2, maxHeight/2];\r\n  const radius = (maxHeight/2)*0.90;\r\n\r\n  //create random points on canvas\r\n  for(let i = 0; i < numV; i ++){\r\n    var point = [0,0]\r\n    if(seed === \"random\" || seed === \"cycle\") point = createRandomPos(maxWidth, maxHeight);\r\n    if(seed === \"randomcircle\") point = createRandomPosCircle(center, radius);\r\n    vertices.push( new Vertex(point[0], point[1]));\r\n    available_vertices.push(i);\r\n  }\r\n  let edges = [];\r\n  if(!(seed === \"cycle\")){\r\n    let already_connected = new Map();\r\n    let remainingEdges = numE;\r\n    if(connected === \"True\"){\r\n      let unvisited = [];\r\n      for(var i = 0; i < numV; i++){\r\n        unvisited.push(i);\r\n      }\r\n      let visited = [];\r\n      var vIndex1 = pickRandomVertex(unvisited);\r\n      var v1 = unvisited[vIndex1];\r\n      visited.push(v1);\r\n      unvisited = removeFromArray(unvisited, vIndex1);\r\n\r\n      var visited_num = 1;\r\n      while(visited_num < numV){\r\n        var vIndex2 = pickRandomVertex(unvisited)\r\n        var v2 = unvisited[vIndex2];\r\n        visited.push(v2); //add to visited\r\n        edges.push( new Edge(v1,v2));\r\n        vertices[v1].increment_degree();\r\n        vertices[v2].increment_degree();\r\n        remainingEdges --;\r\n        maxEdges --;\r\n        const indexTo = v1 + 1000* v2; // works as long as numV < 1000\r\n        const indexFrom = v2+ 1000*v1;\r\n        already_connected.set(indexTo, true);\r\n        already_connected.set(indexFrom, true);\r\n        //remove from unvisited\r\n        unvisited = removeFromArray(unvisited, vIndex2);\r\n        //reset v1\r\n        vIndex1 = pickRandomVertex(visited);\r\n        v1 = visited[vIndex1];\r\n        visited_num ++;\r\n      }\r\n    }\r\n    while(remainingEdges > 0 && maxEdges > 0 && available_vertices.length > 1){\r\n      const [random1, random2] = connectRandomVertices(available_vertices.slice());\r\n      if(random1 === random2) console.log(\"unexpected\");\r\n      if(random1 === undefined) console.log(\"unexpected undefiend 1\");\r\n      if(random2 === undefined) console.log(\"unexpected undefined 2\");\r\n      // console.log(\"rem:\", remainingEdges, \"max\", maxEdges);\r\n      const indexTo = random1+1000*random2; // as long as numV < 1000 this works\r\n      const indexFrom = random2+1000*random1;\r\n      if(already_connected.get(indexTo) === undefined ){\r\n        edges.push(new Edge(random1, random2));\r\n        vertices[random1].increment_degree();\r\n        vertices[random2].increment_degree();\r\n        if(vertices[random1].degree > maxDegree) available_vertices.splice(random1, 1);\r\n        if(vertices[random2].degree > maxDegree) available_vertices.splice(random2, 1);\r\n        already_connected.set(indexTo, true);\r\n        already_connected.set(indexFrom, true);\r\n        remainingEdges --;\r\n        maxEdges --;\r\n        }\r\n      }\r\n  }\r\n  else{\r\n    //seed = cycle\r\n    var [path,root] = initial_random_cycle(vertices);\r\n    for(let i = 0; i < path.length-1; i++){\r\n      const e = new Edge(path[i], path[i+1])\r\n      e.setAlpha(0.2);\r\n      edges.push(e);\r\n    }\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      vertices[i].degree = 2;\r\n    }\r\n  }\r\n\r\n\r\n  var max_degree = find_max_degree(vertices);\r\n  // console.log(\"max_degree\", max_degree);\r\n  var shouldRecolor = !(sameColor(startColors, endColors));\r\n  // console.log(shouldRecolor);\r\n  var colorGradient;\r\n  if(shouldRecolor === true) var colorGradient = createColorGradient(startColors, endColors, max_degree);\r\n  // console.log(colorGradient);\r\n  if(resize === true || shouldRecolor === true){\r\n  for(let i = 0; i < vertices.length; i++){\r\n      if(resize === true) vertices[i].size = assign_size(vertices[i].degree, max_degree, minsize, maxsize);\r\n      if(shouldRecolor === true) vertices[i].color = assign_color(vertices[i].degree, max_degree, colorGradient);\r\n      // console.log(vertices[i].size)\r\n      // console.log(vertices[i].color);\r\n    }\r\n  }\r\n\r\n  return [vertices,edges];\r\n}\r\n\r\nfunction createRandomPos(maxWidth, maxHeight){\r\n  return [Math.random()*(maxWidth+1-3), Math.random()*(maxHeight+1-3)];\r\n}\r\n\r\nfunction createRandomPosCircle(center,radius){\r\n  const randomAngle = Math.random()*(2*Math.PI);\r\n  return [center[0] + radius*Math.cos(randomAngle), center[1]+radius*Math.sin(randomAngle)];\r\n}\r\n\r\nfunction connectRandomVertices(vertices){\r\n  var random1 = vertices[Math.floor(Math.random()*vertices.length)];\r\n  vertices.splice(random1,1);\r\n  var random2 = vertices[Math.floor(Math.random()*vertices.length)];\r\n\r\n  return [random1, random2];\r\n}\r\n\r\nfunction pickRandomVertex(array){\r\n  return Math.floor(Math.random()*array.length)\r\n}\r\n\r\nfunction removeFromArray(array, index){\r\n  return array.slice(0,index).concat(array.slice(index+1))\r\n}\r\n\r\nfunction initial_random_cycle(vertices){\r\n\r\n  var root = 0;\r\n  var initial_path = []\r\n\r\n  //construct adjacency matrix\r\n  const adj = []\r\n  var available_vertices = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    available_vertices.push(i);\r\n\r\n  }\r\n\r\n\r\n  root = pick_random_array(available_vertices);\r\n  available_vertices = remove_from_array(available_vertices, root);\r\n\r\n  initial_path.push(root);\r\n  for(let i = 0; i < vertices.length -1; i++){\r\n    const next_node = pick_random_array(available_vertices);\r\n    available_vertices = remove_from_array(available_vertices, next_node);\r\n    initial_path.push(next_node);\r\n  }\r\n  initial_path.push(root);\r\n\r\n  return [initial_path, root];\r\n}\r\n\r\nfunction remove_from_array(array, item){\r\n  var index  = array.indexOf(item)\r\n  return array.slice(0,index).concat(array.slice(index+1));\r\n}\r\n\r\nfunction pick_random_array(array){\r\n  return array[Math.floor(Math.random()*array.length)];\r\n}\r\n\r\nfunction find_max_degree(vertices){\r\n  var max_degree = -Infinity;\r\n  for(let i = 0; i < vertices.length; i++){\r\n    max_degree = Math.max(vertices[i].degree, max_degree);\r\n  }\r\n  return max_degree;\r\n}\r\n\r\nfunction assign_size(degree, max_degree, minsize, maxsize){\r\n  //min degree is 1 or 0\r\n  return minsize +(maxsize - minsize)*(degree/max_degree)\r\n}\r\n\r\nfunction assign_color(degree, max_degree, gradient){\r\n\r\n  var selection = gradient[Math.floor((degree/max_degree) * (gradient.length-1))]\r\n\r\n  return rgb_to_str(selection)\r\n}\r\n\r\nfunction createColorGradient(startColor, endColor, maxDegree){\r\n  // console.log(\"inside color gradient\", startColor, endColor, maxDegree);\r\n  var [startHue, startSaturation, startLightness] = rgb_to_hsl(startColor);\r\n  var [endHue, endSaturation, endLightness] = rgb_to_hsl(endColor);\r\n\r\n  // console.log(startHue, startSaturation, startLightness);\r\n  // console.log(endHue, endSaturation, endLightness);\r\n  var incrementHue = (endHue-startHue)/maxDegree;\r\n\r\n  const gradient = [];\r\n\r\n  for(let i = 0; i < maxDegree; i++){\r\n    const newHue = startHue+(incrementHue*i)%360;\r\n    const [red,green,blue] = hsl_to_rgb((startHue+incrementHue*i)%360, startSaturation,\r\n                                            startLightness)\r\n    gradient.push([Math.abs(red%256), Math.abs(green%256), Math.abs(blue%256)]);\r\n    // console.log(gradient[i]);\r\n  }\r\n  return gradient;\r\n}\r\n\r\nfunction rgb_to_hsl(rgbColor){\r\n  var red = rgbColor[0]/255;\r\n  var green = rgbColor[1]/255;\r\n  var blue = rgbColor[2]/255;\r\n  var Cmax = Math.max(...[red,green,blue]);\r\n  var Cmin = Math.min(...[red,green,blue]);\r\n  var delta = Cmax-Cmin;\r\n\r\n\r\n  var hue = calculate_hue(delta, Cmax, red, green, blue)%360;\r\n  var lightness = (Cmax+Cmin)/2;\r\n  var saturation = delta === 0? 0: delta/(1-Math.abs(2*lightness-1));\r\n\r\n  return [hue, saturation, lightness];\r\n}\r\n\r\nfunction hsl_to_rgb(hue, saturation, lightness){\r\n  const C = (1 - Math.abs(2*lightness-1))*saturation\r\n  const X = C * (1 - Math.abs(hue/60)%2 -1);\r\n  const m = lightness - C/2;\r\n  const [R_prime, G_prime, B_prime] = check_degrees(hue, C, X);\r\n  return [((R_prime+m)*255)%256, ((G_prime + m)* 255)%256, ((B_prime+m) * 255)%256];\r\n}\r\n\r\nfunction calculate_hue(delta, Cmax, red, green, blue){\r\n  if(delta === 0) return 0;\r\n  if(Cmax === red) return 60*(((green-blue)/delta)%6);\r\n  if(Cmax === green) return 60*((blue-red)/delta+2);\r\n  if(Cmax === blue) return 60*((red- green)/delta + 4);\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\" + color[0] + \",\" + color[1] + \",\" + color[2]+\")\";\r\n}\r\n\r\n/*\r\nInput is RGB colors in 3d array\r\n*/\r\nfunction sameColor(startColor, endColor){\r\n  if(startColor[0] === endColor[0] && startColor[1] === endColor[1] && startColor[2] === endColor[2]) return true;\r\n  return false;\r\n}\r\n\r\nfunction check_degrees(hue, C, X){\r\n  if((hue >= 0 && hue < 60) || hue == 360) return [C,X,0];\r\n  if(hue >= 60 && hue < 120 ) return [X,C,0];\r\n  if(hue >= 120 && hue < 180 ) return [0, C, X];\r\n  if(hue >= 180 && hue < 240 ) return [0, X, C];\r\n  if(hue >= 240 && hue < 300 ) return [X, 0, C];\r\n  if(hue >= 300 && hue < 360 ) return [C, 0, X];\r\n  return [0,0,0];\r\n}\r\n","class Force{\r\n  constructor(x,y,z){\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    if(this.z === undefined) this.z = null;\r\n  }\r\n\r\n  setX(x){\r\n    this.x = x;\r\n  }\r\n\r\n  setY(y){\r\n    this.y = y;\r\n  }\r\n\r\n  setZ(z){\r\n    this.z = z;\r\n  }\r\n\r\n  addVector(vector){\r\n    this.x += vector[0];\r\n    this.y += vector[1];\r\n    if(vector[2]!== undefined && this.z !== null){\r\n      this.z += vector[2];\r\n    }\r\n  }\r\n\r\n  scale(delta){\r\n    this.setX(this.x*delta);\r\n    this.setY(this.y*delta);\r\n    if(this.z !== null){\r\n      this.setZ(this.z*delta);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Force;\r\n","import Force from \"../datatypes/Force\";\r\n\r\nvar CREP = 20;\r\nvar CSPRING = 20;\r\nvar lx = 0;\r\nvar ly = 0;\r\n/**\r\n* Basic spring embedding algorithm\r\n*/\r\nexport function springEmbedding(vertices,edges,graph_distancex, graph_distancey, iterations, settings){\r\n  // relevant constants for spring embedding\r\n  const W = graph_distancex -6;\r\n  const L = graph_distancey -6;\r\n  lx = 1 + ((Math.sqrt(W)/2-1)*settings.areascaling)/100;\r\n  ly = 1 + ((Math.sqrt(L)/2-1)*settings.areascaling)/100;\r\n  const K = iterations;\r\n\r\n  const epsilon = settings.eps;\r\n  const delta = settings.delta;\r\n  CREP = settings.kr;\r\n  CSPRING = settings.ka;\r\n  const distType = settings.distanceType;\r\n\r\n  // console.log(settings);\r\n\r\n  let t = 1;\r\n  let animations = [];\r\n  let scaling_factor = [];\r\n\r\n  while(t<K){\r\n    let force_list = [];\r\n    for(let i =0; i < vertices.length; i++){\r\n      let f = new Force(0,0);\r\n      let vert_connected = []; //represents vertices we should not repulse later\r\n      // CALCULATE ATTRACTION FORCES\r\n      for(let j = 0; j < edges.length; j++){\r\n        if(i === edges[j].start && i !== edges[j].end){\r\n          const calcs = fattract(vertices[edges[j].start], vertices[edges[j].end], distType);\r\n          f.addVector(calcs)\r\n          vert_connected.push(edges[j].end);\r\n        }\r\n        if(i === edges[j].end && i !== edges[j].start){\r\n          const calcs = fattract(vertices[edges[j].end], vertices[edges[j].start], distType)\r\n          f.addVector(calcs)\r\n          vert_connected.push(edges[j].start);\r\n        }\r\n      }\r\n      //CALCULATE REPULSIVE FORCES\r\n      for(let j =0; j < vertices.length; j++){\r\n        if(i === j ) continue;\r\n        let connected = false;\r\n        for(let k = 0; k < vert_connected.length; k++){\r\n          if(j === vert_connected[k]) connected = true;\r\n        }\r\n        if(!connected){\r\n          const calcs = frepulse(vertices[i], vertices[j]);\r\n          f.addVector(calcs)\r\n        }\r\n      }\r\n      force_list.push(f)\r\n    }\r\n\r\n\r\n    //UPDATE POSITIONS\r\n    const iteration_animation = [];\r\n    var maxF = 0;\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var maxX = 0;\r\n    var maxY = 0;\r\n\r\n    for(let i = 0; i < vertices.length; i++){\r\n      force_list[i].scale(delta);\r\n      vertices[i].add(force_list[i]);\r\n\r\n      //update scaling_factor\r\n      minX =  minX = Math.min(minX, vertices[i].x)\r\n      minY = Math.min(minY, vertices[i].y);\r\n      maxX = vertices[i].x > maxX? vertices[i].x:maxX;\r\n      maxY = vertices[i].y > maxY? vertices[i].y:maxY;\r\n      //update animations\r\n      iteration_animation.push([vertices[i].x, vertices[i].y]);\r\n    }\r\n    scaling_factor.push([-minX, -minY, W/((-minX)+maxX), L/((-minY)+maxY)])\r\n\r\n\r\n    animations.push(iteration_animation);\r\n    t += 1\r\n  }\r\n  //scale animations properly without affecting computations\r\n  for(let i = 0; i < animations.length; i++){\r\n    for(let j = 0; j < animations[i].length; j ++){\r\n      animations[i][j][0] = (animations[i][j][0] + scaling_factor[i][0])*scaling_factor[i][2];\r\n      animations[i][j][1] = (animations[i][j][1] + scaling_factor[i][1])*scaling_factor[i][3];\r\n    }\r\n  }\r\n\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var maxX = 0;\r\n  var maxY = 0;\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    maxX = vertices[i].x > maxX? vertices[i].x:maxX;\r\n    maxY = vertices[i].x > maxY? vertices[i].y:maxY;\r\n  }\r\n  minX = Math.min(minX, 0);\r\n  minY = Math.min(minY, 0);\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    vertices[i].x = (vertices[i].x + Math.abs(minX)) * Math.min(1,(W/(Math.max(maxX,W)+Math.abs(minX))));\r\n    vertices[i].y = (vertices[i].y + Math.abs(minY)) * Math.min(1,(L/(Math.max(maxY,L) + Math.abs(minY))));\r\n  }\r\n  return [vertices, animations];\r\n}\r\n\r\n\r\n\r\n\r\nfunction frepulse(v1,v2){\r\n  var dist = distance(v2,v1);\r\n  const unitV = unitVector(v2,v1);\r\n  return [(CREP*unitV[0])/Math.sqrt(dist) , (CREP*unitV[1])/Math.sqrt(dist)];\r\n\r\n}\r\n\r\nfunction fattract(v1,v2, distanceType){\r\n  var dist = distance(v1,v2);\r\n  const unitV = unitVector(v1,v2);\r\n\r\n  return [CSPRING* Math.log(dist/(lx)) * unitV[0],\r\n          CSPRING* Math.log(dist/(ly)) * unitV[1]];\r\n}\r\n\r\nfunction distance(v1,v2){\r\n  const dist = Math.sqrt(Math.pow((v1.x - v2.x), 2) + Math.pow((v1.y - v2.y), 2))\r\n  return dist === 0? 0.00000000000000000001: dist;\r\n}\r\n\r\n/**\r\n* UnitVector from X to Y\r\n*/\r\nfunction unitVector(v1,v2){\r\n  const new_x = v2.x - v1.x;\r\n  const new_y = v2.y - v1.y;\r\n  const dist = distance(v1,v2);\r\n  return [new_x/dist, new_y/dist];\r\n}\r\n","import Force from \"../datatypes/Force\";\r\nimport Vertex from \"../datatypes/Vertex\";\r\nvar C= 1;\r\nvar K = 0.01; //OPTIMAL DISTANCE\r\nvar ITERATIONS = 300;\r\n\r\nexport function fruchtermanReingold(vertices,edges,graph_distancex, graph_distancey, iterations, settings){\r\n  const W = graph_distancex -6;\r\n  const L = graph_distancey -6;\r\n  const kIter = iterations;\r\n  ITERATIONS = kIter;\r\n  const coolingtype = settings.tempHeuristic;\r\n  const tempHeuristic = settings.tempHeuristic;\r\n  C = 1;\r\n  K = C* Math.sqrt((W)*(L)/(vertices.length));\r\n  const epsilon = settings.eps;\r\n\r\n  // console.log(settings);\r\n\r\n\r\n  let t = 1;\r\n  let animations = [];\r\n  let temperature = (1/10)*W * settings.cTemp;\r\n  let temperature_list = [];\r\n  let previousAngle = [];\r\n  let scaling_factor = [];\r\n  if(coolingtype === \"Directional\"){\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      temperature_list.push(temperature);\r\n    }\r\n  }\r\n  const initial_temperature = temperature;\r\n\r\n  while(t<kIter){\r\n    let force_list = [];\r\n    //calculate repulsive forces\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      let f = new Force(0,0);\r\n      for(let j = 0; j < vertices.length; j ++){\r\n        if(i!== j){\r\n          const delta = distance(vertices[i], vertices[j]);\r\n          const calcs = frepulse(vertices[i], vertices[j], delta);\r\n          // var delta = distance(vertices[i], vertices[j]);\r\n          // var unitvector = unitVector(vertices[j], vertices[i])\r\n          f.addVector(calcs);\r\n        }\r\n      }\r\n      force_list.push(f);\r\n    }\r\n    //calculate attractive forces\r\n    for(let i = 0; i < edges.length; i++){\r\n      const e = edges[i];\r\n      if(e.start === e.end) console.log(\"well fuck\");\r\n      const delta = distance(vertices[e.start], vertices[e.end]);\r\n      const calcs = fattract(vertices[e.start], vertices[e.end], delta);\r\n      const ncalcs = [-calcs[0], -calcs[1]]\r\n\r\n      force_list[e.end].addVector(calcs);\r\n      force_list[e.start].addVector(ncalcs);\r\n    }\r\n    //update positions\r\n    const iter_animations = [];\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var maxX = 0;\r\n    var maxY = 0;\r\n    var maxForce = 0;\r\n    const origin = new Vertex(0,0);\r\n\r\n    for(let i = 0; i < vertices.length; i++){\r\n      const unitvector = unitVector(force_list[i], origin)\r\n      const unitForce = new Force(unitvector[0], unitvector[1])\r\n      unitForce.setX(unitForce.x*Math.min(temperature, Math.abs(force_list[i].x)));\r\n      unitForce.setY(unitForce.y*Math.min(temperature, Math.abs(force_list[i].y)))\r\n\r\n      vertices[i].add(unitForce);\r\n\r\n      //UPDATE CONVERGENCE\r\n      // if(i == 1){\r\n      //   maxForce = distance([new_x,new_y], old_vertices);\r\n      // }\r\n      // else{\r\n      //   maxForce = distance([new_x,new_y], old_vertices) > maxForce? distance([new_x,new_y], old_vertices): maxForce;\r\n      // }\r\n\r\n\r\n      minX =  minX = Math.min(minX, vertices[i].x)\r\n      minY = Math.min(minY, vertices[i].y);\r\n      maxX = vertices[i].x > maxX? vertices[i].x:maxX;\r\n      maxY = vertices[i].y > maxY? vertices[i].y:maxY;\r\n\r\n      iter_animations.push([vertices[i].x, vertices[i].y])\r\n    }\r\n    //update scaling factors, animations and particle temperature\r\n    scaling_factor.push([-minX,-minY, W/(-minX+maxX), L/(-minY+maxY)]);\r\n    animations.push(iter_animations);\r\n\r\n    if(tempHeuristic !== \"Directional\")temperature = cool(temperature, tempHeuristic, initial_temperature);\r\n    t+= 1;\r\n    // if(maxForce < epsilon) break;\r\n  }\r\n  const iter_animations = [];\r\n\r\n  for(let i = 0; i < animations.length; i++){\r\n    for(let j = 0; j < animations[i].length; j ++){\r\n      animations[i][j][0] = (animations[i][j][0] + scaling_factor[i][0])*scaling_factor[i][2];\r\n      animations[i][j][1] = (animations[i][j][1] + scaling_factor[i][1])*scaling_factor[i][3];\r\n    }\r\n  }\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var maxX = 0;\r\n  var maxY = 0;\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    maxX = vertices[i].x > maxX? vertices[i].x:maxX;\r\n    maxY = vertices[i].y > maxY? vertices[i].y:maxY;\r\n  }\r\n  // maxX = Math.max(W, maxX);\r\n  // maxY = Math.max(L, maxY);\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    vertices[i].x = (vertices[i].x + (-minX)) * W/(-minX+maxX);\r\n    vertices[i].y = (vertices[i].y + (-minY)) * L/(-minY+maxY);\r\n  }\r\n  // console.log(vertices);\r\n  return [vertices, animations];\r\n}\r\n\r\nfunction frepulse(v1,v2, delta){\r\n  const unitvector = unitVector(v1,v2)\r\n\r\n  return [((Math.pow(K,2))/delta)*unitvector[0], ((Math.pow(K,2))/delta)*unitvector[1]];\r\n}\r\n\r\nfunction fattract(v1,v2,delta){\r\n  const unitvector = unitVector(v1,v2);\r\n\r\n  return [unitvector[0]*(Math.pow(delta,2))/K, unitvector[1]*(Math.pow(delta,2))/K];\r\n}\r\n\r\nfunction distance(v1,v2){\r\n  // console.log(x,y);\r\n  var distX = Math.pow((v1.x - v2.x), 2);\r\n  var distY = Math.pow((v1.y - v2.y), 2);\r\n  if(distX + distY === 0) distX = 0.00000000000000000001\r\n\r\n  return  Math.sqrt((distX + distY));\r\n}\r\n/**\r\n* UnitVector from X to Y\r\n*/\r\nfunction unitVector(v1,v2){\r\n  const new_x = v2.x - v1.x;\r\n  const new_y = v2.y - v1.y;\r\n  const dist = distance(v1,v2);\r\n  return [new_x/dist, new_y/dist];\r\n}\r\n\r\nfunction cool(t, tempHeuristic, initial_temperature){\r\n  if(tempHeuristic === \"Linear\"){\r\n    return t - initial_temperature/ITERATIONS\r\n  }\r\n  if(tempHeuristic === \"Logarithmic\"){\r\n    return 0.90*t\r\n  }\r\n  if(tempHeuristic === \"Directional\"){\r\n    return t\r\n  }\r\n  return t\r\n}\r\n\r\nfunction findAngle(x,y){\r\n  const angle = Math.atan((y[1] - x[1])/(y[0] - x[0]));\r\n  return angle === undefined? 0: angle\r\n}\r\n","export function kamadaKawai(vertices,edges, graph_distancex, graph_distancey, iterations){\r\n  //relevant constants\r\n\r\n  const L0 = (graph_distancex+graph_distancey)/2;\r\n  const L = 2;\r\n  const K = 1;\r\n  const epsilon = 1;\r\n\r\n  let new_vertices = [];\r\n  for(let i= 0; i < vertices.length; i++){\r\n    new_vertices.push(vertices[i].slice());\r\n  }\r\n  let new_edges = [];\r\n  //make a copy of edges and copy references of new_vertices\r\n  for(let i = 0; i < vertices.length; i++){\r\n    for(let j = 0; j < vertices.length; j++){\r\n      for(let k =0; k < edges.length; k++){\r\n        if(i === edges[k][0] && j === edges[k][1]){\r\n          new_edges.push([i,j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //create adjacency matrix\r\n  const adj = [];\r\n  // const ideal_lengths = [];\r\n  const force_list = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    const adj_row = [];\r\n    // const ideal_length_row = [];\r\n    const force_list_row = [];\r\n    for(let j = 0; j < vertices.length; j++){\r\n      if(i == j) adj_row.push(0);\r\n      if(i!== j) adj_row.push(Infinity);\r\n      // ideal_length_row.push(0);\r\n      force_list_row.push(0);\r\n    }\r\n    // ideal_lengths.push(ideal_length_row);\r\n    force_list.push(force_list_row);\r\n    adj.push(adj_row)\r\n  }\r\n  for(let i = 0; i< edges.length; i++){\r\n    adj[new_edges[i][0]][new_edges[i][1]] = 1;\r\n    adj[new_edges[i][1]][new_edges[i][0]] = 1;\r\n  }\r\n  const max_dij = FloydWarshallAlgo(adj);\r\n  console.log(adj);\r\n\r\n  //compute lij\r\n  const ideal_length = L*L0/max_dij;\r\n  console.log(ideal_length);\r\n\r\n  //compute kij\r\n  for(let i = 0; i < vertices.length; i++){\r\n    for(let j = 0; j < vertices.length; j ++){\r\n      if(i !== j){force_list[i][j] = K/(Math.pow(adj[i][j],2))};\r\n    }\r\n  }\r\n\r\n  let maxdM = Infinity;\r\n  const partials_list = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    partials_list.push([0,0]);\r\n  }\r\n\r\n  while(maxdM > epsilon){\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      for(let j = 0; j < vertices.length; j ++){\r\n        if(i !== j){\r\n          partials_list[i][0] += adj[i][j] * (new_vertices[i][0] - new_vertices[j][0] - (ideal_length*(new_vertices[i][0] - new_vertices[j][0]))/distance(new_vertices[i],new_vertices[j]));\r\n          partials_list[i][1] += adj[i][j] * (new_vertices[i][1] - new_vertices[j][1] - (ideal_length*(new_vertices[i][1] - new_vertices[j][1]))/distance(new_vertices[i],new_vertices[j]));\r\n        }\r\n      }\r\n    }\r\n    const dM = [];\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      const dist = distance(partials_list[i], [0,0]);\r\n      dM.push(dist);\r\n    }\r\n    maxdM = Math.max(...dM);\r\n    const index = dM.indexOf(maxdM);\r\n    while(maxdM > epsilon){\r\n      var d2Ed2x = 0;\r\n      var d2Ed2y = 0;\r\n      var d2Edxdy = 0;\r\n      var d2Edydx = 0;\r\n      var dEdx = 0;\r\n      var dEdy = 0;\r\n      var dx = 0;\r\n      var dy = 0;\r\n      for(let i = 0; i < vertices.length; i++){\r\n        if(i !== index){\r\n          d2Ed2x += adj[index][i] * (new_vertices[index][0] - new_vertices[i][0] - (ideal_length*Math.pow(new_vertices[index][0] - new_vertices[i][0],2))/Math.pow(distance(new_vertices[index],new_vertices[i]), 3));\r\n          d2Ed2y += adj[index][i] * (new_vertices[index][1] - new_vertices[i][1] - (ideal_length*Math.pow(new_vertices[index][1] - new_vertices[i][1],2))/Math.pow(distance(new_vertices[index],new_vertices[i]),3));\r\n          d2Edxdy += adj[index][i] * (ideal_length*(new_vertices[index][0]-new_vertices[i][0])*(new_vertices[index][1] - new_vertices[i][1]))/(Math.pow(distance(new_vertices[index], new_vertices[i]),3));\r\n          d2Edydx += adj[index][i] * (ideal_length*(new_vertices[index][0]-new_vertices[i][0])*(new_vertices[index][1] - new_vertices[i][1]))/(Math.pow(distance(new_vertices[index], new_vertices[i]),3));\r\n          dEdx += adj[index][i] * (new_vertices[index][0] - new_vertices[i][0] - (ideal_length*(new_vertices[index][0] - new_vertices[i][0]))/distance(new_vertices[index],new_vertices[i]));\r\n          dEdy += adj[index][i] * (new_vertices[index][1] - new_vertices[i][1] - (ideal_length*(new_vertices[index][1] - new_vertices[i][1]))/distance(new_vertices[index],new_vertices[i]));\r\n        }\r\n      }\r\n      dx = (-dEdx -d2Edxdy*(-dEdy/d2Edydx))/(d2Ed2x - (d2Edxdy*d2Ed2y)/d2Edydx)\r\n      dy = (-d2Ed2y*dx - dEdy)/(d2Edydx)\r\n      new_vertices[index][0] = new_vertices[index][0] + dx;\r\n      new_vertices[index][1] = new_vertices[index][1] + dy;\r\n      var new_dEdx = 0;\r\n      var new_dEdy = 0;\r\n      for(let i = 0; i < vertices.length; i++){\r\n        if(i !== index){\r\n          new_dEdx += adj[index][i] * (new_vertices[index][0] - new_vertices[i][0] - (ideal_length*(new_vertices[index][0] - new_vertices[i][0]))/distance(new_vertices[index],new_vertices[i]));\r\n          new_dEdy += adj[index][i] * (new_vertices[index][1] - new_vertices[i][1] - (ideal_length*(new_vertices[index][1] - new_vertices[i][1]))/distance(new_vertices[index],new_vertices[i]));\r\n        }\r\n      }\r\n      maxdM = distance([new_dEdx, new_dEdy], [0,0]);\r\n      dM[index] = distance([new_dEdx,new_dEdy], [0,0]);\r\n      break;\r\n    }\r\n  }\r\n  return new_vertices;\r\n}\r\n\r\nfunction FloydWarshallAlgo(adj){\r\n  for(let k = 0; k < adj.length; k ++){\r\n    for(let i = 0; i< adj.length; i++){\r\n      for(let j = 0; j < adj.length; j++){\r\n        if(adj[i][j] > adj[i][k] + adj[k][j]) {\r\n          adj[i][j] = adj[i][k] + adj[k][j];\r\n          adj[j][i] = adj[i][k] + adj[k][j];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  var maxRow = adj.map(function(row){return Math.max.apply(Math,row);});\r\n  var max_d = Math.max.apply(null, maxRow);\r\n\r\n  return max_d\r\n}\r\n\r\nfunction distance(x,y){\r\n  return  Math.sqrt(Math.pow((x[0] - y[0]), 2) + Math.pow((x[1] - y[1]), 2));\r\n}\r\n","import Force from \"../datatypes/Force\"\r\nvar ka = 1;\r\nvar kr = 1;\r\nvar kg = 10;\r\nvar ks = 0.1;\r\nvar tau = 0.1;\r\nvar ksmax = 10;\r\n//============================ REMEMBER TO ADD NO OVERLAP SETTING ==========================\r\nexport function forceAtlas2(vertices,edges, graph_distancex, graph_distancey, iterations, settings ){\r\n\r\n  // Algorithm constants\r\n  const kIter = iterations;\r\n  const W = graph_distancex -6;\r\n  const L = graph_distancey -6;\r\n  // console.log(settings);\r\n  kr = settings.fr;\r\n  kg = settings.kg;\r\n  tau = settings.tau;\r\n  ksmax = settings.ksmax;\r\n\r\n\r\n  //set up loop variables\r\n  // console.log(degreeArray);\r\n  let t = 1;\r\n  let animations = [];\r\n  let scaling_factor = [];\r\n  let temperature = (1/10)*W;\r\n\r\n\r\n  let previous_forces = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    previous_forces.push(new Force(0,0));\r\n  }\r\n  //calculate forces\r\n  while(t< kIter){\r\n    let force_list = [];\r\n\r\n    //calculate repulsive forces\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      let f = new Force(0,0);\r\n      // if(t === 1)console.log(\"vertex\", i)\r\n      for(let j = 0; j < vertices.length; j ++){\r\n        if(i!== j){\r\n\r\n          const repulse_force = frepulse(vertices[i], vertices[j]);\r\n          f.addVector(repulse_force);\r\n        }\r\n      }\r\n      force_list.push(f);\r\n    }\r\n\r\n    //calculate attractive forces\r\n    for(let i = 0; i < edges.length; i ++){\r\n      const e = edges[i];\r\n      const attractive_force = fattract(vertices[e.start], vertices[e.end]);\r\n      const attractive_force_opp = [-attractive_force[0], -attractive_force[1]]\r\n      force_list[e.start].addVector(attractive_force);\r\n      force_list[e.end].addVector(attractive_force_opp);\r\n    }\r\n\r\n\r\n    // calculate forces of gravity\r\n    if(settings.gravity === true){\r\n      const center = (t === 1)? [W/2, L/2]: [(W/2) * 1/(scaling_factor[t-2][2]), (L/2) * 1/(scaling_factor[t-2][3])];\r\n      const center_force = new Force(center[0], center[1]);\r\n\r\n      for(let i = 0; i < vertices.length; i ++){\r\n        const gravity_force = fgravity(vertices[i], center_force);\r\n        // if(t === 1) console.log(gravity_force);\r\n        force_list[i].addVector(gravity_force)\r\n      }\r\n    }\r\n\r\n    //update positions\r\n    const iter_animations = [];\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var maxX = 0;\r\n    var maxY = 0;\r\n    var maxForce = 0;\r\n\r\n    //update global speed\r\n    var sG = 0;\r\n    var traG = 0;\r\n    var swgG = 0;\r\n    for(let i = 0; i < force_list.length; i++){\r\n      const origin = new Force(0,0);\r\n      const combined_force  = new Force(force_list[i].x + previous_forces[i].x, force_list[i].y + previous_forces[i].y);\r\n      const traN = distance(combined_force, origin)/2\r\n      traG += (vertices[i].x+1) * traN;\r\n      const direction_force = new Force(force_list[i].x - previous_forces[i].x, force_list[i].y - previous_forces[i].y);\r\n      const swgN = distance(direction_force, origin);\r\n      swgG += (vertices[i].degree+1)*swgN;\r\n    }\r\n    sG = tau*(traG/swgG);\r\n    // console.log(\"sG\",sG);\r\n\r\n    var sN = 0;\r\n    for(let i = 0; i < vertices.length; i++){\r\n      //find direction of forces\r\n      const origin = new Force(0,0);\r\n      const unitvector = unitVector(force_list[i], origin)\r\n      //calculate temperatures\r\n      const direction_force = new Force(force_list[i].x - previous_forces[i].x, force_list[i].y - previous_forces[i].y);\r\n      const swgN = distance(direction_force, origin);\r\n      sN = Math.min((ks*sG)/(1+sG*Math.sqrt(swgN)),ksmax/distance(force_list[i], origin));\r\n      // console.log(\"sN\", sN);\r\n      vertices[i].setX(vertices[i].x + sN*force_list[i].x);\r\n      vertices[i].setY(vertices[i].y + sN*force_list[i].y);\r\n\r\n      //update previous forces\r\n      previous_forces[i] = force_list[i];\r\n\r\n      //constants for scaling factor\r\n      minX = Math.min(minX, vertices[i].x);\r\n      minY = Math.min(minY, vertices[i].y);\r\n      maxX = vertices[i].x> maxX? vertices[i].x: maxX;\r\n      maxY = vertices[i].y > maxY? vertices[i].y: maxY;\r\n      //add animations\r\n      iter_animations.push([vertices[i].x, vertices[i].y]);\r\n    }\r\n    scaling_factor.push([-minX,-minY, W/(-minX+maxX), L/(-minY+maxY)]);\r\n    animations.push(iter_animations);\r\n    t+=1;\r\n  }\r\n\r\n  //Scale all the animations within the frame\r\n  for(let i = 0; i < animations.length; i++){\r\n    for(let j = 0; j < animations[i].length; j ++){\r\n      animations[i][j][0] = (animations[i][j][0] + scaling_factor[i][0])*scaling_factor[i][2];\r\n      animations[i][j][1] = (animations[i][j][1] + scaling_factor[i][1])*scaling_factor[i][3];\r\n    }\r\n  }\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var maxX = 0;\r\n  var maxY = 0;\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    maxX = Math.max(vertices[i].x, maxX);\r\n    maxY = Math.max(vertices[i].y, maxY);\r\n  }\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    vertices[i].x = (vertices[i].x + (-minX)) * (W/(maxX+(-minX)));\r\n    vertices[i].y = (vertices[i].y + (-minY)) * (L/(maxY + (-minY)));\r\n  }\r\n\r\n  return [vertices, animations];\r\n  //Algorithm\r\n}\r\n\r\nfunction frepulse(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(y,x);\r\n  return [unitvector[0]*kr*(((x.degree+1)*(y.degree+1))/dist),\r\n            unitvector[1]*kr*(((x.degree+1)*(y.degree+1))/dist)];\r\n\r\n}\r\n\r\nfunction fattract(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(x,y);\r\n  return [unitvector[0] *dist, unitvector[1]*dist];\r\n}\r\n\r\nfunction fattractDissuade(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(x,y);\r\n  return [unitvector[0]*dist/(x.degree+1), unitvector[1]*dist/(x.degree+1)]\r\n}\r\n\r\n\r\n\r\nfunction fgravity(v, center){\r\n  var dist_center = distance(v,center);\r\n  var unitvector = unitVector(v,center);\r\n  return [unitvector[0]*kg*(v.degree+1)*dist_center, unitvector[1]*kg*(v.degree+1)*dist_center];\r\n}\r\n\r\nfunction distance(v1,v2){\r\n  var dist = Math.pow(v1.x-v2.x,2) + Math.pow((v1.y-v2.y),2)\r\n  if(dist === 0) dist = 0.00000000000000000001\r\n  return  Math.sqrt(dist);\r\n}\r\n\r\n/**\r\n* UnitVector from X to Y\r\n*/\r\nfunction unitVector(v1,v2){\r\n  const new_x = v2.x - v1.x;\r\n  const new_y = v2.y - v1.y;\r\n  var dist = distance(v1,v2);\r\n  return [new_x/dist, new_y/dist];\r\n}\r\n","import Force from \"../datatypes/Force\"\r\nvar ka = 1;\r\nvar kr = 1;\r\nvar kg = 10;\r\nvar ks = 0.1;\r\nvar tau = 0.1;\r\nvar ksmax = 10;\r\n//============================ REMEMBER TO ADD NO OVERLAP SETTING ==========================\r\nexport function forceAtlasLinLog(vertices,edges, graph_distancex, graph_distancey, iterations, settings ){\r\n\r\n  // Algorithm constants\r\n  const kIter = iterations;\r\n  const W = graph_distancex -6;\r\n  const L = graph_distancey -6;\r\n  // console.log(settings);\r\n  kr = settings.fr;\r\n  kg = settings.kg;\r\n  tau = settings.tau;\r\n  ksmax = settings.ksmax;\r\n\r\n\r\n  //set up loop variables\r\n  // console.log(degreeArray);\r\n  let t = 1;\r\n  let animations = [];\r\n  let scaling_factor = [];\r\n  let temperature = (1/10)*W;\r\n\r\n\r\n  let previous_forces = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    previous_forces.push(new Force(0,0));\r\n  }\r\n  //calculate forces\r\n  while(t< kIter){\r\n    let force_list = [];\r\n\r\n    //calculate repulsive forces\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      let f = new Force(0,0);\r\n      // if(t === 1)console.log(\"vertex\", i)\r\n      for(let j = 0; j < vertices.length; j ++){\r\n        if(i!== j){\r\n\r\n          const repulse_force = frepulse(vertices[i], vertices[j]);\r\n          f.addVector(repulse_force);\r\n        }\r\n      }\r\n      force_list.push(f);\r\n    }\r\n\r\n    //calculate attractive forces\r\n    for(let i = 0; i < edges.length; i ++){\r\n      const e = edges[i];\r\n      const attractive_force = fattract(vertices[e.start], vertices[e.end]);\r\n      const attractive_force_opp = [-attractive_force[0], -attractive_force[1]]\r\n      force_list[e.start].addVector(attractive_force);\r\n      force_list[e.end].addVector(attractive_force_opp);\r\n    }\r\n\r\n\r\n    // calculate forces of gravity\r\n    if(settings.gravity === true){\r\n      const center = (t === 1)? [W/2, L/2]: [(W/2) * 1/(scaling_factor[t-2][2]), (L/2) * 1/(scaling_factor[t-2][3])];\r\n      const center_force = new Force(center[0], center[1]);\r\n      for(let i = 0; i < vertices.length; i ++){\r\n        const gravity_force = fgravity(vertices[i], center_force);\r\n        force_list[i].addVector(gravity_force)\r\n      }\r\n    }\r\n\r\n    //update positions\r\n    const iter_animations = [];\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var maxX = 0;\r\n    var maxY = 0;\r\n    var maxForce = 0;\r\n\r\n    //update global speed\r\n    var sG = 0;\r\n    var traG = 0;\r\n    var swgG = 0;\r\n    for(let i = 0; i < force_list.length; i++){\r\n      const origin = new Force(0,0);\r\n      const combined_force  = new Force(force_list[i].x + previous_forces[i].x, force_list[i].y + previous_forces[i].y);\r\n      const traN = distance(combined_force, origin)/2\r\n      traG += (vertices[i].x+1) * traN;\r\n      const direction_force = new Force(force_list[i].x - previous_forces[i].x, force_list[i].y - previous_forces[i].y);\r\n      const swgN = distance(direction_force, origin);\r\n      swgG += (vertices[i].degree+1)*swgN;\r\n    }\r\n    sG = tau*(traG/swgG);\r\n    // console.log(\"sG\",sG);\r\n\r\n    var sN = 0;\r\n    for(let i = 0; i < vertices.length; i++){\r\n      //find direction of forces\r\n      const origin = new Force(0,0);\r\n      const unitvector = unitVector(force_list[i], origin)\r\n      //calculate temperatures\r\n      const direction_force = new Force(force_list[i].x - previous_forces[i].x, force_list[i].y - previous_forces[i].y);\r\n      const swgN = distance(direction_force, origin);\r\n      sN = Math.min((ks*sG)/(1+sG*Math.sqrt(swgN)),ksmax/distance(force_list[i], origin));\r\n      // console.log(\"sN\", sN);\r\n      vertices[i].setX(vertices[i].x + sN*force_list[i].x);\r\n      vertices[i].setY(vertices[i].y + sN*force_list[i].y);\r\n\r\n      //update previous forces\r\n      previous_forces[i] = force_list[i];\r\n\r\n      //constants for scaling factor\r\n      minX = Math.min(minX, vertices[i].x);\r\n      minY = Math.min(minY, vertices[i].y);\r\n      maxX = vertices[i].x> maxX? vertices[i].x: maxX;\r\n      maxY = vertices[i].y > maxY? vertices[i].y: maxY;\r\n      //add animations\r\n      iter_animations.push([vertices[i].x, vertices[i].y]);\r\n    }\r\n    scaling_factor.push([-minX,-minY, W/(-minX+maxX), L/(-minY+maxY)]);\r\n    animations.push(iter_animations);\r\n    t+=1;\r\n  }\r\n\r\n  //Scale all the animations within the frame\r\n  for(let i = 0; i < animations.length; i++){\r\n    for(let j = 0; j < animations[i].length; j ++){\r\n      animations[i][j][0] = (animations[i][j][0] + scaling_factor[i][0])*scaling_factor[i][2];\r\n      animations[i][j][1] = (animations[i][j][1] + scaling_factor[i][1])*scaling_factor[i][3];\r\n    }\r\n  }\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var maxX = 0;\r\n  var maxY = 0;\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    maxX = Math.max(vertices[i].x, maxX);\r\n    maxY = Math.max(vertices[i].y, maxY);\r\n  }\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    vertices[i].x = (vertices[i].x + (-minX)) * (W/(maxX+(-minX)));\r\n    vertices[i].y = (vertices[i].y + (-minY)) * (L/(maxY + (-minY)));\r\n  }\r\n\r\n  return [vertices, animations];\r\n  //Algorithm\r\n}\r\n\r\nfunction frepulse(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(y,x);\r\n  return [unitvector[0]*kr*(((x.degree+1)*(y.degree+1))/dist),\r\n            unitvector[1]*kr*(((x.degree+1)*(y.degree+1))/dist)];\r\n\r\n}\r\n\r\nfunction fattract(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(x,y);\r\n  return [unitvector[0] *Math.log(1+dist), unitvector[1]*Math.log(1+dist)];\r\n}\r\n\r\nfunction fattractDissuade(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(x,y);\r\n  return [unitvector[0]*Math.log(1+dist)/(x.degree+1), unitvector[1]*Math.log(1+dist)/(x.degree+1)]\r\n}\r\n\r\n\r\n\r\nfunction fgravity(v, center){\r\n  var dist_center = distance(v,center);\r\n  var unitvector = unitVector(v,center);\r\n  return [unitvector[0]*kg*(v.degree+1)*dist_center, unitvector[1]*kg*(v.degree+1)*dist_center];\r\n}\r\n\r\nfunction distance(v1,v2){\r\n  var dist = Math.pow(v1.x-v2.x,2) + Math.pow((v1.y-v2.y),2)\r\n  if(dist === 0) dist = 0.00000000000000000001\r\n  return  Math.sqrt(dist);\r\n}\r\n\r\n/**\r\n* UnitVector from X to Y\r\n*/\r\nfunction unitVector(v1,v2){\r\n  const new_x = v2.x - v1.x;\r\n  const new_y = v2.y - v1.y;\r\n  var dist = distance(v1,v2);\r\n  return [new_x/dist, new_y/dist];\r\n}\r\n","var assert = require('assert');\r\n\r\nclass SquareMatrix{\r\n  constructor(array2d){\r\n    assert(array2d.length === array2d[0].length)\r\n    this.container = array2d;\r\n  }\r\n\r\n  lMultiply(vector){\r\n    assert(vector.length === this.container.length, \"vector \" + vector.toString()+\r\n              \"vector dimension \"+vector.length.toString()+\"versus matrix \" + this.container.toString() +\r\n              \"of dimension \"+ this.container.length);\r\n    const return_vector = [];\r\n    for(let i = 0; i < vector.length; i++){\r\n      var value = 0;\r\n      for(let j = 0; j < vector.length; j++){\r\n        value += vector[j]*this.container[j][i];\r\n      }\r\n      return_vector.push(value);\r\n    }\r\n    return return_vector;\r\n  }\r\n\r\n  rMultiply(vector){\r\n    assert(vector.length === this.container.length, \"vector \" + vector.toString()+\r\n              \"vector dimension \"+vector.length.toString()+\"versus matrix \" + this.container.toString() +\r\n              \"of dimension \"+ this.container.length);\r\n    const return_vector = [];\r\n    for(let i = 0; i < vector.length; i++){\r\n      var value = 0;\r\n      for(let j = 0; j < vector.length; j++){\r\n        value += this.container[i][j]*vector[j]\r\n      }\r\n      return_vector.push(value);\r\n    }\r\n    return return_vector;\r\n  }\r\n\r\n  matrixMultiply(other){\r\n    assert(other.container.length === this.container.length, \"matrix \" +\r\n        this.container.toString() + \" other matrix \" + other.container.toString());\r\n    const new_mat = [];\r\n    for(let i = 0; i < this.container.length; i++){\r\n      const new_row = [];\r\n      for(let j = 0; j < this.container.length; j++){\r\n        const row = this.getRow(i);\r\n        const col = other.getColumn(j);\r\n        const value = dotProduct(row, col);\r\n        new_row.push(value);\r\n      }\r\n      new_mat.push(new_row);\r\n    }\r\n    return new_mat;\r\n  }\r\n\r\n  getMatrix(){\r\n    return this.container;\r\n  }\r\n\r\n  getRow(i){\r\n    assert(i < this.container.length, \"matrix dimension \"\r\n                + this.container.length.toString()+ \", access index \" + i.toString());\r\n    const return_vector = [];\r\n    for(let j = 0; j < this.container.length; j++){\r\n      return_vector.push(this.container[i][j]);\r\n    }\r\n    return return_vector;\r\n  }\r\n\r\n  getColumn(i){\r\n    assert(i < this.container.length, \"matrix dimension \"\r\n                + this.container.length.toString()+ \", access index \" + i.toString());\r\n    const return_vector = [];\r\n    for(let j = 0; j < this.container.length; j++){\r\n      return_vector.push(this.container[j][i]);\r\n    }\r\n    return return_vector;\r\n  }\r\n}\r\n\r\nexport default SquareMatrix;\r\n\r\nfunction dotProduct(v1,v2){\r\n  var sum = 0;\r\n  for(let i = 0; i < v1.length; i ++){\r\n    sum += v1[i]*v2[i];\r\n  }\r\n  return sum\r\n}\r\n","import SquareMatrix from \"../datatypes/SquareMatrix\";\r\n\r\nexport function hall(vertices,edges, graph_distancex, graph_distancey, iterations, degreeArray){\r\n  //IMPORTANT CONSTANTS\r\n  const adj = createAdjacencyMatrix(vertices, edges);\r\n\r\n  console.log(adj);\r\n\r\n\r\n}\r\n\r\nfunction createAdjacencyMatrix(v, e){\r\n  const adj = [];\r\n  for(let i = 0; i < v.length; i++){\r\n    const adj_row = [];\r\n    for(let j = 0; j < v.length; j++){\r\n      adj_row.push(0);\r\n    }\r\n    adj.push(adj_row);\r\n  }\r\n\r\n  for(let i = 0; i < e.length; i ++){\r\n    adj[e[i].start][e[i].end] = 1;\r\n    adj[e[i].end][e[i].start] = 1;\r\n  }\r\n  return new SquareMatrix(adj);\r\n}\r\n","import SquareMatrix from \"../datatypes/SquareMatrix\";\r\n\r\nexport function spectralDrawing(vertices, edges, W, H, dimension){\r\n\r\n  // IMPORTANT CONSTANTS\r\n  const epsilon = Math.pow(10, -7);\r\n  const DIMENSION = dimension + 1;\r\n\r\n\r\n\r\n  //Important matrices\r\n  var A = []; //adjacency\r\n  var D = []; //degree\r\n  var Dinv = [];\r\n  var L = []; //laplacian\r\n  var IplusDinvA = [];\r\n\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    const adj_row = [];\r\n    const degree_row = [];\r\n    const inverse_degree_row = [];\r\n    const laplacian_row = [];\r\n    for(let j = 0; j < vertices.length; j ++){\r\n      adj_row.push(0);\r\n      degree_row.push(0);\r\n      inverse_degree_row.push(0);\r\n      laplacian_row.push(0);\r\n      if(i === j) {\r\n        degree_row[i] = vertices[i].degree;\r\n        inverse_degree_row[i] = 1/vertices[i].degree;\r\n        laplacian_row[i] = vertices[i].degree;\r\n      }\r\n    }\r\n    A.push(adj_row);\r\n    D.push(degree_row);\r\n    Dinv.push(inverse_degree_row);\r\n    L.push(laplacian_row);\r\n  }\r\n\r\n  for(let i = 0; i < edges.length; i ++){\r\n    A[edges[i].start][edges[i].end] = 1;\r\n    A[edges[i].end][edges[i].start] = 1;\r\n    L[edges[i].start][edges[i].end] = -1;\r\n    L[edges[i].end][edges[i].start] = -1;\r\n  }\r\n  A = new SquareMatrix(A);\r\n  L = new SquareMatrix(L);\r\n  D = new SquareMatrix(D);\r\n  Dinv = new SquareMatrix(Dinv);\r\n  // console.log(\"A\", A);\r\n  // console.log(\"L\", L);\r\n  // console.log(\"D\", D);\r\n  // console.log(\"Dinv\", Dinv);\r\n  const intermediate_mat = Dinv.matrixMultiply(A);\r\n  for(let i = 0; i < intermediate_mat.length; i ++){\r\n    intermediate_mat[i][i] ++;\r\n  };\r\n  for(let i = 0; i < intermediate_mat.length; i++){\r\n    for(let j = 0; j < intermediate_mat.length; j++){\r\n      intermediate_mat[i][j] *= 1/2;\r\n    }\r\n  }\r\n  var C = new SquareMatrix(intermediate_mat);\r\n  // console.log(\"C\", C);\r\n\r\n\r\n  // instantiate known eigenvalues/eigenvectors\r\n  const lambda1 = 0;\r\n  const v1 = [];\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    v1.push(1);\r\n  }\r\n\r\n  const eigenvectors = [];\r\n  eigenvectors.push(v1);\r\n  // console.log(\"initial eigenvectors\", eigenvectors);\r\n\r\n  //computing degree normalized eigenvectors v2 ... vk where k is DIMENSION\r\n  for(let i = 2; i < DIMENSION+1; i++){\r\n    // console.log(\"=======================ITERATION\", i-1, \"======================================\")\r\n    let new_vi_vector = randomVector(vertices.length);\r\n    normalize(new_vi_vector);\r\n\r\n    //Normalize against previous eigenvectors;\r\n    let new_vi = new_vi_vector;\r\n    //\r\n    for(let j = 0; j < i -1; j ++){\r\n      new_vi = orthogonalize(new_vi, eigenvectors[j], D);\r\n    }\r\n    new_vi_vector = C.lMultiply(new_vi);\r\n    normalize(new_vi_vector);\r\n\r\n    var iterations = 0;\r\n    // const theta = Math.acos(dotProduct(new_vi, new_vi_vector))\r\n    while(dotProduct(new_vi_vector, new_vi) < 1- epsilon){\r\n      // console.log(\"iterating\");\r\n      new_vi = C.lMultiply(new_vi_vector);\r\n      normalize(new_vi);\r\n      iterations ++;\r\n      if(iterations > 100) break;\r\n    }\r\n\r\n\r\n    eigenvectors.push(new_vi);\r\n  }\r\n  // console.log(eigenvectors);\r\n  var minX = Infinity;\r\n  var maxX = -Infinity;\r\n  var minY = Infinity;\r\n  var maxY = -Infinity;\r\n  var minZ = Infinity;\r\n  var maxZ = -Infinity;\r\n  for(let i = 0; i < eigenvectors[0].length; i++){\r\n    minX = Math.min(eigenvectors[1][i], minX);\r\n    maxX = Math.max(eigenvectors[1][i], maxX);\r\n    minY = Math.min(eigenvectors[2][i], minY);\r\n    maxY = Math.max(eigenvectors[2][i], maxY);\r\n    if(eigenvectors[3] !== undefined){\r\n      minZ = Math.min(eigenvectors[3][i], minZ);\r\n      maxZ = Math.max(eigenvectors[3][i], maxZ);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const animations = [];\r\n  for(let i = 0; i < eigenvectors[1].length; i++){\r\n    const animations_iter = [];\r\n    for(let j = 0; j < vertices.length; j++){\r\n      const x = vertices[j].x;\r\n      const y = vertices[j].y;\r\n      const z = vertices[j].z;\r\n      if(j <= i) animations_iter.push([(eigenvectors[1][j] -minX)*(W-5)/(-minX+maxX),y,z])\r\n      else {animations_iter.push([x,y,z])}\r\n    }\r\n    animations.push(animations_iter);\r\n  }\r\n\r\n  for(let i = 0; i < eigenvectors[2].length; i++){\r\n    const animations_iter = [];\r\n    for(let j = 0; j < vertices.length; j++){\r\n      const x = vertices[j].x;\r\n      const y = vertices[j].y;\r\n      const z = vertices[j].z;\r\n      if(j <= i) animations_iter.push([\r\n        (eigenvectors[1][j] -minX)*(W-5)/(-minX+maxX),\r\n        (eigenvectors[2][j] -minY)*(H-5)/(-minY+maxY),z\r\n      ]);\r\n      else{animations_iter.push([\r\n        (eigenvectors[1][j] -minX)*(W-5)/(-minX+maxX), y,z\r\n      ])}\r\n    }\r\n    animations.push(animations_iter);\r\n  }\r\n  if(eigenvectors[3] !== undefined){\r\n    for(let i = 0; i < eigenvectors[2].length; i++){\r\n      const animations_iter = [];\r\n      for(let j = 0; j < vertices.length; j++){\r\n        const x = vertices[j].x;\r\n        const y = vertices[j].y;\r\n        const z = vertices[j].z;\r\n        if(j <= i) animations_iter.push([\r\n          (eigenvectors[1][j] -minX)*(W-5)/(-minX+maxX),\r\n          (eigenvectors[2][j] -minY)*(H-5)/(-minY+maxY),\r\n          (eigenvectors[3][j] -minZ)*(H-5)/(-minZ+maxZ)\r\n        ]);\r\n        else{animations_iter.push([\r\n          (eigenvectors[1][j] -minX)*(W-5)/(-minX+maxX),\r\n          (eigenvectors[2][j] -minY)*(H-5)/(-minY+maxY), z ])}\r\n      }\r\n      animations.push(animations_iter);\r\n    }\r\n  }\r\n  // new_vertices[i].x = (eigenvectors[1][i] -minX)*(W-5)/(-minX+maxX);\r\n  // new_vertices[i].y = (eigenvectors[2][i] -minY)*(H-5)/(-minY+maxY);\r\n  return [eigenvectors, animations];\r\n}\r\n//\r\nfunction randomVector(size){\r\n  const new_vector = [];\r\n  for(let i = 0; i < size; i ++){\r\n    new_vector.push(Math.random())\r\n  }\r\n  return new_vector;\r\n}\r\n\r\nfunction normalize(vector){\r\n  const sum = vector.reduce(function(a,b){return a+ b});\r\n  for(let i = 0; i < vector.length; i ++){\r\n    vector[i] = vector[i]/sum\r\n  }\r\n}\r\n\r\nfunction norm(vector){\r\n  var sum = 0;\r\n  for(let i = 0; i < vector.length; i++){\r\n    sum += Math.pow(vector[i], vector.length);\r\n  }\r\n  return Math.pow(sum, -vector.length);\r\n}\r\n\r\nfunction orthogonalize(u, v, D){\r\n  // console.log(\"orthogonalize inputs\",u,v,D);\r\n  const numeratorDtimesUj = D.rMultiply(v)\r\n  const numerator = dotProduct(u, numeratorDtimesUj);\r\n  const denominator = dotProduct(v, numeratorDtimesUj);\r\n  const new_vector = [];\r\n  for(let i = 0; i < u.length; i++){\r\n    new_vector.push(u[i] - v[i]*(numerator/denominator));\r\n  }\r\n  return new_vector;\r\n\r\n  // const numerator = dotProduct(vectorTimesMatrix(u,D), v);\r\n  // const denominator = dotProduct(vectorTimesMatrix(v,D), u);\r\n  // console.log(\"num/denum\", numerator, denominator);\r\n  // for(let i = 0; i < u.length; i++){\r\n  //   u[i] = u[i] - u[i]*(numerator/denominator);\r\n  // }\r\n}\r\n\r\n\r\nfunction dotProduct(v1,v2){\r\n  var sum = 0;\r\n  for(let i = 0; i < v1.length; i ++){\r\n    sum += v1[i]*v2[i];\r\n  }\r\n  return sum\r\n}\r\n","class UnionSets{\r\n  constructor(){\r\n    this.contents = [];\r\n    this.representative = null;\r\n  }\r\n\r\n  add(el){\r\n    if(this.contents.length === 0) this.representative = el;\r\n    this.contents.push(el);\r\n\r\n  }\r\n\r\n  push(contents){\r\n    for(let i = 0; i < contents.length; i++){\r\n      this.contents.push(contents[i]);\r\n    }\r\n  }\r\n\r\n  setRepresentative(v){\r\n    this.representative = v;\r\n  }\r\n\r\n  getRepresentative(){\r\n    return this.representative;\r\n  }\r\n\r\n  union(other){\r\n    this.setRepresentative(other.getRepresentative);\r\n  }\r\n\r\n}\r\n\r\nexport default UnionSets;\r\n","import UnionSets from \"../datatypes/UnionSets\";\r\nimport Vertex from \"../datatypes/Vertex\";\r\nimport Edge from \"../datatypes/Edge\";\r\n\r\nvar VERTICES = [];\r\n\r\nexport function kruskal(vertices, edges, dimension, color){\r\n  //constants\r\n  VERTICES = vertices; //used for soring edges\r\n  const A = [];\r\n  const coloring = rgb_to_str(color);\r\n  const color_animations = [];\r\n\r\n  const make_set = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    make_set.push(i);\r\n  }\r\n  //first need to sort edges by increasing weight\r\n  var sorted_edges = edges.sort(function(e1,e2){\r\n    return distance(VERTICES[e1.start],VERTICES[e1.end],dimension) - distance(VERTICES[e2.start], VERTICES[e2.end],dimension);\r\n  });\r\n\r\n  const copy_input = createFrame(vertices, sorted_edges);\r\n  const current_vertices = copy_input.vertices;\r\n  const current_edges = copy_input.edges\r\n  color_animations.push(createFrame(current_vertices, current_edges));\r\n\r\n  const trees = [];\r\n  const tree_indices = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    const u =  new UnionSets();\r\n    u.add(i);\r\n    trees.push(u);\r\n    tree_indices.push(i);\r\n  }\r\n\r\n  for(let e= 0; e< sorted_edges.length; e++){\r\n    const u = sorted_edges[e].start;\r\n    const v = sorted_edges[e].end;\r\n\r\n\r\n    if(tree_indices[u] !== tree_indices[v]){\r\n      trees[tree_indices[u]].push(trees[tree_indices[v]].contents);\r\n      const val = tree_indices[v];\r\n      for(let i = 0; i < tree_indices.length; i++){\r\n        if(tree_indices[i] === val){\r\n          tree_indices[i] = tree_indices[u];\r\n          trees[tree_indices[i]].contents = [];\r\n        }\r\n      }\r\n      current_vertices[u].color = coloring;\r\n      current_edges[e].color = coloring;\r\n      current_edges[e].alpha = 0.4;\r\n      current_vertices[v].color = coloring;\r\n\r\n      color_animations.push(createFrame(current_vertices, current_edges));\r\n    }\r\n  }\r\n  return [color_animations, sorted_edges];\r\n}\r\n\r\nfunction distance(v1,v2,dim){\r\n  var dist = null;\r\n  if(dim === 2) dist = Math.sqrt(Math.pow(v1.x-v2.x, 2) + Math.pow(v1.y-v2.y,2));\r\n  if(dim === 3) dist = Math.sqrt(Math.pow(v1.x-v2.x,2) + Math.pow(v1.y-v2.y, 2) + Math.pow(v1.z-v2.z, 2));\r\n  return dist === 0? 0.00000000000000000001: dist;\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\" + color[0]+\",\"+color[1]+\",\"+color[2]+\")\";\r\n}\r\n\r\nfunction createFrame(vertices, edges){\r\n  const new_vertices = [];\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    new_vertices.push(vertices[i].copy_vertex());\r\n  }\r\n  const new_edges = [];\r\n  for(let j = 0; j < edges.length; j++){\r\n    new_edges.push(edges[j].copy_edge());\r\n  }\r\n  return {vertices: new_vertices, edges: new_edges};\r\n}\r\n","import Vertex from \"../datatypes/Vertex\";\r\nimport Edge from \"../datatypes/Edge\";\r\n\r\nexport function prim(vertices, edges, dimension, color){\r\n  //constants\r\n  var coloring = rgb_to_str(color);\r\n  if(coloring === null || coloring === undefined) coloring = \"rgb(255,0,0)\";\r\n  const color_animations = [];\r\n\r\n  //make copies of input\r\n  const copy_input = createFrame(vertices, edges);\r\n  const current_vertices = copy_input.vertices;\r\n  const current_edges = copy_input.edges;\r\n  //current_vertices/edges will be modified in place so we need to recreate an initial frame\r\n  const inital_frame = createFrame(current_vertices, current_edges);\r\n  color_animations.push(inital_frame); \r\n\r\n  //construct adjacency matrix\r\n  const adj = [];\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    const adj_row = [];\r\n    for(let j = 0; j < vertices.length; j++){\r\n      adj_row.push(0);\r\n    }\r\n    adj.push(adj_row);\r\n  }\r\n  // assign adjacency values\r\n  for(let e =0; e < edges.length; e++){\r\n    adj[edges[e].start][edges[e].end] = e;\r\n    adj[edges[e].end][edges[e].start] = e;\r\n  }\r\n\r\n  var vertexQueue = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    vertexQueue.push({key: Infinity, parent: null, vertex: i})\r\n  }\r\n\r\n  const A = [];\r\n\r\n  while(vertexQueue.length !== 0){\r\n    var u;\r\n    [u,vertexQueue] = pop(vertexQueue);\r\n    if(!(u.vertex in A)){\r\n      current_vertices[u.vertex].color = coloring;\r\n      color_animations.push(createFrame(current_vertices, current_edges))\r\n      // color_animations.push({vIndex: u.vertex, color: coloring});\r\n      if(u.parent !== null){\r\n        current_edges[adj[u.vertex][u.parent]].color = coloring;\r\n        current_edges[adj[u.vertex][u.parent]].alpha = 0.4;\r\n        color_animations.push(createFrame(current_vertices, current_edges));\r\n      }\r\n    }\r\n\r\n\r\n    for(let i = 0; i < adj[u.vertex].length; i ++){\r\n      if(adj[u.vertex][i] !== 0){\r\n          for(let k = 0; k < vertexQueue.length; k ++){\r\n            if(vertexQueue[k].vertex === i && distance(vertices[u.vertex],\r\n                                  vertices[vertexQueue[k].vertex], dimension) < vertexQueue[k].key){\r\n                vertexQueue[k].key = distance(vertices[u.vertex],\r\n                                    vertices[vertexQueue[k].vertex], dimension)\r\n                vertexQueue[k].parent = u.vertex;\r\n            }\r\n          }\r\n      }\r\n    }\r\n    //end for\r\n    if(vertexQueue.length !== 2) vertexQueue.sort(function(v1,v2) {return v1.key - v2.key});\r\n\r\n  }\r\n\r\n  return color_animations;\r\n}\r\n\r\nfunction pop(array){\r\n  const poppedValue = array[0];\r\n  if(array.length > 1)array = array.slice(1);\r\n  else if(array.length === 1) array = [];\r\n  return [poppedValue,array]\r\n}\r\n\r\nfunction distance(v1,v2, dimension){\r\n  var dist;\r\n  if(dimension === 2) dist = Math.pow((v1.x-v2.x),2) + Math.pow((v1.y-v2.y),2);\r\n  if(dimension === 3) dist =  Math.pow((v1.x-v2.x),2) + Math.pow((v1.y-v2.y),2)+ Math.pow((v1.z-v2.z),2);\r\n  if(dist === 0) dist = 0.00000000000000000001;\r\n  return Math.sqrt(dist);\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\"+color[0]+\",\"+color[1]+\",\"+color[2]+\")\";\r\n}\r\n\r\nfunction createFrame(vertices, edges){\r\n  const new_vertices = [];\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    new_vertices.push(vertices[i].copy_vertex());\r\n  }\r\n  const new_edges = [];\r\n  for(let j = 0; j < edges.length; j++){\r\n    new_edges.push(edges[j].copy_edge());\r\n  }\r\n  return {vertices: new_vertices, edges: new_edges};\r\n}\r\n","import Edge from \"../datatypes/Edge\";\r\nconst MAX_SIMULATIONS = 150;\r\nvar I = -1;\r\nvar K = -1;\r\n\r\nexport function opt2(vertices, edges, dimension, color){\r\n  const path = [];\r\n  var better_solution = false\r\n  const selected_color = rgb_to_str(color);\r\n  var root = edges[0].start;\r\n  path.push(root);\r\n\r\n  for(let i = 1; i< edges.length; i++){\r\n    path.push(edges[i].start);\r\n  }\r\n  path.push(root);\r\n  // console.log(\"original path\", path);\r\n  const dist = calculate_distance_path(path, vertices, dimension);\r\n  for(let n = 0; n< MAX_SIMULATIONS; n++){\r\n    var new_path = [];\r\n    new_path.push(root);\r\n    var i = Math.floor(Math.random()*(path.length-2))+1;\r\n    var k = Math.floor(Math.random()*(path.length-2))+1;\r\n    if(i > k){ //swap\r\n      var temp = i;\r\n      i = k;\r\n      k = temp;\r\n    }\r\n    for(let m = 0; m < i; m++){\r\n      new_path.push(path[m+1]);\r\n    }\r\n\r\n\r\n    for(let m = k-1; m>i-1; m--){\r\n      new_path.push(path[m+1]);\r\n    }\r\n\r\n    for(let m = k; m < path.length-1; m++){\r\n      new_path.push(path[m+1])\r\n    }\r\n    var new_dist = calculate_distance_path(new_path, vertices, dimension);\r\n    if(new_dist < dist) better_solution = true;\r\n    if(better_solution === true) {\r\n      I = i;\r\n      K = k;\r\n      break\r\n    };\r\n  }\r\n  // console.log(\"better solution\", better_solution);\r\n  if(better_solution === false) new_path = path;\r\n  var new_edges = [];\r\n  for(let i = 0; i < path.length-1; i++){\r\n    const e = edges[i].copy_edge();\r\n    e.start = new_path[i];\r\n    e.end = new_path[i+1];\r\n    new_edges.push(e);\r\n    if(i === I || i === K) {\r\n      new_edges[i].setColor(selected_color);\r\n      new_edges[i].setAlpha(0.7);\r\n    }\r\n    else{\r\n      if(dimension === 2) new_edges[i].setColor(\"rgb(0,0,0)\");\r\n      if(dimension === 3) new_edges[i].setColor(\"rgb(211,211,211)\");\r\n      new_edges[i].setAlpha(0.2);\r\n    }\r\n  }\r\n  return [new_edges, better_solution];\r\n\r\n}\r\n\r\n\r\nfunction calculate_distance_path(path, vertices, dimension){\r\n  var total_dist = 0;\r\n  for(let i = 0; i < path.length-1; i++){\r\n    total_dist += distance(vertices[path[i]], vertices[path[i+1]], dimension);\r\n  }\r\n  return total_dist;\r\n}\r\n\r\nfunction distance(v1, v2, dimension){\r\n  var dist;\r\n  if(dimension === 2) dist = Math.pow(v1.x-v2.x,2) + Math.pow(v1.y-v2.y, 2);\r\n  if(dimension === 3) dist = Math.pow(v1.x-v2.x,2) + Math.pow(v1.y-v2.y, 2) + Math.pow(v1.z-v2.z,2);\r\n  if(dist === 0) dist = 0.00000000000000000001;\r\n  return Math.sqrt(dist);\r\n}\r\n\r\nfunction swap(u,v){\r\n  const temp = u;\r\n  u = v;\r\n  v = temp;\r\n}\r\n\r\nfunction try2OptSwap(path, vertices, i, k, dimension, dist){\r\n  var changed = false;\r\n  const new_path = [];\r\n  var root = path[0];\r\n  new_path.push(root);\r\n  for(let n = 0; n < i; n++){\r\n    new_path.push(path[n+1]);\r\n  }\r\n  for(let n = k+i; n > i; n++){\r\n    new_path.push(path[n+1]);\r\n  }\r\n  new_path.push(root);\r\n  const new_dist = calculate_distance_path(new_path, vertices, dimension);\r\n  if(new_dist< dist) return [new_path, true]\r\n  else{ return [path, false]};\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\"+color[0]+\",\"+color[1]+\",\"+color[2]+\")\";\r\n}\r\n","import Edge from \"../datatypes/Edge\";\r\nconst MAX_SIMULATIONS = 150;\r\nvar I = -1;\r\nvar K = -1;\r\n\r\nexport function opt2Annealing(vertices, edges, dimension, startColor, endColor, temperature, minTemperature, maxTemperature, acceptance){\r\n  const path = [];\r\n  var better_solution = false\r\n  const gradient = createColorGradient(endColor, startColor, 10);\r\n  var selected_index = (temperature/maxTemperature)*(gradient.length-1);\r\n  selected_index = Math.floor(selected_index);\r\n  const selected_color = rgb_to_str(gradient[selected_index]);\r\n\r\n\r\n  var root = edges[0].start;\r\n  path.push(root);\r\n\r\n  for(let i = 1; i< edges.length; i++){\r\n    path.push(edges[i].start);\r\n  }\r\n  path.push(root);\r\n  // console.log(\"original path\", path);\r\n  const dist = calculate_distance_path(path, vertices, dimension);\r\n  for(let n = 0; n< MAX_SIMULATIONS; n++){\r\n    var new_path = [];\r\n    new_path.push(root);\r\n    var i = Math.floor(Math.random()*(path.length-2))+1;\r\n    var k = Math.floor(Math.random()*(path.length-2))+1;\r\n    if(i > k){ //swap\r\n      var temp = i;\r\n      i = k;\r\n      k = temp;\r\n    }\r\n    for(let m = 0; m < i; m++){\r\n      new_path.push(path[m+1]);\r\n    }\r\n\r\n    for(let m = k-1; m>i-1; m--){\r\n      new_path.push(path[m+1]);\r\n    }\r\n\r\n    for(let m = k; m < path.length-1; m++){\r\n      new_path.push(path[m+1])\r\n    }\r\n    var new_dist = calculate_distance_path(new_path, vertices, dimension);\r\n    const accepted = Math.random();\r\n    if(new_dist < dist || accepted < temperature*acceptance) better_solution = true;\r\n    if(better_solution === true) {\r\n      I = i;\r\n      K = k;\r\n      break\r\n    };\r\n  }\r\n  // console.log(\"better solution\", better_solution);\r\n  if(better_solution === false) new_path = path;\r\n  var new_edges = [];\r\n  for(let i = 0; i < path.length-1; i++){\r\n    const e = edges[i].copy_edge();\r\n    e.start = new_path[i];\r\n    e.end = new_path[i+1];\r\n    new_edges.push(e);\r\n    if(i === I || i === K) {\r\n      new_edges[i].setColor(selected_color);\r\n      new_edges[i].setAlpha(0.7);\r\n    }\r\n  }\r\n  return [new_edges, better_solution];\r\n\r\n}\r\n\r\n\r\nfunction calculate_distance_path(path, vertices, dimension){\r\n  var total_dist = 0;\r\n  for(let i = 0; i < path.length-1; i++){\r\n    total_dist += distance(vertices[path[i]], vertices[path[i+1]], dimension);\r\n  }\r\n  return total_dist;\r\n}\r\n\r\nfunction distance(v1, v2, dimension){\r\n  var dist;\r\n  if(dimension === 2) dist = Math.pow(v1.x-v2.x,2) + Math.pow(v1.y-v2.y, 2);\r\n  if(dimension === 3) dist = Math.pow(v1.x-v2.x,2) + Math.pow(v1.y-v2.y, 2) + Math.pow(v1.z-v2.z,2);\r\n  if(dist === 0) dist = 0.00000000000000000001;\r\n  return Math.sqrt(dist);\r\n}\r\n\r\nfunction swap(u,v){\r\n  const temp = u;\r\n  u = v;\r\n  v = temp;\r\n}\r\n\r\nfunction try2OptSwap(path, vertices, i, k, dimension, dist){\r\n  var changed = false;\r\n  const new_path = [];\r\n  var root = path[0];\r\n  new_path.push(root);\r\n  for(let n = 0; n < i; n++){\r\n    new_path.push(path[n+1]);\r\n  }\r\n  for(let n = k+i; n > i; n++){\r\n    new_path.push(path[n+1]);\r\n  }\r\n  new_path.push(root);\r\n  const new_dist = calculate_distance_path(new_path, vertices, dimension);\r\n  if(new_dist< dist) return [new_path, true]\r\n  else{ return [path, false]};\r\n}\r\n\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\"+color[0]+\",\"+color[1]+\",\"+color[2]+\")\";\r\n}\r\n\r\nfunction createColorGradient(startColor, endColor, maxDegree){\r\n  // console.log(\"inside color gradient\", startColor, endColor, maxDegree);\r\n  var [startHue, startSaturation, startLightness] = rgb_to_hsl(startColor);\r\n  var [endHue, endSaturation, endLightness] = rgb_to_hsl(endColor);\r\n\r\n  // console.log(startHue, startSaturation, startLightness);\r\n  // console.log(endHue, endSaturation, endLightness);\r\n  var incrementHue = (endHue-startHue)/maxDegree;\r\n\r\n  const gradient = [];\r\n\r\n  for(let i = 0; i < maxDegree; i++){\r\n    const newHue = startHue+(incrementHue*i)%360;\r\n    const [red,green,blue] = hsl_to_rgb((startHue+incrementHue*i)%360, startSaturation,\r\n                                            startLightness)\r\n    gradient.push([Math.abs(red%256), Math.abs(green%256), Math.abs(blue%256)]);\r\n    // console.log(gradient[i]);\r\n  }\r\n  return gradient;\r\n}\r\n\r\nfunction rgb_to_hsl(rgbColor){\r\n  var red = rgbColor[0]/255;\r\n  var green = rgbColor[1]/255;\r\n  var blue = rgbColor[2]/255;\r\n  var Cmax = Math.max(...[red,green,blue]);\r\n  var Cmin = Math.min(...[red,green,blue]);\r\n  var delta = Cmax-Cmin;\r\n\r\n\r\n  var hue = calculate_hue(delta, Cmax, red, green, blue)%360;\r\n  var lightness = (Cmax+Cmin)/2;\r\n  var saturation = delta === 0? 0: delta/(1-Math.abs(2*lightness-1));\r\n\r\n  return [hue, saturation, lightness];\r\n}\r\n\r\nfunction hsl_to_rgb(hue, saturation, lightness){\r\n  const C = (1 - Math.abs(2*lightness-1))*saturation\r\n  const X = C * (1 - Math.abs(hue/60)%2 -1);\r\n  const m = lightness - C/2;\r\n  const [R_prime, G_prime, B_prime] = check_degrees(hue, C, X);\r\n  return [((R_prime+m)*255)%256, ((G_prime + m)* 255)%256, ((B_prime+m) * 255)%256];\r\n}\r\n\r\nfunction check_degrees(hue, C, X){\r\n  if((hue >= 0 && hue < 60) || hue == 360) return [C,X,0];\r\n  if(hue >= 60 && hue < 120 ) return [X,C,0];\r\n  if(hue >= 120 && hue < 180 ) return [0, C, X];\r\n  if(hue >= 180 && hue < 240 ) return [0, X, C];\r\n  if(hue >= 240 && hue < 300 ) return [X, 0, C];\r\n  if(hue >= 300 && hue < 360 ) return [C, 0, X];\r\n  return [0,0,0];\r\n}\r\n\r\n\r\nfunction calculate_hue(delta, Cmax, red, green, blue){\r\n  if(delta === 0) return 0;\r\n  if(Cmax === red) return 60*(((green-blue)/delta)%6);\r\n  if(Cmax === green) return 60*((blue-red)/delta+2);\r\n  if(Cmax === blue) return 60*((red- green)/delta + 4);\r\n}\r\n","import Edge from \"../datatypes/Edge\";\r\n\r\nvar MAX_SIMULATIONS = 1000;\r\n\r\nexport function opt3(vertices, edges, dimension, color){\r\n  const selected_color = rgb_to_str(color)\r\n  const path = [];\r\n  var root = edges[0].start;\r\n  path.push(root);\r\n  for(let i = 1; i < edges.length; i++){\r\n    path.push(edges[i].start);\r\n  }\r\n  path.push(root);\r\n  // console.log(calculate_distance_path(path, vertices, dimension))\r\n  var new_path = [];\r\n  var a;\r\n  var b;\r\n  var c;\r\n  for(let n = 0; n < MAX_SIMULATIONS; n++){\r\n    var better_solution;\r\n    a = Math.floor(Math.random()*(path.length-3))+2;\r\n    b = Math.floor(Math.random()*(path.length-3))+2;\r\n    c = Math.floor(Math.random()*(path.length-3))+2;\r\n    // console.log(a,b,c);\r\n    //make sure a,b,c are ordered correctly\r\n    var array = [a,b,c];\r\n    array.sort(function(a,b) {return a-b});\r\n    a = array[0];\r\n    b = array[1];\r\n    c = array[2];\r\n    // console.log(a,b,c)\r\n    // console.log(better_solution)\r\n    const values = reverse_segment_if_better(path, a, b, c, dimension, vertices);\r\n    better_solution = values[1];\r\n    new_path = values[0];\r\n    // console.log(values);\r\n    if(better_solution === true) break;\r\n\r\n  }\r\n  // console.log(calculate_distance_path(new_path, vertices, dimension));\r\n  const new_edges = [];\r\n\r\n  for(let i = 0; i < new_path.length-1; i++){\r\n    const e = edges[i].copy_edge();\r\n    e.start = new_path[i];\r\n    e.end = new_path[i+1];\r\n    new_edges.push(e);\r\n    if(i === a || i === b || i === c){\r\n      new_edges[i].setColor(selected_color);\r\n      new_edges[i].setAlpha(0.7);\r\n    }\r\n    else{\r\n      if(dimension === 2) new_edges[i].setColor(\"rgb(0,0,0)\");\r\n      if(dimension === 3) new_edges[i].setColor(\"rgb(211,211,211)\");\r\n      new_edges[i].setAlpha(0.2);\r\n    }\r\n  }\r\n  // console.log(new_edges);\r\n\r\n  return [new_edges, better_solution]\r\n}\r\n\r\nfunction reverse_segment_if_better(path, i, j, k, dimension, vertices){\r\n  var new_path = [];\r\n  const [A,B,C,D,E,F] = [path[i-1], path[i], path[j-1], path[j], path[k-1], path[k]];\r\n  // console.log(A,B,C,D,E,F);\r\n  const d0 = distance(vertices[A], vertices[B], dimension) + distance(vertices[C], vertices[D], dimension) + distance(vertices[E], vertices[F], dimension);\r\n  const d1 = distance(vertices[A], vertices[C], dimension) + distance(vertices[B], vertices[D], dimension) + distance(vertices[E], vertices[F], dimension);\r\n  const d2 = distance(vertices[A], vertices[B], dimension) + distance(vertices[C], vertices[E], dimension) + distance(vertices[D], vertices[F], dimension);\r\n  const d3 = distance(vertices[A], vertices[D], dimension) + distance(vertices[E], vertices[B], dimension) + distance(vertices[C], vertices[F], dimension);\r\n  const d4 = distance(vertices[F], vertices[B], dimension) + distance(vertices[C], vertices[D], dimension) + distance(vertices[E], vertices[A], dimension);\r\n  if(d0 > d1){\r\n    // console.log(\"better\");\r\n    new_path =  reversed_path(path, i-1, j-1);\r\n    // console.log(\"d0-d1\", calculate_distance_path(new_path, vertices, dimension));\r\n    return [new_path, true];\r\n  }\r\n  else if(d0 > d2){\r\n    // console.log(\"better\");\r\n    new_path =  reversed_path(path, j-1, k-1);\r\n    // console.log(\"d0-d2\", calculate_distance_path(new_path, vertices, dimension));\r\n    return [new_path, true];\r\n  }\r\n  else if(d0 > d4){\r\n    // console.log(\"better\");\r\n    new_path =  reversed_path(path, i-1, k-1);\r\n    // console.log(\"d0-d4\", calculate_distance_path(new_path, vertices, dimension));\r\n    return [new_path,true];\r\n  }\r\n  else if(d0 > d3){\r\n    // console.log(\"better\");\r\n    new_path =  reversed_path_three(path, i, j, k);\r\n    // console.log(\"three\", calculate_distance_path(new_path, vertices, dimension));\r\n    return  [new_path, true];\r\n  }\r\n  return  [path,false];\r\n\r\n}\r\n\r\nfunction distance(v1,v2, dimension){\r\n  var dist;\r\n  if(dimension === 2) dist = Math.pow(v1.x-v2.x,2) + Math.pow(v1.y-v2.y,2);\r\n  if(dimension === 3) dist =  Math.pow(v1.x-v2.x,2) + Math.pow(v1.y-v2.y,2) + Math.pow(v1.z-v2.z, 2);\r\n  if(dist === 0) dist = 0.0000000000000001;\r\n  return Math.sqrt(dist);\r\n}\r\n\r\nfunction reversed_path(path, a, b){\r\n  const new_path = [];\r\n  // console.log(path);\r\n  var root = path[0];\r\n  new_path.push(root);\r\n  for(let i = 0; i< a; i++){\r\n    new_path.push(path[i+1]);\r\n  }\r\n  for(let i = b-1; i > a-1; i--){\r\n    new_path.push(path[i+1]);\r\n  }\r\n  for(let i = b; i < path.length-1; i++){\r\n    new_path.push(path[i+1]);\r\n  }\r\n  // console.log(new_path);\r\n  return new_path;\r\n}\r\n\r\nfunction reversed_path_three(path, i, j, k){\r\n  const new_path = [];\r\n  var root = path[0];\r\n  new_path.push(root);\r\n  for(let n = 1; n < i; n++){\r\n    new_path.push(path[n]);\r\n  }\r\n\r\n  for(let n = j; n < k; n++){\r\n    new_path.push(path[n]);\r\n  }\r\n\r\n  for(let n = i; n< j; n++){\r\n    new_path.push(path[n]);\r\n  }\r\n\r\n  for(let n = k; n < path.length; n++){\r\n    new_path.push(path[n]);\r\n  }\r\n\r\n  return new_path;\r\n}\r\n\r\nfunction calculate_distance_path(path, vertices, dimension){\r\n  var total_dist = 0;\r\n  for(let i = 0; i < path.length-1; i++){\r\n    total_dist += distance(vertices[path[i]], vertices[path[i+1]], dimension);\r\n  }\r\n  return total_dist;\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\"+color[0]+\",\"+color[1]+\",\"+color[2]+\")\";\r\n}\r\n","import Vertex from \"../datatypes/Vertex\"\r\n\r\nexport function GreedyColoring(vertices, edges, dimension, initial_color, end_color){\r\n  //constants\r\n  const animations = [];\r\n\r\n  //copy inputs\r\n  const copy_input = createFrame(vertices, edges);\r\n  const current_vertices = copy_input.vertices;\r\n  const current_edges = copy_input.edges;\r\n  animations.push(createFrame(current_vertices, current_edges));\r\n  //adjacency matrix\r\n  var max_degree = -Infinity;\r\n  const assigned_colors = [];\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    assigned_colors.push(-1);\r\n    max_degree = Math.max(max_degree, vertices[i].degree);\r\n  }\r\n  const adj = createAdjacencyMatrix(vertices, edges);\r\n  var num_colors = max_degree+1;\r\n\r\n  var colors = createColorGradient(initial_color, end_color, num_colors);\r\n\r\n  for(let i = 0; i < vertices.length; i++){\r\n    const neighbors = getNeighbors(vertices, i, adj);\r\n    const available_colors = getAvailableColors(assigned_colors, neighbors, colors);\r\n    const new_color = convertColor(available_colors[0]);\r\n    if(dimension === 2)current_vertices[i].color = new_color\r\n    if(dimension === 3) current_vertices[i].color = construct3DacceptableRGB(new_color);\r\n    animations.push(createFrame(current_vertices, edges));\r\n\r\n    assigned_colors[i] = new_color;\r\n  }\r\n\r\n  return [vertices, animations];\r\n\r\n\r\n}\r\n\r\nfunction createColorGradient(color1, color2, num_colors){\r\n  // console.log(color1, color2);\r\n  const saturation = 0.5;\r\n  const lightness = 0.7;\r\n  const hue = 0;\r\n  const uniform_factor = 360/num_colors;\r\n  // console.log(red,green,blue);\r\n  const new_colors = [];\r\n  for(let i = 0; i < num_colors; i++){\r\n    const new_hue = hue + (uniform_factor*i)%360;\r\n    new_colors.push(convertHSLtoRGB(new_hue, saturation, lightness));\r\n    // new_colors.push([color2[0]+red*(i/num_colors-1), color2[1]+green*(i/num_colors-1), color2[2]+ blue*(i/num_colors-1)]);\r\n  }\r\n\r\n  return new_colors;\r\n}\r\n\r\nfunction createAdjacencyMatrix(v, e){\r\n  const adj = [];\r\n  for(let i = 0; i < v.length; i++){\r\n    const adj_row = [];\r\n    for(let j = 0; j < v.length; j++){\r\n      adj_row.push(0);\r\n    }\r\n    adj.push(adj_row);\r\n  }\r\n\r\n  for(let i = 0; i < e.length; i ++){\r\n    adj[e[i].start][e[i].end] = 1;\r\n    adj[e[i].end][e[i].start] = 1;\r\n  }\r\n  return adj;\r\n}\r\n\r\n/*\r\nReturn index of vertices that are neighbors of v\r\n*/\r\nfunction getNeighbors(vertices, index, adj){\r\n  const neighbors = [];\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    if(adj[index][i] === 1) neighbors.push(i);\r\n  }\r\n  return neighbors;\r\n}\r\n\r\nfunction getAvailableColors(assigned_colors, neighbors, colors){\r\n  const all_colors = [];\r\n  const available_colors = [];\r\n  for(let i = 0; i < neighbors.length; i++){\r\n    // console.log(neighbors[i]);\r\n    const color = assigned_colors[neighbors[i]];\r\n    if(color !== -1) {\r\n      // console.log(color);\r\n      all_colors.push(colorConvert(color))};\r\n  }\r\n  // console.log(\"all colors\",all_colors);\r\n  for(let i = 0; i < colors.length; i++){\r\n    if(!(checkColorIn(colors[i], all_colors))) available_colors.push(colors[i]);\r\n\r\n  }\r\n  return available_colors;\r\n}\r\n\r\nfunction convertColor(color){\r\n  return \"rgb(\"+color[0].toString()+\",\"+color[1].toString()+\",\"+color[2].toString()+\")\";\r\n}\r\n\r\nfunction checkColorIn(color, array){\r\n  // console.log(\"CHECKING\", color, array)\r\n  for(let i = 0; i < array.length; i++){\r\n    // console.log(\"ARRAY ENTRY\", array[i])\r\n    // console.log(\"COLOR\", color);\r\n    if(array[i][0] === (color[0]) && array[i][1] === color[1]\r\n                                      && (array[i][2]) === (color[2])) {\r\n                                        // console.log(\"accepted\",array[i], color)\r\n                                        return true\r\n                                      };\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/*\r\nrgb string to 3-array\r\n*/\r\nfunction colorConvert(color){\r\n  const arr = color.split(\",\");\r\n  // console.log(arr)\r\n  var red = arr[0].split(\"(\")\r\n  // console.log(red[1]);\r\n  red = parseFloat(red[1]);\r\n  // console.log(\"red\", red);\r\n  const green = parseFloat(arr[1]);\r\n  // console.log(\"green\", green);\r\n  const blue = parseFloat(arr[2]);\r\n  // console.log(\"blue\", blue);\r\n  return [red,green,blue];\r\n}\r\n\r\nfunction convertHSLtoRGB(hue, saturation, lightness){\r\n  const C = (1 - Math.abs(2*lightness-1))*saturation\r\n  const X = C * (1 - Math.abs(hue/60)%2 -1);\r\n  const m = lightness - C/2;\r\n  const [R_prime, G_prime, B_prime] = check_degrees(hue, C, X);\r\n  return [(R_prime+m)*255, (G_prime + m)* 255, (B_prime+m) * 255];\r\n}\r\n\r\nfunction check_degrees(hue, C, X){\r\n  if((hue >= 0 && hue < 60) || hue == 360) return [C,X,0];\r\n  if(hue >= 60 && hue < 120 ) return [X,C,0];\r\n  if(hue >= 120 && hue < 180 ) return [0, C, X];\r\n  if(hue >= 180 && hue < 240 ) return [0, X, C];\r\n  if(hue >= 240 && hue < 300 ) return [X, 0, C];\r\n  if(hue >= 300 && hue < 360 ) return [C, 0, X];\r\n  return [0,0,0];\r\n}\r\n\r\nfunction construct3DacceptableRGB(new_color){\r\n  const color_array = colorConvert(new_color);\r\n\r\n  color_array[0] = parseInt(color_array[0]);\r\n  color_array[1] = parseInt(color_array[1]);\r\n  color_array[2] = parseInt(color_array[2]);\r\n\r\n  return convertColor(color_array);\r\n}\r\n\r\n\r\nfunction createFrame(vertices, edges){\r\n  const new_vertices = [];\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    new_vertices.push(vertices[i].copy_vertex());\r\n  }\r\n  return {vertices: new_vertices, edges: edges};\r\n}\r\n","export function misraGries(vertices, edges, initial_color, end_color){\r\n\r\n  //create copies of input\r\n  const copy_input = createFrame(vertices, edges)\r\n  const current_vertices = copy_input.vertices;\r\n  const current_edges = copy_input.edges;\r\n\r\n  const uncolored_edges = copyEdges(edges);\r\n  const incident_colors = createEmptyColors(vertices);\r\n  const incident_vertices = createIncidentVertexList(vertices, edges);\r\n  const edge_colors = createEdgeColors(edges);\r\n  const animations = [];\r\n  var colorsUsed = [];\r\n\r\n  const num_colors = find_max_degree(vertices)+2;\r\n  // console.log(\"num_colors\", num_colors);\r\n  const gradient = createColorGradient(initial_color, end_color, num_colors);\r\n  // console.log(\"gradient\", gradient);\r\n\r\n  var i = 0;\r\n  while(uncolored_edges.length > 0){\r\n    const edge = uncolored_edges.pop();\r\n    const u = edge.start;\r\n    const v = edge.end;\r\n    const [max_fan, fan_colors] = getMaxFan(u,v, incident_colors, incident_vertices, edge_colors);\r\n    // console.log(\"max_fan\", max_fan);\r\n    // console.log(\"max_fan colors\", fan_colors);\r\n\r\n    const u_adjacent_colors = incident_colors[u];\r\n    const fan_end_adjacent_colors = incident_colors[max_fan[max_fan.length-1]];\r\n\r\n\r\n    const u_free_color = pickColor(u_adjacent_colors, gradient);\r\n    // fan_end_adjacent_colors.push(u_free_color);\r\n    const fan_end_free_color = pickColor(fan_end_adjacent_colors, gradient);\r\n\r\n    invertPath(u_free_color, fan_end_free_color, u, incident_colors, incident_vertices, edge_colors);\r\n    for(let i = 0; i < fan_colors.length; i++){\r\n      if(fan_colors[i] === fan_end_free_color) fan_colors[i] = u_free_color;\r\n    }\r\n\r\n    const w = findFreeColorToRotate(max_fan, fan_colors, u_free_color,\r\n                fan_end_free_color, incident_vertices, edge_colors);\r\n    const sub_fan = max_fan.slice(0,max_fan.indexOf(w)+1);\r\n\r\n    for(let i = 0; i < sub_fan.length-1; i++){\r\n      const vertex = sub_fan[i]\r\n      const next_vertex = max_fan[max_fan.indexOf(sub_fan[i])+1];\r\n      edge_colors[[u,vertex]] = edge_colors[[u,next_vertex]];\r\n      incident_colors[u][incident_colors.indexOf(edge_colors[[u,vertex]])] = edge_colors[[u,next_vertex]];\r\n      edge_colors[[vertex, u]] = edge_colors[[next_vertex,u]];\r\n      incident_colors[vertex][incident_colors.indexOf(edge_colors[[u,vertex]])] = edge_colors[[u,next_vertex]];\r\n    }\r\n    edge_colors[[u,w]] = fan_end_free_color;\r\n    edge_colors[[w,u]] = fan_end_free_color;\r\n    incident_colors[u].push(fan_end_free_color);\r\n    incident_colors[w].push(fan_end_free_color);\r\n    // console.log(\"new_iteration\", i++);\r\n    for(let i = 0; i < current_edges.length; i++){\r\n      var color = edge_colors[[current_edges[i].start, current_edges[i].end]];\r\n      if(color.length !== 0){\r\n        current_edges[i].color = rgb_to_str(color);\r\n        current_edges[i].alpha = 0.7;\r\n      }\r\n    }\r\n    animations.push(createFrame(vertices, current_edges));\r\n\r\n  }\r\n\r\n\r\n  animations.push(createFrame(vertices, current_edges));\r\n  return animations;\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\"+color[0]+\",\"+color[1]+\",\"+color[2]+\")\";\r\n}\r\n\r\nfunction createFrame(vertices, edges){\r\n  const new_vertices = [];\r\n  const new_edges = [];\r\n\r\n  for(let i = 0; i < vertices.length; i++){\r\n    new_vertices.push(vertices[i].copy_vertex());\r\n  }\r\n\r\n  for(let j = 0; j < edges.length; j++){\r\n    new_edges.push(edges[j].copy_edge());\r\n  }\r\n\r\n  return {vertices: new_vertices, edges: new_edges};\r\n}\r\n\r\nfunction copyEdges(edges){\r\n  const new_edges = [];\r\n  for(let i = 0; i < edges.length; i++){\r\n    new_edges.push(edges[i].copy_edge());\r\n  }\r\n  return new_edges;\r\n}\r\n\r\nfunction createEmptyColors(vertices){\r\n  const colors = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    colors.push([]);\r\n  }\r\n  return colors;\r\n}\r\n\r\nfunction createEdgeColors(edges){\r\n  const edge_list = {};\r\n  for(let i = 0; i < edges.length; i++){\r\n    const e = edges[i];\r\n    edge_list[[e.start,e.end]] = [];\r\n    edge_list[[e.end, e.start]] = [];\r\n  }\r\n  return edge_list;\r\n}\r\n\r\nfunction find_max_degree(vertices){\r\n  var max_degree = -Infinity;\r\n  for(let i = 0; i < vertices.length; i++){\r\n    max_degree = Math.max(max_degree, vertices[i].degree);\r\n  }\r\n  return max_degree;\r\n}\r\n\r\nfunction getMaxFan(center_vertex, other_vertex, incident_colors, incident_vertices, edge_colors){\r\n  var fan_options = incident_vertices[center_vertex].slice();\r\n  const other_vertex_index = fan_options.indexOf(other_vertex);\r\n  fan_options = fan_options.slice(0, other_vertex_index).concat(fan_options.slice(other_vertex_index+1));\r\n  var fan = [other_vertex];\r\n  var fan_colors = [];\r\n  var last_added = other_vertex;\r\n  var maximal = fan_options.length === 0;\r\n\r\n\r\n  while(!maximal){\r\n    maximal = true;\r\n    var bad_colors = incident_colors[last_added];\r\n    for(let i = 0; i < fan_options.length; i++){\r\n      const vertex = fan_options[i];\r\n      var acceptable_color = true;\r\n      for(let j = 0; j < bad_colors; j++){\r\n        if(edge_colors[[last_added, vertex]] === bad_colors[j] ||\r\n                  edge_colors[[vertex, last_added]] === bad_colors[j]){\r\n                    acceptable_color = false;\r\n                    break;\r\n                  }\r\n      }\r\n\r\n      if(acceptable_color === true){\r\n        fan.push(vertex);\r\n        const color = edge_colors[[center_vertex, vertex]]\r\n        if(color.length !== 0) fan_colors.push(color);\r\n        // console.log(fan_colors);\r\n        const remove_index = fan_options.indexOf(vertex);\r\n        fan_options = fan_options.slice(0, remove_index).concat(fan_options.slice(remove_index+1));\r\n        last_added = vertex;\r\n        maximal = false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return [fan, fan_colors];\r\n\r\n}\r\n\r\nfunction createIncidentVertexList(v,e){\r\n  const adj = createAdjacencyMatrix(v,e);\r\n\r\n  const adjacent_vertices = [];\r\n  for(let i = 0; i < adj.length; i++){\r\n    const row = [];\r\n    for(let j = 0; j < adj[i].length; j++){\r\n      if(adj[i][j] === 1) row.push(j);\r\n    }\r\n    adjacent_vertices.push(row);\r\n  }\r\n  return adjacent_vertices;\r\n}\r\n\r\nfunction createAdjacencyMatrix(vertices, edges){\r\n  const adj = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    const adj_row = [];\r\n    for(let j = 0; j < vertices.length; j++){\r\n      adj_row.push(0);\r\n    }\r\n    adj.push(adj_row);\r\n  }\r\n\r\n  for(let e = 0; e < edges.length; e ++){\r\n    adj[edges[e].start][edges[e].end] = 1;\r\n    adj[edges[e].end][edges[e].start] = 1;\r\n  }\r\n  return adj;\r\n}\r\n\r\nfunction pickColor(taken_colors, gradient){\r\n  for(let i = 0; i < gradient.length; i++){\r\n    var different = true;\r\n    for(let j = 0; j < taken_colors.length; j++){\r\n      if(gradient[i] === taken_colors[j]) {\r\n        different = false;\r\n        break;\r\n      }\r\n    }\r\n    if(different === true) return gradient[i];\r\n  }\r\n  return [];\r\n}\r\n\r\nfunction invertPath(color1, color2, start, incident_colors, incident_vertices, edge_colors){\r\n  var current_vertex = start;\r\n  var last_vertex = start;\r\n  var is_more_path = true;\r\n\r\n  while(is_more_path === true){\r\n    is_more_path = false;\r\n    for(let i = 0; i < incident_vertices[i].length; i ++){\r\n      const v = incident_vertices[i];\r\n      if(v !== last_vertex && (edge_colors[current_vertex,v] === color1 ||\r\n                                      edge_colors[current_vertex,v] === color2)){\r\n        switchColor(current_vertex, v, color1, color2, edge_colors, incident_colors);\r\n        is_more_path = true;\r\n        last_vertex = current_vertex;\r\n        current_vertex = v;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction switchColor(vertex1, vertex2, color1, color2, edge_colors, incident_colors){\r\n  if(edge_colors[[vertex1, vertex2]] === color1){\r\n    edge_colors[vertex1,vertex2] = color2;\r\n    edge_colors[vertex2,vertex1] = color2;\r\n    incident_colors[incident_colors[vertex1].indexOf(color1)] = color2;\r\n    incident_colors[incident_colors[vertex2].indexOf(color1)] = color2;\r\n  }\r\n  else if(edge_colors[[vertex1, vertex2]] === color2){\r\n    edge_colors[vertex1,vertex2] = color1;\r\n    edge_colors[vertex2,vertex1] = color1;\r\n    incident_colors[incident_colors[vertex1].indexOf(color2)] = color1;\r\n    incident_colors[incident_colors[vertex2].indexOf(color2)] = color1;\r\n  }\r\n}\r\n\r\n\r\nfunction createColorGradient(color1, color2, num_colors){\r\n  // console.log(color1, color2);\r\n  const saturation = 0.5;\r\n  const lightness = 0.7;\r\n  const hue = 0;\r\n  const uniform_factor = 360/num_colors;\r\n  // console.log(red,green,blue);\r\n  const new_colors = [];\r\n  for(let i = 0; i < num_colors; i++){\r\n    const new_hue = hue + (uniform_factor*i)%360;\r\n    new_colors.push((convertHSLtoRGB(new_hue, saturation, lightness)));\r\n    // new_colors.push([color2[0]+red*(i/num_colors-1), color2[1]+green*(i/num_colors-1), color2[2]+ blue*(i/num_colors-1)]);\r\n  }\r\n\r\n  return new_colors;\r\n}\r\n\r\n\r\nfunction convertHSLtoRGB(hue, saturation, lightness){\r\n  const C = (1 - Math.abs(2*lightness-1))*saturation\r\n  const X = C * (1 - Math.abs(hue/60)%2 -1);\r\n  const m = lightness - C/2;\r\n  const [R_prime, G_prime, B_prime] = check_degrees(hue, C, X);\r\n  return [parseInt((R_prime+m)*255), parseInt((G_prime + m)* 255), parseInt((B_prime+m)*255)];\r\n}\r\n//\r\nfunction check_degrees(hue, C, X){\r\n  if((hue >= 0 && hue < 60) || hue == 360) return [C,X,0];\r\n  if(hue >= 60 && hue < 120 ) return [X,C,0];\r\n  if(hue >= 120 && hue < 180 ) return [0, C, X];\r\n  if(hue >= 180 && hue < 240 ) return [0, X, C];\r\n  if(hue >= 240 && hue < 300 ) return [X, 0, C];\r\n  if(hue >= 300 && hue < 360 ) return [C, 0, X];\r\n  return [0,0,0];\r\n}\r\n\r\nfunction findFreeColorToRotate(max_fan, fan_colors, color, fan_end_free_color, incident_vertices, edge_colors){\r\n  var different = true;\r\n  for(let i = 0; i < fan_colors.length; i++){\r\n    if(color === fan_colors[i]){\r\n      different = false\r\n    }\r\n  }\r\n  if(different === true) return max_fan[max_fan.length-1];\r\n  for(let i = 0; i < max_fan.length; i++){\r\n    var is_free = true;\r\n    const v1 = max_fan[i]\r\n    for(let j = 0; j < incident_vertices[v1]; j++){\r\n      const v2 = incident_vertices[v1][j];\r\n      if(edge_colors[[v1,v2]] === fan_end_free_color){\r\n        is_free = false;\r\n        break;\r\n      }\r\n    }\r\n    if(is_free === true) return v1;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Vertex from \"./datatypes/Vertex\";\r\nimport Edge from \"./datatypes/Edge\";\r\nimport createRandomNetwork from \"./networkgeneration/createRandomNetwork\";\r\nimport {springEmbedding} from \"./NetworkAlgorithms/springEmbedding\";\r\nimport {fruchtermanReingold} from \"./NetworkAlgorithms/FruchtermanReingold\";\r\nimport {kamadaKawai} from \"./NetworkAlgorithms/kamadaKawai\";\r\nimport {forceAtlas2} from \"./NetworkAlgorithms/forceAtlas2\";\r\nimport {forceAtlasLinLog} from \"./NetworkAlgorithms/forceAtlasLinLog\";\r\nimport {hall} from \"./Spectral/Hall\";\r\nimport {radialFlowDirected} from \"./NetworkAlgorithms/radialFlowDirected\";\r\nimport {spectralDrawing} from \"./Spectral/spectralDrawing\";\r\nimport {kruskal} from \"./MSTAlgorithms/kruskal\";\r\nimport {prim} from \"./MSTAlgorithms/prims\";\r\nimport {opt2} from \"./TSP/opt2\";\r\nimport {opt2Annealing} from \"./TSP/opt2Annealing\";\r\nimport {opt3} from \"./TSP/opt3\";\r\nimport {GreedyColoring} from \"./Coloring/GreedyColoring\";\r\nimport {misraGries} from \"./Coloring/misraGries\";\r\n\r\nimport \"./Network.css\";\r\n\r\nvar MAX_EDGES = 600;\r\nvar MAX_TIMEOUT = 30; //seconds\r\n// var MAX_TIMEOUT = 0;\r\n\r\nasync function waitAnimateNetwork(that,startIndex, endIndex, animations,func){\r\n  if(animations !== null) await that.setState({currentAnimations: animations});\r\n  await that.setState({currentAnimationIndex: startIndex, animationIndex: endIndex, paused: false});\r\n  // console.log(\"start\",startIndex,\"end\", endIndex,\"animations\", animations);\r\n  if(that.state.group === \"layout\") that.animateNetwork();\r\n  if(that.state.group === \"coloring\") that.animateColoring();\r\n  if(that.state.group === \"TSP\") that.animateTSP()\r\n  // if(that.state.group === \"coloring\") continue;\r\n  // if(that.state.group === \"TSP\") continue;\r\n}\r\n\r\nclass NetworkVisualizer extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.canvas =  React.createRef();\r\n    this.state ={\r\n      width : 0,\r\n      height: 0,\r\n      vertices: [],\r\n      edges: [],\r\n      sorted: false,\r\n      iterations: 100,\r\n      maxtimeouts: 0,\r\n      maxDegree: Infinity,\r\n      algoType: \"spring\",\r\n      randomType: \"random\",\r\n      layoutType: 0,\r\n      TSP : false,\r\n      offsetX: 0,\r\n      offsetY: 0,\r\n      dragging: false,\r\n      previousMouseX: 0,\r\n      previousMouseY: 0,\r\n      scaleFactor: 1,\r\n      currentAnimations: [],\r\n      currentAnimationIndex: 0,\r\n      animationIndex: 0,\r\n      paused: true,\r\n      group: \"layout\", // layout, coloring or TSP\r\n\r\n    };\r\n    this.app = this.props.app;\r\n    this.help = React.createRef();\r\n    this.tutorial = React.createRef();\r\n  }\r\n\r\n  componentDidMount(){\r\n    const w = window.innerHeight * 0.55;\r\n    const h = window.innerHeight * 0.55;\r\n\r\n    const [vertices, edges] = createRandomNetwork(w, h, this.app.state.numV,\r\n      this.app.state.numE, this.app.state.connected, this.state.randomType,\r\n      [this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue],\r\n      [this.app.state.endRed, this.app.state.endGreen, this.app.state.endBlue], this.app.state.degreesize, this.app.state.minsize, this.app.state.maxsize)\r\n    this.setState(\r\n      {width: w,\r\n      height: h,\r\n      vertices: vertices,\r\n      edges: edges,}\r\n    );\r\n    this.app.setState({numV: vertices.length, numE: edges.length, mouseX: w/2, mouseY:h/2});\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    this.canvas.current.width = this.state.width;\r\n    this.canvas.current.height = this.state.height;\r\n    const ctx = this.canvas.current.getContext(\"2d\");\r\n    ctx.scale(this.state.scaleFactor,this.state.scaleFactor);\r\n    for(let i =0; i < this.state.vertices.length; i++){\r\n      ctx.beginPath();\r\n      const c = this.state.vertices[i].color;\r\n      ctx.fillStyle= c;\r\n      // ctx.fillRect(this.state.vertices[i][0], this.state.vertices[i][1], 6, 6);\r\n      ctx.arc(this.state.vertices[i].x+this.state.offsetX, this.state.vertices[i].y+this.state.offsetY, this.state.vertices[i].size, 0, Math.PI*2)\r\n      ctx.fill();\r\n      ctx.closePath();\r\n    }\r\n\r\n    for(let j = 0; j < this.state.edges.length; j++){\r\n      ctx.beginPath();\r\n      const index1 = this.state.edges[j].start;\r\n      const index2 = this.state.edges[j].end;\r\n      ctx.moveTo(this.state.vertices[index1].x+this.state.offsetX,this.state.vertices[index1].y+this.state.offsetY);\r\n      ctx.lineTo(this.state.vertices[index2].x+this.state.offsetX,this.state.vertices[index2].y+this.state.offsetY);\r\n      ctx.globalAlpha = this.state.edges[j].alpha;\r\n      ctx.strokeStyle = this.state.edges[j].color;\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n    }\r\n\r\n  }\r\n  componentWillUnmount(){\r\n      this.cancelAnimation();\r\n  }\r\n\r\n  generateForceDirectedLayout(){\r\n    const values = springEmbedding(this.state.vertices, this.state.edges,\r\n                    this.state.width, this.state.height, this.state.iterations,\r\n                    this.app.state.settings.spring );\r\n    const new_vertices = values[0];\r\n    const animations = values[1];\r\n    waitAnimateNetwork(this, 0,animations.length, animations);\r\n  }\r\n\r\n  generateReingold(){\r\n    const values = fruchtermanReingold(this.state.vertices, this.state.edges,\r\n            this.state.width,this.state.height, this.state.iterations,\r\n            this.app.state.settings.fruchterman);\r\n    const new_vertices = values[0];\r\n    const animations = values[1];\r\n    // console.log(animations);\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateKamadaKawai(){\r\n    const values = kamadaKawai(this.state.vertices, this.state.edges,\r\n      this.state.width, this.state.height, this.state.iterations);\r\n  }\r\n\r\n  generateForceAtlas2(){\r\n    const values = forceAtlas2(this.state.vertices, this.state.edges,\r\n      this.state.width, this.state.height, this.state.iterations, this.app.state.settings.forceatlas2);\r\n    const new_vertices = values[0];\r\n    const animations = values[1];\r\n    // console.log(new_vertices);\r\n\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateForceAtlasLinLog(){\r\n    const values = forceAtlasLinLog(this.state.vertices, this.state.edges,\r\n      this.state.width, this.state.height, this.state.iterations, this.app.state.settings.forceatlaslinlog)\r\n    const new_vertices = values[0];\r\n    const animations = values[1];\r\n\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateHall(){\r\n    const values = hall(this.state.vertices,this.state.edges, this.state.width, this.state.height)\r\n  }\r\n\r\n  generateSpectralDrawing(){\r\n    const [eigenvectors, animations] = spectralDrawing(this.state.vertices,\r\n      this.state.edges,this.state.width, this.state.height, this.app.state.dimension);\r\n      waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateRadialFlowDirected(){\r\n\r\n  }\r\n\r\n  generateKruskal(){\r\n    const [animations, sorted_edges] = kruskal(this.state.vertices, this.state.edges, 2,\r\n      [this.app.state.settings.kruskal.red, this.app.state.settings.kruskal.green,\r\n        this.app.state.settings.kruskal.blue]);\r\n    const that = this;\r\n    waitSetEdges(that, sorted_edges, animations);\r\n  }\r\n\r\n  generatePrim(){\r\n    const animations = prim(this.state.vertices, this.state.edges, 2,\r\n      [this.app.state.settings.prim.red, this.app.state.settings.prim.green,\r\n      this.app.state.settings.prim.blue]);\r\n    waitAnimateNetwork(this,0,animations.length,animations);\r\n  }\r\n\r\n  generate2Opt(){\r\n    const animations = [];\r\n    this.app.setState({running:true});\r\n    const selected_color = [this.app.state.settings.opt2.red, this.app.state.settings.opt2.green,\r\n                      this.app.state.settings.opt2.blue];\r\n    var edges = this.state.edges;\r\n    var better_solution = false;\r\n    for(let i = 0; i < (this.app.state.settings.opt2.timeout*1000)/this.app.state.animationSpeed; i++){\r\n      [edges, better_solution]= opt2(this.state.vertices,\r\n        edges, this.app.state.dimension, selected_color);\r\n      animations.push(edges);\r\n    }\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generate2OptAnnealing(){\r\n    const animations = [];\r\n    this.app.setState({running:true});\r\n    var current_temperature = this.app.state.settings.opt2annealing.temperature;\r\n    const max_temperature = current_temperature;\r\n    var temp = current_temperature;\r\n    for(let i = 0; i < (this.app.state.settings.opt2annealing.timeout*1000)/this.app.state.animationSpeed; i++){\r\n      temp = 0.992*temp;\r\n    }\r\n    var min_temperature = temp;\r\n    // console.log(\"max\", max_temperature, \"min\", min_temperature);\r\n\r\n    var edges = this.state.edges;\r\n    var better_solution = false;\r\n    for(let i = 0; i < (this.app.state.settings.opt2annealing.timeout*1000)/this.app.state.animationSpeed; i++){\r\n      [edges, better_solution] = opt2Annealing(this.state.vertices,\r\n          edges, this.app.state.dimension, this.app.state.settings.opt2annealing.startColor,\r\n          this.app.state.settings.opt2annealing.endColor, current_temperature,\r\n          min_temperature, max_temperature,\r\n          this.app.state.settings.opt2annealing.acceptance);\r\n      animations.push(edges);\r\n      current_temperature = 0.992*current_temperature;\r\n    }\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generate3Opt(){\r\n    const animations = [];\r\n    this.app.setState({running:true});\r\n    const selected_color = [this.app.state.settings.opt3.red, this.app.state.settings.opt3.green,\r\n                      this.app.state.settings.opt3.blue];\r\n    var edges = this.state.edges;\r\n    var better_solution = false;\r\n    for(let i = 0; i < (this.app.state.settings.opt3.timeout*1000)/this.app.state.animationSpeed; i++){\r\n      [edges, better_solution]= opt3(this.state.vertices,\r\n        edges, this.app.state.dimension, selected_color);\r\n      animations.push(edges);\r\n    }\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateGreedyVertex(){\r\n    const [vertices, animations] = GreedyColoring(this.state.vertices, this.state.edges, this.app.state.dimension, [255,255,0], [0,0,255])\r\n    waitAnimateNetwork(this,0,animations.length,animations);\r\n  }\r\n\r\n  generateMisraGries(){\r\n    const animations = misraGries(this.state.vertices, this.state.edges, [255,0,0], [0,255,0]);\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  runAlgorithm(){\r\n    if(this.app.state.running === false){\r\n      if(this.state.algoType === \"spring\") this.generateForceDirectedLayout();\r\n      if(this.state.algoType === \"fruchtermanReingold\") this.generateReingold();\r\n      if(this.state.algoType === \"kamadaKawai\") this.generateKamadaKawai();\r\n      if(this.state.algoType === \"forceAtlas2\") this.generateForceAtlas2();\r\n      if(this.state.algoType === \"forceatlaslinlog\") this.generateForceAtlasLinLog();\r\n      if(this.state.algoType === \"hall\") this.generateHall();\r\n      if(this.state.algoType === \"spectralDrawing\") this.generateSpectralDrawing();\r\n      if(this.state.algoType === \"radialFlowDirected\") this.generateRadialFlowDirected();\r\n      if(this.state.algoType === \"kruskal\") this.generateKruskal();\r\n      if(this.state.algoType === \"prim\") this.generatePrim();\r\n      if(this.state.algoType === \"2opt\") this.generate2Opt();\r\n      if(this.state.algoType === \"2optannealing\") this.generate2OptAnnealing();\r\n      if(this.state.algoType === \"3opt\") this.generate3Opt();\r\n      if(this.state.algoType === \"greedyvertex\") this.generateGreedyVertex();\r\n      if(this.state.algoType === \"misra\") this.generateMisraGries();\r\n    }\r\n    else{\r\n      waitAnimateNetwork(this, this.state.currentAnimationIndex, this.state.currentAnimations.length-1, null);\r\n    }\r\n  }\r\n\r\n  animateTSP(func){\r\n    let x = 0;\r\n    this.app.setState({running:true});\r\n    // console.log(this.app.state.running)\r\n    const start = this.state.currentAnimationIndex;\r\n    const end = this.state.animationIndex;\r\n    for(let k =start; k < end; k++){\r\n      x = setTimeout(() => {\r\n        const vertices = this.state.vertices;\r\n        const edges= this.state.edges;\r\n        const animations = this.state.currentAnimations;\r\n\r\n        this.setState({edges: animations[k], currentAnimationIndex: this.state.currentAnimationIndex + 1});\r\n        // console.log(\"animating\")\r\n        if(k === end-1){\r\n          // console.log(\"pausing\")\r\n          this.setState({paused: true,currentAnimationIndex: end});\r\n\r\n          // console.log(final_vertices);\r\n        }\r\n      }, (k-start) * this.app.state.animationSpeed)\r\n    }\r\n\r\n    this.setState({maxtimeouts: x});\r\n  }\r\n\r\n  animateColoring(){\r\n    let x = 0;\r\n    this.app.setState({running:true});\r\n    // console.log(\"animating\");\r\n    const start = this.state.currentAnimationIndex;\r\n    const end = this.state.animationIndex;\r\n\r\n    for(let k =start; k < end; k++){\r\n      x = setTimeout(() => {\r\n        const vertices = this.state.vertices;\r\n        const edges= this.state.edges;\r\n        const animations = this.state.currentAnimations;\r\n\r\n        this.setState({vertices: animations[k].vertices, edges:animations[k].edges, currentAnimationIndex: this.state.currentAnimationIndex + 1});\r\n        // console.log(\"animating\")\r\n        if(k === end-1){\r\n          // console.log(\"pausing\")\r\n          this.setState({paused: true,currentAnimationIndex: end});\r\n\r\n          // console.log(final_vertices);\r\n        }\r\n      }, (k-start) * this.app.state.animationSpeed)\r\n    }\r\n    this.setState({maxtimeouts: x});\r\n  }\r\n\r\n  animateNetwork(){\r\n    let x = 0;\r\n    this.app.setState({running:true});\r\n    const start = this.state.currentAnimationIndex;\r\n    const end = this.state.animationIndex;\r\n    for(let k = start; k < end; k++){\r\n\r\n      x = setTimeout(() => {\r\n        const vertices = this.state.vertices;\r\n        for(let i = 0; i <vertices.length; i++){\r\n          vertices[i].setVector(this.state.currentAnimations[k][i]);\r\n        }\r\n        this.setState({vertices: vertices, currentAnimationIndex: this.state.currentAnimationIndex+1});\r\n        if(k === end-1) this.setState({paused: true, currentAnimationIndex: end});\r\n        // console.log(\"animating\")\r\n      }, (k-start) * this.app.state.animationSpeed)\r\n    }\r\n    this.setState({maxtimeouts: x});\r\n  }\r\n\r\n  setAlgoType(v){\r\n    // this.attribute.current.setLayout(v)\r\n    this.setState({algoType: v});\r\n    if(v === \"2opt\" || v === \"3opt\" ||\r\n        v === \"2optannealing\" || v === \"3optannealing\"){\r\n          this.setState({group:\"TSP\"});\r\n          if(this.state.randomType !== \"cycle\") this.setRandomizedType(\"cycle\");\r\n        }\r\n    else if(v === \"spring\" || v === \"fruchterman\" || v === \"forceAtlas2\"\r\n                      || v === \"forceatlaslinlog\" || v === \"spectralDrawing\" ||\r\n                      v === \"hall\" || v === \"schwarz\"){\r\n        this.setState({group:\"layout\"});\r\n      }\r\n    else if(v === \"kruskal\" || v === \"prim\" || v === \"greedyvertex\" ||\r\n                                        v === \"misra\"){\r\n        this.setState({group:\"coloring\"});\r\n    }\r\n  }\r\n\r\n  setRandomizedType(v){\r\n    const that = this;\r\n    waitSetRandomizedType(that, v);\r\n  }\r\n\r\n\r\n  setLayoutType(v){\r\n    const value = parseInt(v);\r\n    this.setState({layoutType:value});\r\n    if(value === 0){\r\n      const w =  0.55*window.innerHeight;\r\n      const h = 0.55*window.innerHeight;\r\n      this.canvas.current.height = h;\r\n      this.canvas.current.width = w;\r\n      const that = this;\r\n      waitSetLayout(that, w, h);\r\n    }\r\n    if(value === 1){\r\n      const w =  0.97*window.innerWidth;\r\n      const h = 0.55*window.innerHeight;\r\n      this.canvas.current.height = h;\r\n      this.canvas.current.width = w;\r\n      const that = this;\r\n      waitSetLayout(that, w, h);\r\n      // this.attribute.current.setState({delta: 0.2})\r\n    }\r\n  }\r\n\r\n  resetNetwork(){\r\n    const [vertices, edges] = createRandomNetwork(this.state.width, this.state.height,\r\n       this.app.state.numV, this.app.state.numE, this.app.state.connected, this.state.randomType,\r\n       [this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue],\r\n       [this.app.state.endRed, this.app.state.endGreen, this.app.state.endBlue], this.app.state.degreesize, this.app.state.minsize, this.app.state.maxsize);\r\n    this.setState(\r\n      {vertices: vertices,\r\n       edges: edges,\r\n      }\r\n    );\r\n\r\n    this.app.setState({numV: vertices.length, numE: edges.length});\r\n  }\r\n\r\n  clearAnimations(){\r\n    var id = this.state.maxtimeouts;\r\n    while(id){\r\n      clearInterval(id);\r\n      id --;\r\n    }\r\n  }\r\n\r\n  cancelAnimation(){\r\n    this.setState({currentAnimations: [], paused: true});\r\n    this.clearAnimations();\r\n    this.app.setState({running: false});\r\n  }\r\n\r\n  pauseAnimation(){\r\n    this.setState({paused:true});\r\n    this.clearAnimations();\r\n    // console.log(this.state.currentAnimationIndex);\r\n  }\r\n\r\n  resetColoring(){\r\n    const shouldRecolor = !(sameColor([this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue],\r\n                              [this.app.state.endRed, this.app.state.endGreen, this.app.state.endBlue]));\r\n    if(shouldRecolor === true){\r\n      const new_vertices = this.state.vertices.slice();\r\n      const max_degree = find_max_degree(this.state.vertices);\r\n      var gradient = createColorGradient([this.app.state.startRed, this.app.state.startGreen,\r\n                                          this.app.state.startBlue], [this.app.state.endRed,\r\n                                          this.app.state.endGreen, this.app.state.endBlue], max_degree);\r\n      for(let i = 0; i < new_vertices.length; i++){\r\n        new_vertices[i].color = assign_color(new_vertices[i].degree, max_degree, gradient);\r\n      }\r\n      const new_edges = [];\r\n      for(let j = 0; j < this.state.edges.length; j++){\r\n        const e = new Edge(this.state.edges[j].start, this.state.edges[j].end)\r\n        if(this.state.group === \"TSP\") e.setAlpha(0.2);\r\n        new_edges.push(e);\r\n      }\r\n\r\n      this.setState({vertices: new_vertices, edges: new_edges});\r\n    }\r\n    else{\r\n      const new_vertices = this.state.vertices.slice();\r\n      const color = rgb_to_str([this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue]);\r\n      for(let i = 0; i < new_vertices.length; i ++){\r\n        new_vertices[i].color = color;\r\n      }\r\n      const new_edges = [];\r\n      for(let j = 0; j < this.state.edges.length; j++){\r\n        const e = new Edge(this.state.edges[j].start, this.state.edges[j].end)\r\n        if(this.state.group === \"TSP\") e.setAlpha(0.2);\r\n        new_edges.push(e);\r\n      }\r\n      this.setState({vertices: new_vertices, edges: new_edges});\r\n    }\r\n  }\r\n\r\n  updateVertexSize(){\r\n    if(this.app.state.degreesize === false){\r\n      const new_size = 3;\r\n      const new_vertices = this.state.vertices.slice();\r\n      for(let i = 0; i < new_vertices.length; i++){\r\n        new_vertices[i].size = new_size;\r\n      }\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n    else{\r\n      const max_degree = find_max_degree(this.state.vertices);\r\n      const new_vertices = this.state.vertices.slice();\r\n      for(let i = 0; i < new_vertices.length; i ++){\r\n        new_vertices[i].size = assign_size(new_vertices[i].degree,\r\n          max_degree, this.app.state.minsize, this.app.state.maxsize);\r\n      }\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n  }\r\n\r\n  updateColoring(){\r\n    const shouldRecolor = !(sameColor([this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue],\r\n                              [this.app.state.endRed, this.app.state.endGreen, this.app.state.endBlue]));\r\n    if(shouldRecolor === true){\r\n      const new_vertices = this.state.vertices.slice();\r\n      const max_degree = find_max_degree(this.state.vertices);\r\n      var gradient = createColorGradient([this.app.state.startRed, this.app.state.startGreen,\r\n                                          this.app.state.startBlue], [this.app.state.endRed,\r\n                                          this.app.state.endGreen, this.app.state.endBlue], max_degree);\r\n      for(let i = 0; i < new_vertices.length; i++){\r\n        new_vertices[i].color = assign_color(new_vertices[i].degree, max_degree, gradient);\r\n      }\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n    else{\r\n      const new_vertices = this.state.vertices.slice();\r\n      const color = rgb_to_str([this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue]);\r\n      for(let i = 0; i < new_vertices.length; i ++){\r\n        new_vertices[i].color = color;\r\n      }\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n  }\r\n\r\n  setDrag(e,v){\r\n    e.preventDefault();\r\n    if(v === true) {\r\n      this.state.previousMouseX = e.clientX;\r\n      this.state.previousMouseY = e.clientY;\r\n    }\r\n    this.setState({dragging:v});\r\n  }\r\n\r\n  updateCamera(e){\r\n    e.preventDefault();\r\n    if(this.state.dragging){\r\n      const deltaX = e.clientX - this.state.previousMouseX;\r\n      const deltaY = e.clientY - this.state.previousMouseY;\r\n      const new_offsetX = this.state.offsetX += 0.75*deltaX;\r\n      const new_offsetY = this.state.offsetY += 0.75*deltaY;\r\n      this.setState({previousMouseX: e.clientX, previousMouseY: e.clientY,\r\n                    offsetX: new_offsetX, offsetY: new_offsetY});\r\n    }\r\n  }\r\n\r\n  resetCamera(){\r\n    this.setState({offsetX:0,offsetY:0, scaleFactor: 1, mouseX: this.state.wdith/2, mouseY:this.state.height/2})\r\n  }\r\n\r\n  zoomCamera(e){\r\n    const delta = -Math.sign(e.deltaY);\r\n    const new_scale_factor = this.state.scaleFactor + delta*0.035;\r\n    this.setState({scaleFactor: new_scale_factor});\r\n  }\r\n\r\n  skipFrame(){\r\n    this.clearAnimations();\r\n    const animations_index = Math.min(this.state.currentAnimationIndex + 1,\r\n                                      this.state.currentAnimations.length-1);\r\n    waitAnimateNetwork(this, animations_index, animations_index+1, null);\r\n  }\r\n\r\n  rewindFrame(){\r\n    this.clearAnimations();\r\n    const animations_index = Math.max(this.state.currentAnimationIndex -2, 0);\r\n    waitAnimateNetwork(this, animations_index, animations_index+1, null);\r\n  }\r\n\r\n  skipForward(){\r\n    this.clearAnimations();\r\n    const animations_index = Math.min(this.state.currentAnimations.length-1,\r\n        this.state.currentAnimationIndex + Math.floor(1000/this.app.state.animationSpeed));\r\n    const end_index = this.state.paused === true? animations_index+1:\r\n                              this.state.currentAnimations.length;\r\n    waitAnimateNetwork(this, animations_index, end_index, null);\r\n  }\r\n\r\n  skipBackward(){\r\n    this.clearAnimations();\r\n    const animations_index = Math.max(0,\r\n        this.state.currentAnimationIndex - Math.floor(1000/this.app.state.animationSpeed));\r\n    const end_index = this.state.paused === true? animations_index+1:\r\n                            this.state.currentAnimations.length-1;\r\n    waitAnimateNetwork(this, animations_index, end_index, null);\r\n  }\r\n\r\n  skipToBeginning(){\r\n    this.clearAnimations();\r\n    const animations_index = 0\r\n    this.setState({currentAnimationIndex:0})\r\n    waitAnimateNetwork(this, 0, 1,null);\r\n  }\r\n  skipToEnd(){\r\n    this.clearAnimations();\r\n    const animations_index = this.state.currentAnimations.length-1;\r\n    waitAnimateNetwork(this, animations_index, animations_index+1, null)\r\n  }\r\n\r\n  openNetworkSettings(){\r\n    waitOpenNetworkSettings(this);\r\n  }\r\n\r\n  openAlgorithmSettings(){\r\n    waitOpenAlgorithmSettings(this);\r\n  }\r\n\r\n  saveAsCSV(){\r\n    let csvContent = \"data:text/csv;charset=utf-8,\";\r\n    const vertices = this.state.vertices;\r\n    const edges = this.state.edges;\r\n\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      csvContent += vertices[i].toCSV();\r\n    }\r\n    for(let i = 0; i < edges.length; i++){\r\n      csvContent += (edges[i].toCSV());\r\n    }\r\n    var link = document.createElement('a');\r\n    link.href = csvContent;\r\n    link.download = 'Network.csv';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n\r\n  }\r\n\r\n  saveAs(extension){\r\n    const canvas = this.canvas.current;\r\n    const image = canvas.toDataURL(\"network/\"+extension);\r\n    var link = document.createElement('a');\r\n    link.href = image;\r\n    link.download = 'Network.'+extension;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n    return <div className = \"network\">\r\n            <canvas style = {{marginTop: this.props.height*1/20+this.props.height/40}}\r\n            className = \"networkCanvas\" ref = {this.canvas}\r\n            onMouseLeave = {(e) => this.setDrag(e,false)}\r\n            onMouseDown = {(e) => this.setDrag(e,true)}\r\n            onMouseUp = {(e) => this.setDrag(e,false)}\r\n            onMouseMove = {(e) => this.updateCamera(e)}\r\n            onWheel = {(e) => this.zoomCamera(e)}>\r\n            </canvas>\r\n            <br></br>\r\n            <div className = \"animationButtons\">\r\n            <button className = \"FirstFrameB\" title = \"Skip to algorithm start\"\r\n            disabled = {this.app.state.running === false || this.state.currentAnimationIndex === 1}\r\n            style = {{height:Math.min(this.state.width/10,100),\r\n              width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n              onClick = {() => this.skipToBeginning()}></button>\r\n            <button className = \"FastBackB\" title = \"Rewind algorithm 1 second\"\r\n            disabled = {this.app.state.running === false || this.state.currentAnimationIndex === 1}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                onClick = {() => this.skipBackward()}></button>\r\n            <button className = \"PreviousFrameB\" title = \"Previous frame\"\r\n            disabled = {this.app.state.running === false || this.state.currentAnimationIndex === 1}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                onClick = {() => this.rewindFrame()}></button>\r\n            <button className = \"StartB\" hidden = {this.state.paused === false} title = \"Run algorithm\"\r\n            disabled = {(this.state.currentAnimationIndex === this.state.currentAnimations.length)\r\n            && this.state.currentAnimations.length !== 0}\r\n            onClick={() => this.runAlgorithm()}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n            <button className = \"PauseB\" hidden = {this.state.paused === true} title = \"Pause Algorithm\"\r\n            onClick = {() => this.pauseAnimation()}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                 width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n            <button className = \"StopB\"\r\n            title = \"Clear algorithm\"\r\n            disabled = {this.app.state.running === false}\r\n            onClick = {() => this.cancelAnimation()}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n            <button className = \"NextFrameB\"\r\n            title = \"Next Frame\"\r\n            disabled = {this.app.state.running === false\r\n                        || this.state.currentAnimationIndex === this.state.currentAnimations.length}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                onClick = {() => this.skipFrame()}></button>\r\n            <button className = \"FastForwardB\"\r\n            title = \"Skip forward 1 second\"\r\n            disabled = {this.app.state.running === false\r\n                        || this.state.currentAnimationIndex === this.state.currentAnimations.length}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                onClick = {() => this.skipForward()}></button>\r\n            <button className = \"LastFrameB\"\r\n            title = \"Skip to algorithm termination\"\r\n            disabled = {this.app.state.running === false\r\n                        || this.state.currentAnimationIndex === this.state.currentAnimations.length}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                onClick = {() => this.skipToEnd()}></button>\r\n            <button className= \"CameraB\"\r\n            title = \"Reset camera\"\r\n            disabled = {this.state.offsetX === 0 && this.state.offsetY === 0 && this.state.scaleFactor === 1}\r\n            onClick = {() => this.resetCamera()}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n            <button className = \"ResetColoringB\"\r\n            title = \"Reset Coloring\"\r\n            disabled = {this.app.state.running === true}\r\n            onClick = {() => this.resetColoring()}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n            </div>\r\n            <br></br>\r\n            <div className = \"selectContainer\">\r\n              <div className = \"selectalgorow\">\r\n\r\n                <select className = \"selectalgo\"\r\n                onChange = {(event) => this.setAlgoType(event.target.value)}\r\n                style = {{width: (this.state.width*8)/10}}>\r\n                  <optgroup label = \"Force Directed Algorithms\">\r\n                  <option value = \"spring\"> Basic Spring Embedding </option>\r\n                  <option value = \"fruchtermanReingold\"> Fruchterman-Reingold </option>\r\n                  <option value = \"kamadaKawai\" hidden = {true} disabled = {true}> Kamada-Kawai </option>\r\n                  <option value = \"forceAtlas2\"> Force Atlas 2 </option>\r\n                  <option value = \"forceatlaslinlog\" > Force Atlas 2 (LinLog) </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Spectral Layout Algorithms\">\r\n                  <option value = \"spectralDrawing\"> Generalized Eigenvector (Koren)</option>\r\n                  <option value = \"hall\" hidden= {true}> Hall's algorithm </option>\r\n                  <option value = \"schwarz\" disabled = {true}> Schwarz Based Method </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Custom Algorithms\" hidden = {true}>\r\n                    <option value = \"radialFlowDirected\" disabled = {true}>  Radial Flow Directed </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Minimum Spanning Trees\">\r\n                    <option value =\"kruskal\"> Kruskral's Algorithm</option>\r\n                    <option value = \"prim\"> Prim's Algorithm </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"TSP\">\r\n                    <option value = \"2opt\"> 2-Opt </option>\r\n                    <option value = \"3opt\"> 3-Opt </option>\r\n                    <option value = \"2optannealing\"> 2-Opt Simulated Annealing </option>\r\n                    <option value = \"3optannealing\" disabled = {true} hidden = {true}> 3-Opt Simulated Annealing </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Edge Coloring Algorithms\">\r\n                    <option value = \"misra\"> Misra-Gries Algorithm (Fan Rotation)</option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Vertex Coloring Algorithms\">\r\n                    <option value = \"greedyvertex\" > Greedy Coloring </option>\r\n                  </optgroup>\r\n                </select>\r\n                <div className = \"dropdown\">\r\n                  <button className = \"saveB\"\r\n                  disabled = {this.app.state.running === true && this.state.paused === false}\r\n                  title = \"Save as\"\r\n                  style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}>\r\n                  </button>\r\n                  <div className = \"dropdown-content\">\r\n                    <a className = \"aFile\" onClick = {() => this.saveAsCSV()}>.csv</a>\r\n                    <a className = \"aFile\" onClick = {() => this.saveAs(\"png\")}>.png</a>\r\n                    <a className = \"aFile\" onClick = {() => this.saveAs(\"jpg\")}>.jpg</a>\r\n                  </div>\r\n                </div>\r\n                <button className = \"AlgoB\"\r\n                title = \"Algorithm Settings\"\r\n                onClick = {() => this.openAlgorithmSettings()}\r\n                disabled = {this.app.state.running === true}\r\n                  style = {{height:Math.min(this.state.width/10,100),\r\n                    width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}>\r\n                    </button>\r\n              </div>\r\n\r\n              <br></br>\r\n              <div className = \"selectalgorow\">\r\n                {/*<select className = \"selectalgo\"\r\n                 onChange = {(event) => this.setLayoutType(event.target.value)}\r\n                 style = {{width: (this.state.width*2)/10}}\r\n                disabled = {this.app.state.running}>\r\n                  <option value = \"0\"> Square </option>\r\n                  <option value = \"1\"> Stretch to Fit </option>\r\n                </select>*/}\r\n                <select value = {this.state.randomType}\r\n                style = {{width: (this.state.width*8)/10}}\r\n                disabled = {this.app.state.running === true }className = \"selectalgo\" onChange = {(event) => this.setRandomizedType(event.target.value)}>\r\n                  <option value = \"random\" disabled = {this.state.group === \"TSP\"}> Random </option>\r\n                  <option value = \"randomcircle\" disabled = {this.state.group === \"TSP\"}> Random Circle </option>\r\n                  <option  value = \"cycle\"> Random Hamiltonian Cycle </option>\r\n                  <option value = \"randomclustering\" disabled = {true}> Random Clustering </option>\r\n                </select>\r\n                <button className = \"resetB\"\r\n                onClick = {() => this.resetNetwork()}\r\n                title = \"New random network\"\r\n                disabled = {this.app.state.running === true}\r\n                  style = {{height:Math.min(this.state.width/10,100),\r\n                    width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}>\r\n                    </button>\r\n                <button className = \"generalB\"\r\n                title = \"Network Settings\"\r\n                onClick = {() => this.openNetworkSettings()}\r\n                disabled = {this.app.state.running === true}\r\n                  style = {{height:Math.min(this.state.width/10,100),\r\n                    width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}>\r\n                    </button>\r\n              </div>\r\n\r\n\r\n            </div>\r\n           </div>\r\n  }\r\n}\r\n\r\nexport default NetworkVisualizer;\r\n\r\n\r\nasync function waitSetLayout(that,w,h){\r\n  await that.setState({height: h,width: w});\r\n  that.resetNetwork();\r\n}\r\n\r\nasync function waitSetEdges(that, sorted_edges,animations){\r\n  await that.setState({edges: sorted_edges});\r\n  waitAnimateNetwork(that, 0, animations.length,animations)\r\n}\r\n\r\nasync function waitSetRandomizedType(that,v){\r\n  await that.setState({randomType: v});\r\n  that.resetNetwork();\r\n}\r\n\r\nasync function animateEdges(that, edges){\r\n  await that.setState({edges: edges});\r\n}\r\n\r\nfunction find_max_degree(vertices){\r\n  var max_degree = -Infinity;\r\n  for(let i = 0; i < vertices.length; i++){\r\n    max_degree = Math.max(vertices[i].degree, max_degree);\r\n  }\r\n  return max_degree;\r\n}\r\n\r\nfunction assign_size(degree, max_degree, minsize, maxsize){\r\n  //min degree is 1 or 0\r\n  return minsize +(maxsize - minsize)*(degree/max_degree)\r\n}\r\n\r\nfunction sameColor(startColor, endColor){\r\n  if(startColor[0] === endColor[0] && startColor[1] === endColor[1] && startColor[2] === endColor[2]) return true;\r\n  return false;\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\" + color[0] + \",\" + color[1] + \",\" + color[2]+\")\";\r\n}\r\n\r\nfunction createColorGradient(startColor, endColor, maxDegree){\r\n  // console.log(\"inside color gradient\", startColor, endColor, maxDegree);\r\n  var [startHue, startSaturation, startLightness] = rgb_to_hsl(startColor);\r\n  var [endHue, endSaturation, endLightness] = rgb_to_hsl(endColor);\r\n\r\n  // console.log(startHue, startSaturation, startLightness);\r\n  // console.log(endHue, endSaturation, endLightness);\r\n  var incrementHue = (endHue-startHue)/maxDegree;\r\n\r\n  const gradient = [];\r\n\r\n  for(let i = 0; i < maxDegree; i++){\r\n    const newHue = startHue+(incrementHue*i)%360;\r\n    const [red,green,blue] = hsl_to_rgb((startHue+incrementHue*i)%360, startSaturation,\r\n                                            startLightness)\r\n    gradient.push([Math.abs(red%256), Math.abs(green%256), Math.abs(blue%256)]);\r\n    // console.log(gradient[i]);\r\n  }\r\n  return gradient;\r\n}\r\n\r\nfunction rgb_to_hsl(rgbColor){\r\n  var red = rgbColor[0]/255;\r\n  var green = rgbColor[1]/255;\r\n  var blue = rgbColor[2]/255;\r\n  var Cmax = Math.max(...[red,green,blue]);\r\n  var Cmin = Math.min(...[red,green,blue]);\r\n  var delta = Cmax-Cmin;\r\n\r\n\r\n  var hue = calculate_hue(delta, Cmax, red, green, blue)%360;\r\n  var lightness = (Cmax+Cmin)/2;\r\n  var saturation = delta === 0? 0: delta/(1-Math.abs(2*lightness-1));\r\n\r\n  return [hue, saturation, lightness];\r\n}\r\n\r\nfunction hsl_to_rgb(hue, saturation, lightness){\r\n  const C = (1 - Math.abs(2*lightness-1))*saturation\r\n  const X = C * (1 - Math.abs(hue/60)%2 -1);\r\n  const m = lightness - C/2;\r\n  const [R_prime, G_prime, B_prime] = check_degrees(hue, C, X);\r\n  return [((R_prime+m)*255)%256, ((G_prime + m)* 255)%256, ((B_prime+m) * 255)%256];\r\n}\r\n\r\nfunction calculate_hue(delta, Cmax, red, green, blue){\r\n  if(delta === 0) return 0;\r\n  if(Cmax === red) return 60*(((green-blue)/delta)%6);\r\n  if(Cmax === green) return 60*((blue-red)/delta+2);\r\n  if(Cmax === blue) return 60*((red- green)/delta + 4);\r\n}\r\n\r\nfunction check_degrees(hue, C, X){\r\n  if((hue >= 0 && hue < 60) || hue == 360) return [C,X,0];\r\n  if(hue >= 60 && hue < 120 ) return [X,C,0];\r\n  if(hue >= 120 && hue < 180 ) return [0, C, X];\r\n  if(hue >= 180 && hue < 240 ) return [0, X, C];\r\n  if(hue >= 240 && hue < 300 ) return [X, 0, C];\r\n  if(hue >= 300 && hue < 360 ) return [C, 0, X];\r\n  return [0,0,0];\r\n}\r\n\r\nfunction assign_color(degree, max_degree, gradient){\r\n\r\n  var selection = gradient[Math.floor((degree/max_degree) * (gradient.length-1))]\r\n\r\n  return rgb_to_str(selection)\r\n}\r\n\r\nasync function waitOpenNetworkSettings(that){\r\n  await that.app.navbar.current.openSettings();\r\n  that.app.navbar.current.settings.current.generalsettings.current.setOpen(true);\r\n}\r\n\r\nasync function waitOpenAlgorithmSettings(that){\r\n  await that.app.navbar.current.openSettings();\r\n  that.app.navbar.current.settings.current.algorithmsettings.current.setOpen(true);\r\n}\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"./GeneralNetworkSettings.css\";\r\n\r\nconst MAX_EDGES = 600;\r\n\r\nasync function waitSetConnected(that,value){\r\n  if(value === 0) await that.setState({connected:\"False\"});\r\n  if(value === 1) await that.setState({connected:\"True\"});\r\n  if(that.state.dimension === 2) that.network.current.resetNetwork();\r\n  if(that.state.dimension === 3) that.network3d.current.resetNetwork();\r\n}\r\n\r\nasync function waitSetVertices(that, v){\r\n  await that.setState({numV: v});\r\n  if(that.state.dimension === 2) that.network.current.resetNetwork();\r\n  if(that.state.dimension === 3) that.network3d.current.resetNetwork();\r\n}\r\n\r\nasync function waitSetEdges(that,e){\r\n  await that.setState({numE: e});\r\n  if(that.state.dimension === 2) that.network.current.resetNetwork();\r\n  if(that.state.dimension === 3) that.network3d.current.resetNetwork();\r\n}\r\n\r\nasync function waitSetLayout(that,w,h){\r\n  await that.setState({height: h,width: w});\r\n  if(that.state.dimension === 2) that.network.current.resetNetwork();\r\n  if(that.state.dimension === 3) that.network3d.current.resetNetwork();\r\n}\r\n\r\nasync function waitSetDegreeSize(that, v){\r\n  if(v === 0){\r\n    await that.setState({degreesize: false});\r\n    if(that.state.dimension === 2) that.network.current.updateVertexSize();\r\n    if(that.state.dimension === 3) that.network3d.current.updateVertexSize();\r\n  }\r\n  if(v === 1){\r\n    await that.setState({degreesize: true});\r\n    if(that.state.dimension === 2) that.network.current.updateVertexSize();\r\n    if(that.state.dimension === 3) that.network3d.current.updateVertexSize();\r\n  }\r\n}\r\n\r\nasync function waitSetRed(that, v){\r\n  await that.setState({startRed: v});\r\n  if(that.state.dimension === 2) that.network.current.updateColoring();\r\n  if(that.state.dimension === 3) that.network3d.current.updateColoring();\r\n}\r\n\r\nasync function waitSetGreen(that, v){\r\n  await that.setState({startGreen: v});\r\n  if(that.state.dimension === 2) that.network.current.updateColoring();\r\n  if(that.state.dimension === 3) that.network3d.current.updateColoring();\r\n}\r\n\r\nasync function waitSetBlue(that, v){\r\n  await that.setState({startBlue: v});\r\n  if(that.state.dimension === 2) that.network.current.updateColoring();\r\n  if(that.state.dimension === 3) that.network3d.current.updateColoring();\r\n}\r\n\r\nasync function waitSetEndRed(that, v){\r\n  await that.setState({endRed: v});\r\n  if(that.state.dimension === 2) that.network.current.updateColoring();\r\n  if(that.state.dimension === 3) that.network3d.current.updateColoring();\r\n}\r\n\r\nasync function waitSetEndGreen(that, v){\r\n  await that.setState({endGreen: v});\r\n  if(that.state.dimension === 2) that.network.current.updateColoring();\r\n  if(that.state.dimension === 3) that.network3d.current.updateColoring();\r\n}\r\n\r\nasync function waitSetEndBlue(that, v){\r\n  await that.setState({endBlue: v});\r\n  if(that.state.dimension === 2) that.network.current.updateColoring();\r\n  if(that.state.dimension === 3) that.network3d.current.updateColoring();\r\n}\r\n\r\nasync function waitSetMinVertexSize(that, v){\r\n  const value = parseInt(v);\r\n  await that.setState({minsize:value});\r\n  if(that.state.dimension === 2) that.network.current.updateVertexSize();\r\n  if(that.state.dimension === 3) that.network3d.current.updateVertexSize();\r\n}\r\n\r\nasync function waitSetMaxVertexSize(that, v){\r\n  const value = parseInt(v);\r\n  await that.setState({maxsize:value});\r\n  if(that.state.dimension === 2) that.network.current.updateVertexSize();\r\n  if(that.state.dimension === 3) that.network3d.current.updateVertexSize();\r\n}\r\n\r\n\r\nclass GeneralNetworkSettings extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      startColor: convertValuesToRgb(this.props.app.state.startRed, this.props.app.state.startGreen, this.props.app.state.startBlue),\r\n      endColor: convertValuesToRgb(this.props.app.state.endRed, this.props.app.state.endGreen, this.props.app.state.endBlue),\r\n      width: 75,\r\n      height: 75,\r\n    }\r\n    this.app = this.props.app;\r\n    this.network = this.app.network.current === null? this.app.network3d.current: this.app.network.current;\r\n    // console.log(this.state.startColor);\r\n    // console.log(this.state.endColor);\r\n  }\r\n\r\n  setOpen(v){\r\n    this.setState({open:v});\r\n  }\r\n\r\n  setAnimationSpeed(ms){\r\n    const value = Math.abs(150-parseInt(ms));\r\n    this.app.setState({animationSpeed: value});\r\n  }\r\n\r\n  setVertices(v){\r\n    const value = parseInt(v);\r\n    waitSetVertices(this.app, value)\r\n  }\r\n\r\n  setEdges(v){\r\n    const value = parseInt(v);\r\n    waitSetEdges(this.app, value)\r\n  }\r\n\r\n  setConnected(v){\r\n    const value = parseInt(v);\r\n    waitSetConnected(this.app, value);\r\n  }\r\n\r\n  setDisconnectedSubgraphs(){\r\n\r\n  }\r\n\r\n  setScaleDegreeSize(v){\r\n    const value = parseInt(v);\r\n    waitSetDegreeSize(this.app, value)\r\n  }\r\n\r\n  setRed(v){\r\n    const value = parseInt(v);\r\n    waitSetRed(this.app, value);\r\n    this.setState({startColor: convertValuesToRgb(value, this.app.state.startGreen, this.app.state.startBlue)});\r\n  }\r\n\r\n  setGreen(v){\r\n    const value = parseInt(v);\r\n    waitSetGreen(this.app, value);\r\n    this.setState({startColor: convertValuesToRgb(this.app.state.startRed, value, this.app.state.startBlue)});\r\n  }\r\n\r\n  setBlue(v){\r\n    const value = parseInt(v);\r\n    waitSetBlue(this.app, value);\r\n    this.setState({startColor: convertValuesToRgb(this.app.state.startRed, this.app.state.startGreen, value)});\r\n  }\r\n\r\n  setEndRed(v){\r\n    const value = parseInt(v);\r\n    waitSetEndRed(this.app, value)\r\n    this.setState({endColor: convertValuesToRgb(value, this.app.state.endGreen, this.app.state.endBlue)});\r\n  }\r\n\r\n  setEndGreen(v){\r\n    const value = parseInt(v);\r\n    waitSetEndGreen(this.app, value);\r\n    this.setState({endColor: convertValuesToRgb(this.app.state.endRed, value , this.app.state.endBlue)});\r\n  }\r\n\r\n  setEndBlue(v){\r\n    const value = parseInt(v);\r\n    waitSetEndBlue(this.app, value);\r\n    this.setState({endColor: convertValuesToRgb(this.app.state.endRed, this.app.state.endGreen, value)});\r\n  }\r\n\r\n  setMinVertexSize(v){\r\n    const that = this.app;\r\n    waitSetMinVertexSize(that,v);\r\n  }\r\n\r\n  setMaxVertexSize(v){\r\n    const that = this.app;\r\n    waitSetMaxVertexSize(that, v);\r\n  }\r\n\r\n  render(){\r\n    return<div>\r\n          <Modal isOpen = {this.state.open}\r\n            onRequestClose = {() => this.setOpen(false)}\r\n            className = \"generalsettings\"\r\n            overlayClassName = \"generalsettingsoverlay\"\r\n            >\r\n            <div className = \"modalContents\">\r\n            <p className = \"sliderHeader\" style = {{color: \"black\"}}>\r\n              <b style = {{color: \"white\"}} >General Network Settings</b>\r\n            </p>\r\n            <div className = \"sliders\">\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"130\"\r\n                value = {Math.abs(150-this.app.state.animationSpeed)}\r\n                className = \"slider\"\r\n                onChange = {(event)=> this.setAnimationSpeed(event.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                AnimationSpeed : {this.app.state.animationSpeed}ms\r\n              </label>\r\n              <input\r\n                type = \"range\"\r\n                min = \"4\"\r\n                max = \"200\"\r\n                value = {this.app.state.numV}\r\n                step = \"1\"\r\n                className = \"slider\"\r\n                name = \"weight\"\r\n                disabled = {this.app.state.running}\r\n                onChange = {(event) => this.setVertices(event.target.value)}>\r\n              </input>\r\n              <label>\r\n                Vertices: {this.app.state.numV}\r\n              </label>\r\n              <input\r\n                type = \"range\"\r\n                min =  {this.app.state.connected === \"True\"? this.app.state.numV-1: Math.min(20, this.app.state.numV-1)}\r\n                max = {Math.min(Math.floor((this.app.state.numV*this.app.state.numV - this.app.state.numV)/2), MAX_EDGES)}\r\n                value = {this.app.state.numE}\r\n                step = \"1\"\r\n                className = \"slider\"\r\n                name = \"weight\"\r\n                disabled = {this.app.state.running || (this.network === null || this.network.state.randomType === \"cycle\")}\r\n                onChange = {(event) => this.setEdges(event.target.value)}>\r\n              </input>\r\n              <label>\r\n                Edges: {this.app.state.numE}\r\n              </label>\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"1\"\r\n                value = {this.app.state.connected === \"True\"? \"1\":\"0\"}\r\n                step = \"1\"\r\n                className = \"slider\"\r\n                onChange = {(event) => this.setConnected(event.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Force Connectedness: {this.app.state.connected}\r\n              </label>\r\n              </div>\r\n\r\n\r\n              <p className = \"sliderHeader\" style = {{color: \"black\"}}>\r\n                <b style = {{color: \"white\"}} > Size Settings</b>\r\n              </p>\r\n\r\n\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"1\"\r\n                step = \"1\"\r\n                value = {this.app.state.degreesize === true?1:0}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setScaleDegreeSize(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Scale Vertex Size to Degree : {this.app.state.degreesize === true?\"On\":\"Off\"}\r\n              </label>\r\n\r\n              <input\r\n                type = \"range\"\r\n                min = \"1\"\r\n                max = {this.app.state.maxsize}\r\n                step = \"1\"\r\n                value = {this.app.state.minsize}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setMinVertexSize(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Minimum Vertex Size: {this.app.state.minsize}\r\n              </label>\r\n\r\n              <input\r\n                type = \"range\"\r\n                min = {this.app.state.minsize}\r\n                max = \"12\"\r\n                step = \"1\"\r\n                value = {this.app.state.maxsize}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setMaxVertexSize(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Maximum Vertex Size: {this.app.state.maxsize}\r\n              </label>\r\n\r\n              <p className = \"sliderHeader\" style = {{color: \"black\"}}>\r\n                <b style = {{color: \"white\"}} > Start Color (Lowest degree vertices)</b>\r\n              </p>\r\n\r\n              <canvas\r\n              height = {this.state.height}\r\n              width = {this.state.width}\r\n              style = {{backgroundColor: this.state.startColor}}\r\n              className = \"colorCanvas\"></canvas>\r\n\r\n              <br></br>\r\n\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"255\"\r\n                step = \"1\"\r\n                value = {this.app.state.startRed}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setRed(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Red : {this.app.state.startRed}\r\n              </label>\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"255\"\r\n                step = \"1\"\r\n                value = {this.app.state.startGreen}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setGreen(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Green : {this.app.state.startGreen}\r\n              </label>\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"255\"\r\n                step = \"1\"\r\n                value = {this.app.state.startBlue}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setBlue(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Blue: {this.app.state.startBlue}\r\n              </label>\r\n              <p className = \"sliderHeader\" style = {{color: \"black\"}}>\r\n                <b style = {{color: \"white\"}} > End Color (Highest degree vertices)</b>\r\n              </p>\r\n\r\n              <canvas\r\n              height = {this.state.height}\r\n              width = {this.state.width}\r\n              style = {{backgroundColor: this.state.endColor}}\r\n              className = \"colorCanvas\"></canvas>\r\n\r\n              <br></br>\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"255\"\r\n                step = \"1\"\r\n                value = {this.app.state.endRed}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setEndRed(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Red : {this.app.state.endRed}\r\n              </label>\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"255\"\r\n                step = \"1\"\r\n                value = {this.app.state.endGreen}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setEndGreen(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Green : {this.app.state.endGreen}\r\n              </label>\r\n              <input\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"255\"\r\n                step = \"1\"\r\n                value = {this.app.state.endBlue}\r\n                className = \"slider\"\r\n                onChange = {(e) => this.setEndBlue(e.target.value)}\r\n                disabled = {this.app.state.running}>\r\n              </input>\r\n              <label>\r\n                Blue: {this.app.state.endBlue}\r\n              </label>\r\n              </div>\r\n      </Modal>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default GeneralNetworkSettings;\r\n\r\nfunction convertValuesToRgb(red, green, blue){\r\n  return \"rgb(\"+red.toString()+\",\"+green.toString()+\",\"+blue.toString()+\")\"\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nimport \"./AlgorithmAttributes.css\";\r\n\r\nclass AlgorithmAttributes extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      layout : \"spring\",\r\n      height: 75,\r\n      width: 75,\r\n      parentHelp: null,\r\n      delta: this.props.app.state.settings.spring.delta, //spring\r\n      eps : this.props.app.state.settings.spring.eps, //spring\r\n      crep: this.props.app.state.settings.spring.kr, //spring\r\n      cspring: this.props.app.state.settings.spring.ka, //spring\r\n      C: 2, // spring\r\n      maxX: 0,\r\n      maxY: 0,\r\n      cTemp: this.props.app.state.settings.fruchterman.cTemp, //fruchtermanReingold\r\n      tempHeuristic: this.props.app.state.settings.fruchterman.tempHeuristic,//this.props.app.settings.fruchterman.tempHeuristic, //fruchtermanReingold\r\n      cPercentage: this.props.app.state.settings.spring.areascaling, // spring\r\n      collision: 2, //fruchterman\r\n      distanceType: this.props.app.state.settings.spring.distanceType, // spring\r\n      kr: this.props.app.state.settings.forceatlas2.fr, // forceAtlas2\r\n      gravity: this.props.app.state.settings.forceatlas2.gravity, //forceAtlas2\r\n      gravityType : \"Normal\",//forceAtlas2\r\n      kg: this.props.app.state.settings.forceatlas2.kg, //forceAtlas2\r\n      tau: this.props.app.state.settings.forceatlas2.tau,//forceAtlas2\r\n      ksmax: this.props.app.state.settings.forceatlas2.ksmax, //forceAtlas2\r\n      overlappingNodes: true, //forceAtlas2\r\n      kruskalred: this.props.app.state.settings.kruskal.red,\r\n      kruskalgreen: this.props.app.state.settings.kruskal.green,\r\n      kruskalblue: this.props.app.state.settings.kruskal.blue,\r\n      primred: this.props.app.state.settings.prim.red,\r\n      primgreen: this.props.app.state.settings.prim.green,\r\n      primblue: this.props.app.state.settings.prim.blue,\r\n      opt2timeout: this.props.app.state.settings.opt2.timeout,\r\n      opt2red: this.props.app.state.settings.opt2.red,\r\n      opt2green: this.props.app.state.settings.opt2.green,\r\n      opt2blue: this.props.app.state.settings.opt2.blue,\r\n      opt2annealingtimeout: this.props.app.state.settings.opt2annealing.timeout,\r\n      opt2annealingtemperature: this.props.app.state.settings.opt2annealing.temperature,\r\n      opt2annealingacceptance: this.props.app.state.settings.opt2annealing.acceptance,\r\n      opt2annealingred: this.props.app.state.settings.opt2annealing.startColor[0],\r\n      opt2annealinggreen: this.props.app.state.settings.opt2annealing.startColor[1],\r\n      opt2annealingblue: this.props.app.state.settings.opt2annealing.startColor[2],\r\n      opt2annealingredEnd: this.props.app.state.settings.opt2annealing.endColor[0],\r\n      opt2annealinggreenEnd: this.props.app.state.settings.opt2annealing.endColor[1],\r\n      opt2annealingblueEnd: this.props.app.state.settings.opt2annealing.endColor[2],\r\n      opt3timeout: this.props.app.state.settings.opt3.timeout,\r\n      opt3red: this.props.app.state.settings.opt3.red,\r\n      opt3green: this.props.app.state.settings.opt3.green,\r\n      opt3blue: this.props.app.state.settings.opt3.blue,\r\n      greedyStartRed: this.props.app.state.settings.greedy.startRed,\r\n      greedyStartGreen: this.props.app.state.settings.greedy.startGreen,\r\n      greedyStartBlue: this.props.app.state.settings.greedy.startBlue,\r\n      greedyEndRed: this.props.app.state.settings.greedy.endRed,\r\n      greedyEndGreen: this.props.app.state.settings.greedy.endGreen,\r\n      greedyEndBlue: this.props.app.state.settings.greedy.endBlue,\r\n      filtering: this.props.filtering,\r\n      filter: this.props.filter,\r\n    }\r\n    this.help = React.createRef();\r\n    this.app= this.props.app;\r\n    this.settings = this.props.settings;\r\n  }\r\n\r\n\r\n  setCREP(v){\r\n    waitsetCREP(v, this);\r\n  }\r\n\r\n  setCSPRING(v){\r\n    waitsetCSPRING(v, this);\r\n  }\r\n\r\n  setDelta(v){\r\n    waitsetDelta(v, this);\r\n  }\r\n\r\n  setEpsilon(v){\r\n    waitsetEpsilon(v, this);\r\n  }\r\n\r\n  setC(v){\r\n    waitsetC(v, this);\r\n  }\r\n\r\n  setCTEMP(v){\r\n    waitsetCTEMP(v, this);\r\n  }\r\n\r\n  setKr(v){\r\n    waitsetKr(v,this);\r\n  }\r\n\r\n  setGravity(v){\r\n    waitsetGravity(v, this);\r\n  }\r\n\r\n  setGravityType(v){\r\n    waitsetGravityType(v, this);\r\n  }\r\n\r\n  setGravityStrength(v){\r\n    waitsetGravityStrength(v, this);\r\n  }\r\n\r\n  setTau(v){\r\n    waitsetTau(v, this);\r\n  }\r\n\r\n  setKsmax(v){\r\n    waitsetKsmax(v, this);\r\n  }\r\n\r\n  setOverlappingNodes(v){\r\n    waitsetOverlappingNodes(v, this);\r\n  }\r\n  setTempHeuristic(v){\r\n    waitsetTempHeuristic(v, this);\r\n  }\r\n\r\n  setCollision(v){\r\n    waitsetCollision(v, this);\r\n  }\r\n\r\n  setDistanceType(v){\r\n    waitsetDistanceType(v, this);\r\n  }\r\n\r\n  setKruskalRed(v){\r\n    waitSetKruskalRed(v, this);\r\n  }\r\n\r\n  setKruskalGreen(v){\r\n    waitSetKruskalGreen(v, this);\r\n  }\r\n\r\n  setKruskalBlue(v){\r\n    waitSetKruskalBlue(v, this);\r\n  }\r\n\r\n  setPrimRed(v){\r\n    waitSetPrimRed(v, this);\r\n  }\r\n\r\n  setPrimGreen(v){\r\n    waitSetPrimGreen(v, this);\r\n  }\r\n\r\n  setPrimBlue(v){\r\n    waitSetPrimBlue(v, this);\r\n  }\r\n\r\n  setOpt2Timeout(v){\r\n    waitSetOpt2Timeout(v, this);\r\n  }\r\n\r\n  setOpt2Red(v){\r\n    waitSetOpt2Red(v, this);\r\n  }\r\n\r\n  setOpt2Green(v){\r\n    waitSetOpt2Green(v, this);\r\n  }\r\n\r\n  setOpt2Blue(v){\r\n    waitSetOpt2Blue(v, this);\r\n  }\r\n\r\n  setOpt3Timeout(v){\r\n    waitSetOpt3Timeout(v, this);\r\n  }\r\n\r\n  setOpt3Red(v){\r\n    waitSetOpt3Red(v, this);\r\n  }\r\n\r\n  setOpt3Green(v){\r\n    waitSetOpt3Green(v, this);\r\n  }\r\n\r\n  setOpt3Blue(v){\r\n    waitSetOpt3Blue(v, this);\r\n  }\r\n\r\n  setGreedyStartRed(v){\r\n    waitSetGreedyStartRed(v, this);\r\n  }\r\n\r\n  setGreedyStartGreen(v){\r\n    waitSetGreedyStartGreen(v, this);\r\n  }\r\n\r\n  setGreedyStartBlue(v){\r\n    waitSetGreedyStartBlue(v, this);\r\n  }\r\n\r\n  setGreedyEndRed(v){\r\n    waitSetGreedyEndRed(v, this);\r\n  }\r\n\r\n  setGreedyEndGreen(v){\r\n    waitSetGreedyEndGreen(v, this);\r\n  }\r\n\r\n  setGreedyEndBlue(v){\r\n    waitSetGreedyEndBlue(v, this);\r\n  }\r\n\r\n\r\n\r\n  filter(e){\r\n    if(e === \"\") {\r\n      this.setState({filtering: false, filter: e});\r\n      this.app.setState({filtering: false, filter: e});\r\n    }\r\n    else{\r\n      this.app.setState({filtering: true, filter: e});\r\n      this.setState({filtering: true, filter: e});\r\n    }\r\n  }\r\n  render(){\r\n      return <div className = \"Attributes\">\r\n\r\n      <div className = \"searchbar\">\r\n        <label className = \"attributesearch\"> Search for Algorithm: </label>\r\n        <input value = {this.state.filter} onChange = {(e) => this.filter(e.target.value)}/>\r\n      </div>\r\n      {(this.state.filtering === true && \"spring embedding\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n      ?<div><p> Spring Embedding</p><div className = \"sliders\">\r\n                <input className = \"slider\"\r\n                type = \"range\"\r\n                min = \"0.1\"\r\n                max = \"2\"\r\n                step = \"0.1\"\r\n                value = {this.state.cspring}\r\n                onChange = {(event)=> this.setCSPRING(event.target.value)}\r\n                disabled = {this.state.running}>\r\n                </input>\r\n                <label> Force of Attraction: {this.state.cspring}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                <input className = \"slider\"\r\n                type = \"range\"\r\n                min = \"0.1\"\r\n                max = \"2\"\r\n                step = \"0.1\"\r\n                value ={this.state.crep}\r\n                onChange = {(event)=> this.setCREP(event.target.value)}\r\n                disabled = {this.state.running}>\r\n                </input>\r\n                <label> Force of Repulsion : {this.state.crep}</label>\r\n              </div>\r\n                <div className = \"sliders\">\r\n                <input className = \"slider\"\r\n                type = \"range\"\r\n                min = \"0.001\"\r\n                max = \"3\"\r\n                value = {this.state.eps}\r\n                step = \"0.001\"\r\n                onChange = {(event)=> this.setEpsilon(event.target.value)}\r\n                disabled = {this.state.running}>\r\n                </input>\r\n                <label> Convergence Bound : {this.state.eps}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                <input className = \"slider\"\r\n                type = \"range\"\r\n                min = \"0.1\"\r\n                max = \"2\"\r\n                step = \"0.1\"\r\n                value = {this.state.delta}\r\n                onChange = {(event)=> this.setDelta(event.target.value)}\r\n                disabled = {this.state.running}>\r\n                </input>\r\n                <label> Rate of Convergence: {this.state.delta}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                <input className = \"slider\"\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"100\"\r\n                value = {this.state.cPercentage}\r\n                step = \"0.1\"\r\n                onChange = {(event)=> this.setC(event.target.value)}\r\n                disabled = {this.state.running}>\r\n                </input>\r\n                <label> Force to Area scaling: {this.state.cPercentage}%</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                <input className = \"slider\"\r\n                type = \"range\"\r\n                min = \"0\"\r\n                max = \"1\"\r\n                value = {this.state.distanceType}\r\n                step = \"1\"\r\n                onChange = {(event)=> this.setDistanceType(event.target.value)}\r\n                disabled = {this.state.running}>\r\n                </input>\r\n                <label> Distance: {this.state.distanceType === 1? \"Continuous\": \"Graph Theoretic\"}</label>\r\n                </div>\r\n                </div>\r\n                : <></>}\r\n              {(this.state.filtering === true && \"fruchterman-reingold\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n              ?<div><p>Fruchterman-Reingold</p>\r\n              <div className = \"Attributes\">\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0.1\"\r\n                  max = \"3\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.cTemp}\r\n                  onChange = {(event)=> this.setCTEMP(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Initial Temperature Scaling: {this.state.cTemp}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"1\"\r\n                  max = \"3\"\r\n                  value = {this.state.tempHeuristic === \"Logarithmic\"?1:this.state.tempHeuristic === \"Linear\"?2:3}\r\n                  step = \"1\"\r\n                  onChange = {(event)=> this.setTempHeuristic(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Temperature Cooling: {this.state.tempHeuristic}</label>\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0.001\"\r\n                  max = \"1\"\r\n                  value = {this.state.eps}\r\n                  step = \"0.001\"\r\n                  onChange = {(event)=> this.setEpsilon(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Convergence Bound : {this.state.eps}</label>\r\n                </div>\r\n              </div>\r\n              </div>\r\n              : <></>}\r\n            {(this.state.filtering === true && \"forceatlas2\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n            ?<div><p> ForceAtlas2 </p>\r\n            <div className = \"Attributes\">\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0.1\"\r\n                  max = \"100\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.kr}\r\n                  onChange = {(event) => this.setKr(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Force of Repulsion: {this.state.kr}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0\"\r\n                  max = \"1\"\r\n                  step = \"1\"\r\n                  value = {this.state.gravity === true? 1:0}\r\n                  onChange = {(event) => this.setGravity(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Gravity: {this.state.gravity === true? \"On\": \"Off\"}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0\"\r\n                  max = \"20\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.kg}\r\n                  onChange = {(event) => this.setGravityStrength(event.target.value)}\r\n                  disabled = {this.state.running || !(this.state.gravity)}>\r\n                  </input>\r\n                  <label> Gravity Strength: {this.state.kg}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0.1\"\r\n                  max = \"2\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.tau}\r\n                  onChange = {(event) => this.setTau(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Tolerance(speed): {this.state.tau}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"1\"\r\n                  max = \"20\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.ksmax}\r\n                  onChange = {(event) => this.setKsmax(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Temperature Cap: {this.state.ksmax}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0\"\r\n                  max = \"1\"\r\n                  step = \"1\"\r\n                  value = {this.state.overlappingNodes === true? \"0\":\"1\"}\r\n                  onChange = {(event) => this.setOverlappingNodes(event.target.value)}\r\n                  disabled = {true}>\r\n                  </input>\r\n                  <label> Overlap Nodes: {this.state.overlappingNodes === true? \"On\": \"Off\"}</label>\r\n                </div>\r\n             </div>\r\n             </div>\r\n             : <> </>}\r\n             {(this.state.filtering === true && \"forceatlaslinlog\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n            ?<div><p>ForceAtlasLinLog</p>\r\n            <div className = \"Attributes\">\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0.1\"\r\n                  max = \"100\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.kr}\r\n                  onChange = {(event) => this.setKr(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Force of Repulsion: {this.state.kr}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0\"\r\n                  max = \"1\"\r\n                  step = \"1\"\r\n                  value = {this.state.gravity === true? 1:0}\r\n                  onChange = {(event) => this.setGravity(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Gravity: {this.state.gravity === true? \"On\": \"Off\"}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0\"\r\n                  max = \"20\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.kg}\r\n                  onChange = {(event) => this.setGravityStrength(event.target.value)}\r\n                  disabled = {this.state.running || !(this.state.gravity)}>\r\n                  </input>\r\n                  <label> Gravity Strength: {this.state.kg}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0.1\"\r\n                  max = \"2\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.tau}\r\n                  onChange = {(event) => this.setTau(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Tolerance(speed): {this.state.tau}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"1\"\r\n                  max = \"20\"\r\n                  step = \"0.1\"\r\n                  value = {this.state.ksmax}\r\n                  onChange = {(event) => this.setKsmax(event.target.value)}\r\n                  disabled = {this.state.running}>\r\n                  </input>\r\n                  <label> Temperature Cap: {this.state.ksmax}</label>\r\n                </div>\r\n                <div className = \"sliders\">\r\n                  <input className = \"slider\"\r\n                  type = \"range\"\r\n                  min = \"0\"\r\n                  max = \"1\"\r\n                  step = \"1\"\r\n                  value = {this.state.overlappingNodes === true? \"0\":\"1\"}\r\n                  onChange = {(event) => this.setOverlappingNodes(event.target.value)}\r\n                  disabled = {true}>\r\n                  </input>\r\n                  <label> Overlap Nodes: {this.state.overlappingNodes === true? \"On\": \"Off\"}</label>\r\n                </div>\r\n                </div>\r\n\r\n             </div>\r\n             : <></>}\r\n             {(this.state.filtering === true && \"kruskal's algorithm\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n            ?<div> <p> Kruskal's Algorithm </p>\r\n            <canvas\r\n            height = {this.state.height}\r\n            width = {this.state.width}\r\n            style = {{backgroundColor: rgb_to_str([this.state.kruskalred, this.state.kruskalgreen,\r\n                      this.state.kruskalblue])}}\r\n            className = \"colorCanvas\"></canvas>\r\n            <div className = \"sliders\">\r\n              <input className = \"slider\"\r\n              type = \"range\"\r\n              min = \"0\"\r\n              max = \"255\"\r\n              value = {this.app.state.settings.kruskal.red}\r\n              onChange = {(e) => this.setKruskalRed(e.target.value)}\r\n              step = \"1\"\r\n              disabled = {this.state.running}>\r\n              </input>\r\n              <label> Red: {this.app.state.settings.kruskal.red}</label>\r\n            </div>\r\n            <div className = \"sliders\">\r\n              <input className = \"slider\"\r\n              type = \"range\"\r\n              min = \"0\"\r\n              max = \"255\"\r\n              value = {this.app.state.settings.kruskal.green}\r\n              onChange = {(e) => this.setKruskalGreen(e.target.value)}\r\n              step = \"1\"\r\n              disabled = {this.state.running}>\r\n              </input>\r\n              <label> Green: {this.app.state.settings.kruskal.green} </label>\r\n            </div>\r\n            <div className = \"sliders\">\r\n              <input className = \"slider\"\r\n              type = \"range\"\r\n              min = \"0\"\r\n              max = \"255\"\r\n              value = {this.app.state.settings.kruskal.blue}\r\n              onChange = {(e) => this.setKruskalBlue(e.target.value)}\r\n              step = \"1\"\r\n              disabled = {this.state.running}>\r\n              </input>\r\n              <label> Blue: {this.app.state.settings.kruskal.blue} </label>\r\n            </div>\r\n            </div>\r\n            : <></>}\r\n\r\n            {(this.state.filtering === true && \"prim's algorithm\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n           ?<div> <p> Prim's Algorithm </p>\r\n           <canvas\r\n           height = {this.state.height}\r\n           width = {this.state.width}\r\n           style = {{backgroundColor: rgb_to_str([this.state.primred, this.state.primgreen,\r\n                     this.state.primblue])}}\r\n           className = \"colorCanvas\"></canvas>\r\n           <div className = \"sliders\">\r\n             <input className = \"slider\"\r\n             type = \"range\"\r\n             min = \"0\"\r\n             max = \"255\"\r\n             value = {this.app.state.settings.prim.red}\r\n             onChange = {(e) => this.setPrimRed(e.target.value)}\r\n             step = \"1\"\r\n             disabled = {this.state.running}>\r\n             </input>\r\n             <label> Red: {this.app.state.settings.prim.red} </label>\r\n           </div>\r\n           <div className = \"sliders\">\r\n             <input className = \"slider\"\r\n             type = \"range\"\r\n             min = \"0\"\r\n             max = \"255\"\r\n             onChange = {(e) => this.setPrimGreen(e.target.value)}\r\n             value = {this.app.state.settings.prim.green}\r\n             step = \"1\"\r\n             disabled = {this.state.running}>\r\n             </input>\r\n             <label> Green: {this.app.state.settings.prim.green} </label>\r\n           </div>\r\n           <div className = \"sliders\">\r\n             <input className = \"slider\"\r\n             type = \"range\"\r\n             min = \"0\"\r\n             max = \"255\"\r\n             onChange = {(e) => this.setPrimBlue(e.target.value)}\r\n             value = {this.app.state.settings.prim.blue}\r\n             step = \"1\"\r\n             disabled = {this.state.running}>\r\n             </input>\r\n             <label> Blue: {this.app.state.settings.prim.blue} </label>\r\n           </div>\r\n           </div>\r\n           : <></>}\r\n\r\n           {(this.state.filtering === true && \"2-opt\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n          ?<div>  <p> 2-Opt </p>\r\n          <canvas\r\n          height = {this.state.height}\r\n          width = {this.state.width}\r\n          style = {{backgroundColor: rgb_to_str([this.state.opt2red, this.state.opt2green,\r\n                    this.state.opt2blue])}}\r\n          className = \"colorCanvas\"></canvas>\r\n          <div className = \"sliders\">\r\n            <input className = \"slider\"\r\n            type = \"range\"\r\n            min = \"5\"\r\n            max = \"60\"\r\n            value = {this.app.state.settings.opt2.timeout}\r\n            onChange = {(e) => this.setOpt2Timeout(e.target.value) }\r\n            step = \"1\"\r\n            disabled = {this.state.running}>\r\n            </input>\r\n            <label> Timeout : {this.app.state.settings.opt2.timeout}</label>\r\n          </div>\r\n          <div className = \"sliders\">\r\n            <input className = \"slider\"\r\n            type = \"range\"\r\n            min = \"0\"\r\n            max = \"255\"\r\n            value = {this.app.state.settings.opt2.red}\r\n            onChange = {(e) => this.setOpt2Red(e.target.value) }\r\n            step = \"1\"\r\n            disabled = {this.state.running}>\r\n            </input>\r\n            <label> Red: {this.app.state.settings.opt2.red} </label>\r\n          </div>\r\n          <div className = \"sliders\">\r\n            <input className = \"slider\"\r\n            type = \"range\"\r\n            min = \"0\"\r\n            max = \"255\"\r\n            value = {this.app.state.settings.opt2.green}\r\n            onChange = {(e) => this.setOpt2Green(e.target.value) }\r\n            step = \"1\"\r\n            disabled = {this.state.running}>\r\n            </input>\r\n            <label> Green: {this.app.state.settings.opt2.green}</label>\r\n          </div>\r\n          <div className = \"sliders\">\r\n            <input className = \"slider\"\r\n            type = \"range\"\r\n            min = \"0\"\r\n            max = \"255\"\r\n            value = {this.app.state.settings.opt2.blue}\r\n            onChange = {(e) => this.setOpt2Blue(e.target.value) }\r\n            step = \"1\"\r\n            disabled = {this.state.running}>\r\n            </input>\r\n            <label> Blue: {this.app.state.settings.opt2.blue} </label>\r\n          </div>\r\n          </div>\r\n          : <></>}\r\n\r\n          {(this.state.filtering === true && \"3-opt\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n         ?<div> <p> 3-Opt </p>\r\n         <canvas\r\n         height = {this.state.height}\r\n         width = {this.state.width}\r\n         style = {{backgroundColor: rgb_to_str([this.state.opt3red, this.state.opt3green,\r\n                   this.state.opt3blue])}}\r\n         className = \"colorCanvas\"></canvas>\r\n         <div className = \"sliders\">\r\n           <input className = \"slider\"\r\n           type = \"range\"\r\n           min = \"5\"\r\n           max = \"60\"\r\n           value = {this.app.state.settings.opt3.timeout}\r\n           onChange = {(e) => this.setOpt3Timeout(e.target.value)}\r\n           step = \"1\"\r\n           disabled = {this.state.running}>\r\n           </input>\r\n           <label> Timeout : {this.app.state.settings.opt3.timeout}</label>\r\n         </div>\r\n         <div className = \"sliders\">\r\n           <input className = \"slider\"\r\n           type = \"range\"\r\n           min = \"0\"\r\n           max = \"255\"\r\n           value = {this.app.state.settings.opt3.red}\r\n           onChange = {(e) => this.setOpt3Red(e.target.value)}\r\n           step = \"1\"\r\n           disabled = {this.state.running}>\r\n           </input>\r\n           <label> Red: {this.app.state.settings.opt3.red} </label>\r\n         </div>\r\n         <div className = \"sliders\">\r\n           <input className = \"slider\"\r\n           type = \"range\"\r\n           min = \"0\"\r\n           max = \"255\"\r\n           value = {this.app.state.settings.opt3.green}\r\n           onChange = {(e) => this.setOpt3Green(e.target.value)}\r\n           step = \"1\"\r\n           disabled = {this.state.running}>\r\n           </input>\r\n           <label> Green: {this.app.state.settings.opt3.green} </label>\r\n         </div>\r\n         <div className = \"sliders\">\r\n           <input className = \"slider\"\r\n           type = \"range\"\r\n           min = \"0\"\r\n           max = \"255\"\r\n           value = {this.app.state.settings.opt3.blue}\r\n           onChange = {(e) => this.setOpt3Blue(e.target.value)}\r\n           step = \"1\"\r\n           disabled = {this.state.running}>\r\n           </input>\r\n           <label> Blue: {this.app.state.settings.opt3.blue} </label>\r\n         </div>\r\n         </div>\r\n         : <></>}\r\n         {/*\r\n         {(this.state.filtering === true && \"2-opt simulated annealing\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n        ?<div> <p> 2-Opt Simulated Annealing </p>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"5\"\r\n          max = \"60\"\r\n          step = \"1\"\r\n          value = {this.state.opt2annealingtimeout}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Timeout :  {this.state.opt2annealingtimeout} </label>\r\n        </div>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"1\"\r\n          max = \"100\"\r\n          step = \"1\"\r\n          value = {this.state.opt2annealingtemperature}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Initial Temperature:{this.state.opt2annealingtemperature} </label>\r\n        </div>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"0.0001\"\r\n          max = \"0.1\"\r\n          step = \"0.0001\"\r\n          value = {this.state.opt2annealingacceptance}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Acceptance: {this.state.opt2annealingacceptance}</label>\r\n        </div>\r\n        <canvas\r\n        height = {this.state.height}\r\n        width = {this.state.width}\r\n        style = {{backgroundColor: rgb_to_str([this.state.opt2annealingred, this.stateopt2annealinggreen,\r\n                  this.state.opt2annealingblue])}}\r\n        className = \"colorCanvas\"></canvas>\r\n        <p style={{fontSize: 12}}> High Temperature Color </p>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"0\"\r\n          max = \"255\"\r\n          step = \"1\"\r\n          value =  {this.state.opt2annealingred}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Red: {this.state.opt2annealingred}</label>\r\n        </div>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"0\"\r\n          max = \"255\"\r\n          step = \"1\"\r\n          value =  {this.state.opt2annealinggreen}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Green: {this.state.opt2annealinggreen}</label>\r\n        </div>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"0\"\r\n          max = \"255\"\r\n          step = \"1\"\r\n          value =  {this.app.state.settings.opt2annealingblue}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Blue: {this.app.state.settings.opt2annealingblue}</label>\r\n        </div>\r\n        <canvas\r\n        height = {this.state.height}\r\n        width = {this.state.width}\r\n        style = {{backgroundColor: rgb_to_str([this.stateopt2annealingredEnd, this.state.opt2annealinggreenEnd,\r\n                  this.state.opt2annealingblueEnd])}}\r\n        className = \"colorCanvas\"></canvas>\r\n        <p style={{fontSize: 12}}> Low Temperature Color</p>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"0\"\r\n          max = \"255\"\r\n          step = \"1\"\r\n          value =  {this.stateopt2annealingredEnd}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Red: {this.state.opt2annealingredEnd}</label>\r\n        </div>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"0\"\r\n          max = \"255\"\r\n          step = \"1\"\r\n          value =  {this.state.opt2annealinggreenEnd}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Green: {this.state.opt2annealinggreenEnd}</label>\r\n        </div>\r\n        <div className = \"sliders\">\r\n          <input className = \"slider\"\r\n          type = \"range\"\r\n          min = \"0\"\r\n          max = \"255\"\r\n          step = \"1\"\r\n          value = {this.state.opt2annealingblueEnd}\r\n          disabled = {this.state.running}>\r\n          </input>\r\n          <label> Blue: {this.state.opt2annealingblueEnd}</label>\r\n        </div>\r\n        </div>\r\n        : <></>} */}\r\n\r\n\r\n\r\n        {(this.state.filtering === true && \"greedy coloring\".indexOf(this.state.filter.toLowerCase()) !== -1 ) || (this.state.filtering === false)\r\n       ?<div> <p> Greedy Coloring </p>\r\n       <canvas\r\n       height = {this.state.height}\r\n       width = {this.state.width}\r\n       style = {{backgroundColor: rgb_to_str([this.state.greedyStartRed, this.state.greedyStartGreen,\r\n                 this.state.greedyStartBlue])}}\r\n       className = \"colorCanvas\"></canvas>\r\n       <div className = \"sliders\">\r\n         <input className = \"slider\"\r\n         type = \"range\"\r\n         min = \"0\"\r\n         max = \"255\"\r\n         value = {this.app.state.settings.greedy.startRed}\r\n         onChange = {(e) => this.setGreedyStartRed(e.target.value)}\r\n         step = \"1\"\r\n         disabled = {this.state.running}>\r\n         </input>\r\n         <label> Start Red: {this.app.state.settings.greedy.startRed}</label>\r\n       </div>\r\n       <div className = \"sliders\">\r\n         <input className = \"slider\"\r\n         type = \"range\"\r\n         min = \"0\"\r\n         max = \"255\"\r\n         value = {this.app.state.settings.greedy.startGreen}\r\n         onChange = {(e) => this.setGreedyStartGreen(e.target.value)}\r\n         step = \"1\"\r\n         disabled = {this.state.running}>\r\n         </input>\r\n         <label> Start Green: {this.app.state.settings.greedy.startGreen}</label>\r\n       </div>\r\n       <div className = \"sliders\">\r\n         <input className = \"slider\"\r\n         type = \"range\"\r\n         min = \"0\"\r\n         max = \"255\"\r\n         value = {this.app.state.settings.greedy.startBlue}\r\n         onChange = {(e) => this.setGreedyStartBlue(e.target.value)}\r\n         step = \"1\"\r\n         disabled = {this.state.running}>\r\n         </input>\r\n         <label> Start Blue: {this.app.state.settings.greedy.startBlue} </label>\r\n       </div>\r\n       <canvas\r\n       height = {this.state.height}\r\n       width = {this.state.width}\r\n       style = {{backgroundColor: rgb_to_str([this.state.greedyEndRed, this.state.greedyEndGreen,\r\n                 this.state.greedyEndBlue])}}\r\n       className = \"colorCanvas\"></canvas>\r\n       <div className = \"sliders\">\r\n         <input className = \"slider\"\r\n         type = \"range\"\r\n         min = \"0\"\r\n         max = \"255\"\r\n         value = {this.app.state.settings.greedy.endRed}\r\n         onChange = {(e) => this.setGreedyEndRed(e.target.value)}\r\n         step = \"1\"\r\n         disabled = {this.state.running}>\r\n         </input>\r\n         <label> End Red: {this.app.state.settings.greedy.endRed} </label>\r\n       </div>\r\n       <div className = \"sliders\">\r\n         <input className = \"slider\"\r\n         type = \"range\"\r\n         min = \"0\"\r\n         max = \"255\"\r\n         value = {this.app.state.settings.greedy.endGreen}\r\n         onChange = {(e) => this.setGreedyEndGreen(e.target.value)}\r\n         step = \"1\"\r\n         disabled = {this.state.running}>\r\n         </input>\r\n         <label> End Green: {this.app.state.settings.greedy.endGreen}</label>\r\n       </div>\r\n       <div className = \"sliders\">\r\n         <input className = \"slider\"\r\n         type = \"range\"\r\n         min = \"0\"\r\n         max = \"255\"\r\n         value = {this.app.state.settings.greedy.endBlue}\r\n         onChange = {(e) => this.setGreedyEndBlue(e.target.value)}\r\n         step = \"1\"\r\n         disabled = {this.state.running}>\r\n         </input>\r\n         <label> End Blue: {this.app.state.settings.greedy.endBlue}</label>\r\n       </div>\r\n       </div>\r\n       : <></>}\r\n        </div>\r\n\r\n  }\r\n}\r\n\r\nexport default AlgorithmAttributes;\r\n\r\n\r\nasync function waitSetSettings(app, that){\r\n  await app.setState({settings: {\r\n    spring: {ka: that.state.cspring, kr: that.state.crep, eps: that.state.eps,\r\n            delta: that.state.delta, areascaling: that.state.cPercentage,\r\n            distanceType: that.state.distanceType},\r\n    fruchterman: {cTemp: that.state.cTemp,\r\n            tempHeuristic: that.state.tempHeuristic, eps: that.state.eps},\r\n    forceatlas2: {fr: that.state.kr, gravity: that.state.gravity,\r\n                  gravityType: that.state.gravityType, kg: that.state.kg,\r\n                  tau: that.state.tau, ksmax: that.state.ksmax,\r\n                  overlappingNodes: that.state.overlappingNodes},\r\n    forceatlaslinlog: {fr: that.state.kr, gravity: that.state.gravity,\r\n                  gravityType: that.state.gravityType, kg: that.state.kg,\r\n                  tau: that.state.tau, ksmax: that.state.ksmax,\r\n                  overlappingNodes: that.state.overlappingNodes},\r\n    kruskal: {red: that.state.kruskalred,\r\n              green: that.state.kruskalgreen,\r\n              blue: that.state.kruskalblue},\r\n    prim: {red: that.state.primred,\r\n          green: that.state.primgreen,\r\n          blue: that.state.primblue},\r\n    opt2: {timeout: that.state.opt2timeout,\r\n          red: that.state.opt2red,\r\n          green: that.state.opt2green,\r\n          blue: that.state.opt2blue},\r\n    opt2annealing:{\r\n            timeout: that.state.opt2annealingtimeout,\r\n            temperature: that.state.opt2annealingacceptance,\r\n            acceptance: that.state.opt2annealingacceptance,\r\n            startColor: [that.state.opt2annealingred,that.state.opt2annealinggreen,that.state.opt2annealingblue],\r\n            endColor: [that.state.opt2annealingredEnd,that.state.opt2annealinggreenEnd,that.state.opt2annealingblueEnd],\r\n          },\r\n    opt3: {timeout: that.state.opt3timeout,\r\n          red: that.state.opt3red,\r\n          green: that.state.opt3green,\r\n          blue: that.state.opt3blue},\r\n    greedy:{startRed: that.state.greedyStartRed,\r\n            startGreen: that.state.greedyStartGreen,\r\n            startBlue: that.state.greedyStartBlue,\r\n            endRed: that.state.greedyEndRed,\r\n            endGreen: that.state.greedyEndGreen,\r\n            endBlue: that.state.greedyEndBlue}\r\n    }});\r\n  // console.log(app.state.settings);\r\n}\r\n\r\nasync function waitSetKruskalRed(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({kruskalred: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetKruskalGreen(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({kruskalgreen: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetKruskalBlue(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({kruskalblue: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetPrimRed(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({primred: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetPrimGreen(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({primgreen: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetPrimBlue(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({primblue: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetOpt2Timeout(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({opt2timeout: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetOpt2Red(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({opt2red: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetOpt2Green(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({opt2green: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetOpt2Blue(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({opt2blue: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetOpt3Timeout(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({opt3timeout: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetOpt3Red(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({opt3red: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetOpt3Green(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({opt3green: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetOpt3Blue(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({opt3blue: value})\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetGreedyStartRed(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({greedyStartRed: value});\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetGreedyStartGreen(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({greedyStartGreen: value});\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetGreedyStartBlue(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({greedyStartBlue: value});\r\n  waitSetSettings(that.app, that);\r\n}\r\nasync function waitSetGreedyEndRed(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({greedyEndRed: value});\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetGreedyEndGreen(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({greedyEndGreen: value});\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitSetGreedyEndBlue(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({greedyEndBlue: value});\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitsetCREP(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({crep:value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetCSPRING(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({cspring:value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetDelta(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({delta:value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetEpsilon(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({eps:value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetC(v, that){\r\n  const value = parseFloat(v)\r\n  await that.setState({cPercentage: value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetCTEMP(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({cTemp:value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetKr(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({kr: value})\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetGravity(v, that){\r\n  const value = parseInt(v);\r\n  if(value === 0) await that.setState({gravity:false});\r\n  if(value === 1) await that.setState({gravity: true});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetGravityType(v, that){\r\n  const value = parseInt(v);\r\n  if(value === 0) await that.setState({gravityType: \"Normal\"});\r\n  if(value === 1) await that.setState({gravityType: \"Strong\"});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetGravityStrength(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({kg: value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetTau(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({tau:value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetKsmax(v, that){\r\n  const value = parseFloat(v);\r\n  await that.setState({ksmax:value})\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetOverlappingNodes(v, that){\r\n  const value = parseInt(v);\r\n  if(value === 0) await that.setState({overlappingNodes:true});\r\n  if(value === 1) await that.setState({overlappingNodes: false})\r\n  waitSetSettings(that.app, that)\r\n}\r\nasync function waitsetTempHeuristic(v, that){\r\n  const value = parseInt(v);\r\n  if(value===1) await that.setState({tempHeuristic: \"Logarithmic\"});\r\n  if(value===2) await that.setState({tempHeuristic: \"Linear\"});\r\n  if(value===3) await that.setState({tempHeuristic: \"Directional\"});\r\n  if(value===4) await that.setState({tempHeuristic: \"None\"});\r\n  waitSetSettings(that.app, that);\r\n}\r\n\r\nasync function waitsetCollision(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({collision: value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nasync function waitsetDistanceType(v, that){\r\n  const value = parseInt(v);\r\n  await that.setState({distanceType : value});\r\n  waitSetSettings(that.app, that)\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\" + color[0] + \",\" + color[1] + \",\" + color[2] + \")\";\r\n}\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport AlgorithmAttributes from\"./AlgorithmAttributes\";\r\n\r\nimport \"./NetworkAlgorithmSettings.css\"\r\n\r\nclass NetworkAlgorithmSettings extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n    }\r\n    this.app = this.props.app;\r\n    this.attributes = React.createRef();\r\n  }\r\n\r\n  setOpen(v){\r\n    this.setState({open:v});\r\n  }\r\n\r\n\r\n  render(){\r\n    return <div>\r\n              <Modal\r\n              isOpen = {this.state.open}\r\n              onRequestClose = {() => this.setOpen(false)}\r\n              className = \"algorithmsettings\"\r\n              overlayClassName = \"algorithmsettingsoverlay\">\r\n                <AlgorithmAttributes\r\n                 filtering = {this.app.state.filtering}\r\n                 filter = {this.app.state.filter}\r\n                 settings = {this}\r\n                 ref= {this.attributes}\r\n                 app = {this.app}/>\r\n              </Modal>\r\n           </div>\r\n  }\r\n}\r\n\r\nexport default NetworkAlgorithmSettings;\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport Vertex from \"../../datatypes/Vertex\";\r\nimport Edge from \"../../datatypes/Edge\";\r\nimport \"./Upload.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass UploadWindow extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      filename: \"\",\r\n      file: null,\r\n      error: \"\",\r\n    };\r\n    this.app = this.props.app;\r\n  }\r\n\r\n\r\n  setOpen(v){\r\n    this.setState({open:v});\r\n  }\r\n\r\n\r\n  async setFile(e){\r\n    e.preventDefault();\r\n    if(e.target.files === undefined || e.target.files === null) return;\r\n    await this.setState({filename: e.target.files[0].name, file: e.target.files[0], error: \"\"});\r\n  }\r\n\r\n  checkFile(e){\r\n    e.preventDefault();\r\n    const file = this.state.file;\r\n    console.log(file)\r\n    if(this.state.file === null || this.state.file === undefined) {\r\n      this.setState({error: \"No file uploaded.\"});\r\n      return;\r\n    };\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = (() => {\r\n      const dimension = this.app.state.dimension;\r\n      const width = this.app.state.height*0.55;\r\n      const height = this.app.state.height*0.55;\r\n      const depth = this.app.state.height*0.55;\r\n      const [error, vertices, edges] = parseInput(reader.result, dimension, width, height, depth);\r\n      if(error !== \"\") {\r\n        this.setState({error: error});\r\n        return;\r\n      }\r\n      const relevant_network = dimension === 2?\r\n        this.app.network.current:dimension === 3? this.app.network3d.current:\r\n          this.app.customnetwork.current;\r\n      this.app.setState({running:false, paused:true});\r\n      if(dimension === 2) {\r\n        relevant_network.setState({vertices: vertices, edges:edges});\r\n      }\r\n      else if(dimension === 3){\r\n        upload3D(this.app, relevant_network, vertices, edges);\r\n      }\r\n      else{\r\n        const vertex_list = vertices;\r\n        const vertex_grid = {};\r\n        const edge_map = {};\r\n        const edge_list = [];\r\n        console.log(relevant_network.state.gridConstant);\r\n        for(let i = 0; i < relevant_network.state.gridConstant; i++){\r\n          for(let j = 0; j < relevant_network.state.gridConstant; j++){\r\n            vertex_grid[[i,j]] = [];\r\n          }\r\n        }\r\n        for(let i = 0; i < vertex_list.length; i++){\r\n          const x = vertex_list[i].x;\r\n          const y = vertex_list[i].y;\r\n          console.log(relevant_network.getGrid(x,y));\r\n          vertex_grid[relevant_network.getGrid(x,y)].push(i);\r\n        }\r\n        for(let i = 0; i < edges.length; i++){\r\n          edge_list.push([edges[i].start, edges[i].end]);\r\n          edge_map[[edges[i].start, edges[i].end]] = true;\r\n        }\r\n        relevant_network.setState({vertices: vertex_grid, edges: edge_map,\r\n            edgeStart: [null, null], box:null,\r\n            selected_vertices: null, vertex_list: vertex_list, edge_list: edge_list, operationsBuffer: [],\r\n              operationsBufferIndex:-1})\r\n      }\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return <div>\r\n              <Modal isOpen = {this.state.open}\r\n                onRequestClose = {() => this.setOpen(false)}\r\n                className = \"upload\"\r\n                overlayClassName = \"uploadoverlay\"\r\n                >\r\n                  <p> Currently Supported Formats: .csv files</p>\r\n                  <p> The exact specifications of the file are detailed <b><a\r\n                   href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization/blob/master/README.md#Uploading-Data\"\r\n                   target = \"_blank\">here\r\n                  </a></b></p>\r\n\r\n                  <div className = \"formBlock\">\r\n                    <form onSubmit = {(e) => this.checkFile(e)}>\r\n                      <input\r\n                       onChange = {(e) => this.setFile(e)}\r\n                       type = \"file\"\r\n                       id = \"myFile\"\r\n                       name = \"filename\"/>\r\n                      <input type = \"submit\"/>\r\n                    </form>\r\n                  </div>\r\n                  <p style = {{color: \"rgb(255,160,0)\"}}\r\n                  className = \"errors\"> {this.state.error} </p>\r\n              </Modal>\r\n          </div>\r\n  }\r\n}\r\n\r\nexport default UploadWindow;\r\n\r\nfunction parseInput(text, dimension, width, height, depth){\r\n  // console.log(\"the full text is \", text);\r\n  const values = text.split(\"vertex\");\r\n  const new_vertices = [];\r\n  for(let i = 1; i < values.length-1; i++){\r\n    const vertex_values = values[i].split(\",\");\r\n    const x = parseFloat(vertex_values[1]);\r\n    const y = parseFloat(vertex_values[2]);\r\n    var z = vertex_values[3].replace(\" \", \"\") === \"\"?null:parseFloat(vertex_values[2]);\r\n    if(z === null && dimension === 3) z = (Math.random()*depth);\r\n    const v = new Vertex(x,y,z);\r\n    const degree = parseInt(vertex_values[4]);\r\n    v.degree = degree;\r\n    const size = parseInt(vertex_values[5]);\r\n    v.size = size;\r\n    var color = rgb_to_str(parseInt(vertex_values[6]), parseInt(vertex_values[7]),\r\n                                            parseInt(vertex_values[8].replace(\"\\n\", \"\")));\r\n    v.color = color;\r\n    new_vertices.push(v);\r\n    if(i > 199) return ['Too many vertices to parse', [], []];\r\n  }\r\n  const next_values = values[values.length-1].split(\"edge\");\r\n  const vertex_values = next_values[0].split(\",\");\r\n  const x = parseFloat(vertex_values[1]);\r\n  const y = parseFloat(vertex_values[2]);\r\n  var z = vertex_values[3].replace(\" \", \"\") === \"\"?null:parseFloat(vertex_values[2]);\r\n  if(z === null && dimension === 3) z = (Math.random()*depth);\r\n  const v = new Vertex(x,y,z);\r\n  const degree = parseInt(vertex_values[4]);\r\n  v.degree = degree;\r\n  const size = parseInt(vertex_values[5]);\r\n  v.size = size;\r\n  var color = rgb_to_str(parseInt(vertex_values[6]), parseInt(vertex_values[7]),\r\n                                            parseInt(vertex_values[8].replace(\"\\n\", \"\")));\r\n  v.color = color;\r\n\r\n  const error = resizeVertices(new_vertices, width, height, dimension);\r\n  if(error !== \"\") return [error, [], []];\r\n\r\n  const new_edges = [];\r\n  new_vertices.push(v);\r\n  for(let i = 1; i < next_values.length; i++){\r\n    const edge_values = next_values[i].split(\",\")\r\n    const start = parseInt(edge_values[1]);\r\n    const end = parseInt(edge_values[2]);\r\n    const weight = parseFloat(edge_values[3]);\r\n    const alpha = parseFloat(edge_values[4]);\r\n    var color = rgb_to_str(parseInt(edge_values[5]), parseInt(edge_values[6]),\r\n                                            parseInt(edge_values[7].replace(\"\\n\", \"\")));\r\n    if(color === \"rgb(0,0,0)\" && dimension === 3) color = \"rgb(211,211,211)\";\r\n    const e = new Edge(start, end);\r\n    e.weight = weight;\r\n    e.alpha = alpha;\r\n    e.color = color;\r\n    new_edges.push(e);\r\n    if(i > 600) return [\"Too many edges to parse\", [], []]\r\n  }\r\n  return [\"\",new_vertices, new_edges];\r\n}\r\n\r\nfunction rgb_to_str(red,green,blue){\r\n  return \"rgb(\" + red.toString() + \",\" + green.toString() + \",\" + blue.toString() +\")\";\r\n}\r\n\r\nfunction resizeVertices(vertices,width, height, dimension){\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var minZ = Infinity;\r\n  var maxX = -Infinity;\r\n  var maxY = -Infinity;\r\n  var maxZ = -Infinity;\r\n  for(let i = 0; i < vertices.length; i++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    minZ = Math.min(vertices[i].z, minZ);\r\n    maxX = Math.max(vertices[i].x, maxX);\r\n    maxY = Math.max(vertices[i].y, maxY);\r\n    maxZ = Math.max(vertices[i].z, maxZ);\r\n  }\r\n  if(minX === maxX || minY === maxY || (maxZ === minZ && dimension === 3)){\r\n    return \"error: completely: super-imposed vertices\";\r\n  }\r\n\r\n  for(let i = 0; i< vertices.length; i++){\r\n    vertices[i].x = (vertices[i].x - minX)*(width-5)/(-minX+maxX);\r\n    vertices[i].y = (vertices[i].y - minY)*(height-5)/(-minY+maxY);\r\n    if(dimension === 3) vertices[i].z = (vertices[i].z - minZ)*(height-5)/(-minZ+maxZ);\r\n  }\r\n  return \"\";\r\n}\r\n\r\nasync function upload3D(app, network, vertices, edges){\r\n  await app.setState({numE: edges.length, numV: vertices.length});\r\n  await network.resetNetwork();\r\n  network.setState({vertices: vertices, edges:edges});\r\n}\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"./ConfirmationWindow.css\"\r\nclass ConfirmationWindow extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      confirm: false,\r\n    };\r\n    this.parent = this.props.parent;\r\n    this.msg = this.props.msg\r\n\r\n  }\r\n\r\n  async setConfirm(v){\r\n    await this.setState({confirm: v});\r\n    this.setState({open:false});\r\n    if(v === true) this.props.trigger(this.parent);\r\n  }\r\n  setOpen(v){\r\n    this.setState({open:v})\r\n  }\r\n\r\n  render(){\r\n\r\n    return <div>\r\n            <Modal isOpen = {this.state.open === true}\r\n            onRequestClose = {() => this.setOpen(false)}\r\n            overlayClassName = \"confirmationWindowOverlay\"\r\n            className = \"confirmationWindow\">\r\n              <p> {this.msg} </p>\r\n              <p> Are you sure you wish to proceed? </p>\r\n              <button className = \"confirmNo\"\r\n              onClick = {() => this.setConfirm(false)}> No </button>\r\n              <button className = \"confirmYes\"\r\n               onClick = {() => this.setConfirm(true)}> Yes </button>\r\n            </Modal>\r\n           </div>\r\n  }\r\n}\r\n\r\nexport default ConfirmationWindow;\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport GeneralNetworkSettings from \"./GeneralNetworkSettings\";\r\nimport NetworkAlgorithmSettings from \"./NetworkAlgorithmSettings\";\r\nimport UploadWindow from \"./Upload/UploadWindow\";\r\nimport ConfirmationWindow from \"../ConfirmationWindow\";\r\n\r\nimport \"./NetworkSideDrawer.css\";\r\n\r\nModal.setAppElement(\"#root\")\r\n\r\nexport const DrawerToggleButton = props => (\r\n  <button onClick = {props.openSettings} className = \"toggle_button\"\r\n  style = {{height: props.height/20, width: props.height/20, backgroundSize: 'cover'}}>\r\n  </button>\r\n)\r\n\r\n\r\nclass NetworkSideDrawer extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      open:false,\r\n      dimension: 2,\r\n    }\r\n    this.tutorial = React.createRef();\r\n    this.generalsettings = React.createRef();\r\n    this.algorithmsettings = React.createRef();\r\n    this.uploadwindow = React.createRef();\r\n    this.confirmDimensionWindow = React.createRef();\r\n    this.confirmCustomWindow = React.createRef();\r\n    this.app = this.props.app;\r\n\r\n  }\r\n\r\n  setOpen(v){\r\n    this.setState({open:v});\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    Modal.setAppElement(document.getElementById('BC'));\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    return <div>\r\n\r\n            <Modal isOpen = {this.state.open}\r\n            onRequestClose = {() => this.setOpen(false)}\r\n            className = \"sidedrawer\"\r\n            overlayClassName = \"sidedraweroverlay\"\r\n            style = {{overlay:{top:this.props.height*1/20}}}\r\n            >\r\n              <ConfirmationWindow\r\n              ref = {this.confirmDimensionWindow}\r\n              parent = {this}\r\n              trigger = {switchDimension}\r\n              msg = {\"Any unsaved changes will be lost.\"}/>\r\n              <ConfirmationWindow\r\n              ref = {this.confirmCustomWindow}\r\n              parent = {this}\r\n              trigger = {setCustomNetwork}\r\n              msg = {\"Any unsaved changes will be lost.\"}\r\n              />\r\n              <GeneralNetworkSettings ref = {this.generalsettings} app = {this.app}/>\r\n              <NetworkAlgorithmSettings ref = {this.algorithmsettings} app = {this.app}/>\r\n              <UploadWindow app = {this.app} ref = {this.uploadwindow}></UploadWindow>\r\n              <div className = \"settings\">\r\n                <br></br>\r\n                <a target = \"_blank\"\r\n                href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization/blob/master/src/Tutorial/Tutorial.md\">\r\n                Tutorial </a>\r\n                <br></br>\r\n                <button onClick= {() => this.confirmDimensionWindow.current.setOpen(true)}>\r\n                {this.app.state.dimension === 3 || this.app.state.dimension === \"Custom\"? 2:3}D Networks\r\n                </button>\r\n                <br></br>\r\n                <button onClick = {() => this.generalsettings.current.setOpen(true)}> General Settings </button>\r\n                <br></br>\r\n                <button onClick = {() => this.algorithmsettings.current.setOpen(true)}> Algorithm Settings </button>\r\n                <br></br>\r\n                <button onClick = {() => this.uploadwindow.current.setOpen(true)}> Upload Your Data</button>\r\n                <br></br>\r\n                <button onClick = {() => this.confirmCustomWindow.current.setOpen(true)}> Create Custom Network </button>\r\n                <br></br>\r\n                <a href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization#network-algorithm-visualization\" target= \"_blank\" > Documentation & Code </a>\r\n                <br></br>\r\n                <a href =\"https://github.com/alexandreLamarre/Network-Algorithm-Visualization/issues\" target =\"_blank\"> Report a Bug </a>\r\n                <br></br>\r\n              </div>\r\n            </Modal>\r\n          </div>\r\n  }\r\n}\r\n\r\nexport default NetworkSideDrawer;\r\n\r\nasync function switchDimension(that){\r\n  if(that.app.state.dimension === 2) {\r\n    await that.app.setState({dimension: 3, running: false});\r\n  }\r\n  else if(that.app.state.dimension == 3 || that.app.state.dimension === \"Custom\") {\r\n    await that.app.setState({dimension: 2, running: false});\r\n  }\r\n}\r\n\r\nasync function setCustomNetwork(that){\r\n  await that.app.setState({dimension: \"Custom\", running:false});\r\n}\r\n","import React from \"react\";\r\nimport {DrawerToggleButton} from \"./NetworkSideDrawer\";\r\nimport NetworkSideDrawer from \"./NetworkSideDrawer\";\r\n\r\n\r\nimport \"./NetworkNavBar.css\";\r\n\r\nclass NetworkNavBar extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {search: \"\", color: \"black\"}\r\n    this.settings = React.createRef();\r\n    this.app = this.props.app;\r\n  }\r\n\r\n  openSettings(){\r\n    const open = this.settings.current.state.open;\r\n    this.settings.current.setOpen(!open);\r\n  }\r\n\r\n  setSearch(e){\r\n    e.preventDefault();\r\n    this.setState({search: e.target.value, color:\"black\"});\r\n  }\r\n\r\n  openSearch(e){\r\n    e.preventDefault();\r\n    const search_term = this.state.search;\r\n    var link = document.createElement('a');\r\n    link.setAttribute(\"target\", \"_blank\");\r\n    if(search_term.toLowerCase() === \"basic spring embedding\") {\r\n      link.href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization#basic-spring-embedding\"\r\n    }\r\n    if(search_term.toLowerCase() === \"fruchterman-reingold\"){\r\n      link.href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization#fruchterman-reingold\"\r\n    }\r\n    if(search_term.toLowerCase() === \"force atlas 2\"){\r\n      link.href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization#force-atlas-2\"\r\n    }\r\n    if(search_term.toLowerCase() === \"force atlas 2 (linlog)\"){\r\n      link.href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization#force-atlas-2-linlog\"\r\n    }\r\n    if(search_term.toLowerCase() === \"generalized eigenvector spectral drawing\"){\r\n      link.href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization#generalized-eigenvector-koren\"\r\n    }\r\n    if(search_term.toLowerCase() === \"schwarz based method\"){\r\n      link.href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization#schwarz-based-method\"\r\n    }\r\n    if(search_term.toLowerCase() === \"kruskal's algorithm\"){\r\n      link.href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization#kruskal\"\r\n    }\r\n    if(search_term.toLowerCase() === \"prim's algorithm\"){\r\n      link.href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization#prim\"\r\n    }\r\n    if(search_term.toLowerCase() === \"2-opt\"){\r\n      link.href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization#2-opt\"\r\n    }\r\n    if(search_term.toLowerCase() === \"3-opt\"){\r\n      link.href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization#3-opt\"\r\n    }\r\n    if(search_term.toLowerCase() === \"2-opt simulated annealing\"){\r\n      link.href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization#2-opt-simulated-annealing\"\r\n    }\r\n    if(search_term.toLowerCase() === \"greedy coloring\"){\r\n      link.href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization#greedy-coloring\"\r\n    }\r\n    if(search_term.toLowerCase() === \"misra-gries\"){\r\n      link.href = \"https://github.com/alexandreLamarre/Network-Algorithm-Visualization#misra-gries\"\r\n    }\r\n\r\n    if(link != \"\"){\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }\r\n    else {\r\n      this.setState({color:\"red\"});\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return <div className = \"gonavbar\">\r\n              <NetworkSideDrawer height = {this.props.height}\r\n              ref = {this.settings} app = {this.app}></NetworkSideDrawer>\r\n              <header className = \"toolbar\" style = {{height: this.props.height*1/20}}>\r\n                <nav className =\"toolbar__navigation\">\r\n                  <div><DrawerToggleButton openSettings = {() => this.openSettings()}\r\n                  height = {this.props.height}></DrawerToggleButton></div>\r\n                  <div className = \"toolbar__logo\"\r\n                  style = {{fontSize: this.props.height/40, marginTop: this.props.height/240}} >\r\n                  <a > Network Analysis {this.app.state.dimension}{this.app.state.dimension === \"Custom\"?\"\":\"D\"}\r\n                  </a></div>\r\n\r\n                  <div className =\"toolbar__search\"\r\n                  style = {{fontSize: this.props.height/40, marginTop: this.props.height/240}}>\r\n                      <form onChange = {(e) => this.setSearch(e)}\r\n                      onSubmit = {(e) => this.openSearch(e)}>\r\n                      <label> Search :\r\n                      </label>\r\n                      <input minLength = \"2\" list = \"search_values\"\r\n                      style = {{color: this.state.color}}/>\r\n                      <datalist id = \"search_values\">\r\n                        <option value = \"Basic Spring Embedding\"/>\r\n                        <option value = \"Fruchterman-Reingold\"/>\r\n                        <option value = \"Force Atlas 2\"/>\r\n                        <option value = \"Force Atlas 2 (LinLog)\"/>\r\n                        <option value = \"Generalized Eigenvector Spectral Drawing\"/>\r\n                        <option value = \"Schwarz Based Method\"/>\r\n                        <option value = \"Kruskal's Algorithm\"/>\r\n                        <option value = \"Prim's Algorithm\"/>\r\n                        <option value = \"2-Opt\"/>\r\n                        <option value = \"3-Opt\"/>\r\n                        <option value = \"2-Opt simulated annealing\"/>\r\n                        <option value = \"Greedy Coloring\"/>\r\n                        <option value = \"Misra-Gries\"/>\r\n                      </datalist>\r\n                      </form>\r\n                  </div>\r\n\r\n                </nav>\r\n              </header>\r\n            </div>\r\n  }\r\n}\r\n\r\nexport default NetworkNavBar;\r\n","import Vertex from \"../datatypes/Vertex\";\r\nimport Edge from \"../datatypes/Edge\";\r\n\r\nexport function createRandomNetwork3D(maxWidth, maxHeight, maxDepth, numV, numE, conn, randomType, startColors, endColors, resize, minsize, maxsize){\r\n  let connected = conn;\r\n  let seed = randomType;\r\n  const maxDegree = numV-1;\r\n  let maxEdges = Math.floor((maxDegree*numV)/2)\r\n  const maxEdgesValue = maxEdges;\r\n  let vertices = [];\r\n  let available_vertices = [];\r\n  const center = [maxWidth/2, maxHeight/2, maxDepth/2];\r\n  const radius = (maxHeight/2)*0.90;\r\n\r\n  //create random points on canvas\r\n  for(let i = 0; i < numV; i ++){\r\n    var point = [0,0]\r\n    if(seed === \"random\" || seed === \"cycle\") point = createRandomPos(maxWidth, maxHeight, maxDepth);\r\n    if(seed === \"randomcircle\") point = createRandomPosSphere(center, radius);\r\n    const v = new Vertex(point[0], point[1], point[2]);\r\n    v.size = 5; //default for 3d because it looks better, while 3 looks better for 2D.\r\n\r\n    vertices.push(v);\r\n    available_vertices.push(i);\r\n  }\r\n  let edges = [];\r\n  let already_connected = new Map();\r\n  if(!(seed === \"cycle\")){\r\n    let remainingEdges = numE;\r\n    if(connected === \"True\"){\r\n      let unvisited = [];\r\n      for(var i = 0; i < numV; i++){\r\n        unvisited.push(i);\r\n      }\r\n      let visited = [];\r\n      var vIndex1 = pickRandomVertex(unvisited);\r\n      var v1 = unvisited[vIndex1];\r\n      visited.push(v1);\r\n      unvisited = removeFromArray(unvisited, vIndex1);\r\n\r\n      var visited_num = 1;\r\n      while(visited_num < numV){\r\n        var vIndex2 = pickRandomVertex(unvisited)\r\n        var v2 = unvisited[vIndex2];\r\n        visited.push(v2); //add to visited\r\n        const e = new Edge(v1,v2);\r\n        e.setColor(\"rgb(211,211,211)\");\r\n        edges.push(e);\r\n        vertices[v1].increment_degree();\r\n        vertices[v2].increment_degree();\r\n        remainingEdges --;\r\n        maxEdges --;\r\n        const indexTo = v1 + 1000* v2; // works as long as numV < 1000\r\n        const indexFrom = v2+ 1000*v1;\r\n        already_connected.set(indexTo, true);\r\n        already_connected.set(indexFrom, true);\r\n        //remove from unvisited\r\n        unvisited = removeFromArray(unvisited, vIndex2);\r\n        //reset v1\r\n        vIndex1 = pickRandomVertex(visited);\r\n        v1 = visited[vIndex1];\r\n        visited_num ++;\r\n      }\r\n    }\r\n    while(remainingEdges > 0 && maxEdges > 0 && available_vertices.length > 1){\r\n      const [random1, random2] = connectRandomVertices(available_vertices.slice());\r\n      if(random1 === random2) console.log(\"unexpected\");\r\n      if(random1 === undefined) console.log(\"unexpected undefiend 1\");\r\n      if(random2 === undefined) console.log(\"unexpected undefined 2\");\r\n      // console.log(\"rem:\", remainingEdges, \"max\", maxEdges);\r\n      const indexTo = random1+1000*random2; // as long as numV < 1000 this works\r\n      const indexFrom = random2+1000*random1;\r\n      if(already_connected.get(indexTo) === undefined ){\r\n        const e = new Edge(random1, random2);\r\n        e.setColor(\"rgb(211,211,211)\");\r\n        edges.push(e);\r\n        vertices[random1].increment_degree();\r\n        vertices[random2].increment_degree();\r\n        if(vertices[random1].degree > maxDegree) available_vertices.splice(random1, 1);\r\n        if(vertices[random2].degree > maxDegree) available_vertices.splice(random2, 1);\r\n        already_connected.set(indexTo, true);\r\n        already_connected.set(indexFrom, true);\r\n        remainingEdges --;\r\n        maxEdges --;\r\n        }\r\n      }\r\n  }\r\n  else{\r\n    //seed = cycle\r\n    var [path,root] = initial_random_cycle(vertices);\r\n    for(let i = 0; i < path.length-1; i++){\r\n      edges.push(new Edge(path[i], path[i+1]));\r\n      edges[i].setColor(\"rgb(211,211,211)\");\r\n    }\r\n    for(let i = 0; i < vertices.length; i++){\r\n      vertices[i].degree = 2;\r\n    }\r\n  }\r\n\r\n  var max_degree = find_max_degree(vertices);\r\n  // console.log(\"max_degree\", max_degree);\r\n  var shouldRecolor = !(sameColor(startColors, endColors));\r\n  // console.log(shouldRecolor);\r\n  var colorGradient;\r\n  if(shouldRecolor === true) var colorGradient = createColorGradient(startColors, endColors, max_degree);\r\n  // console.log(colorGradient);\r\n  if(resize === true || shouldRecolor === true){\r\n  for(let i = 0; i < vertices.length; i++){\r\n      if(resize === true) vertices[i].size = assign_size(vertices[i].degree, max_degree, minsize, maxsize)+2;\r\n      if(shouldRecolor === true) vertices[i].color = assign_color(vertices[i].degree, max_degree, colorGradient);\r\n      // console.log(vertices[i].size)\r\n      // console.log(vertices[i].color);\r\n    }\r\n  }\r\n\r\n  return [vertices,edges];\r\n}\r\n\r\nfunction createRandomPos(maxWidth, maxHeight, maxDepth){\r\n  return [Math.random()*(maxWidth+1-5), Math.random()*(maxHeight+1-5), Math.random()*(maxDepth+1-5)];\r\n}\r\n\r\nfunction createRandomPosSphere(center, radius){\r\n  const randomAngle = Math.random()*(2*Math.PI);\r\n  const z = Math.random()*center[2] - center[2];\r\n  const theta = Math.asin(z/center[2]);\r\n  return [center[0]+ radius*Math.cos(theta)*Math.cos(randomAngle), center[1]+radius*Math.sin(theta)*Math.sin(randomAngle), center[2]+z]\r\n}\r\n\r\nfunction connectRandomVertices(vertices){\r\n  var random1 = vertices[Math.floor(Math.random()*vertices.length)];\r\n  vertices.splice(random1,1);\r\n  var random2 = vertices[Math.floor(Math.random()*vertices.length)];\r\n\r\n  return [random1, random2];\r\n}\r\n\r\nfunction pickRandomVertex(array){\r\n  return Math.floor(Math.random()*array.length)\r\n}\r\n\r\nfunction removeFromArray(array, index){\r\n  return array.slice(0,index).concat(array.slice(index+1))\r\n}\r\n\r\nfunction initial_random_cycle(vertices){\r\n\r\n  var root = 0;\r\n  var initial_path = []\r\n\r\n  //construct adjacency matrix\r\n  const adj = []\r\n  var available_vertices = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    available_vertices.push(i);\r\n\r\n  }\r\n\r\n\r\n  root = pick_random_array(available_vertices);\r\n  available_vertices = remove_from_array(available_vertices, root);\r\n\r\n  initial_path.push(root);\r\n  for(let i = 0; i < vertices.length -1; i++){\r\n    const next_node = pick_random_array(available_vertices);\r\n    available_vertices = remove_from_array(available_vertices, next_node);\r\n    initial_path.push(next_node);\r\n  }\r\n  initial_path.push(root);\r\n\r\n  return [initial_path, root];\r\n}\r\n\r\nfunction remove_from_array(array, item){\r\n  var index  = array.indexOf(item)\r\n  return array.slice(0,index).concat(array.slice(index+1));\r\n}\r\n\r\nfunction pick_random_array(array){\r\n  return array[Math.floor(Math.random()*array.length)];\r\n}\r\n\r\n\r\nfunction find_max_degree(vertices){\r\n  var max_degree = -Infinity;\r\n  for(let i = 0; i < vertices.length; i++){\r\n    max_degree = Math.max(vertices[i].degree, max_degree);\r\n  }\r\n  return max_degree;\r\n}\r\n\r\nfunction assign_size(degree, max_degree, minsize, maxsize){\r\n  //min degree is 1 or 0\r\n  return minsize +(maxsize - minsize)*(degree/max_degree)\r\n}\r\n\r\nfunction assign_color(degree, max_degree, gradient){\r\n\r\n  var selection = gradient[Math.floor((degree/max_degree) * (gradient.length-1))]\r\n\r\n  return rgb_to_str(selection)\r\n}\r\n\r\nfunction createColorGradient(startColor, endColor, maxDegree){\r\n  // console.log(\"inside color gradient\", startColor, endColor, maxDegree);\r\n  var [startHue, startSaturation, startLightness] = rgb_to_hsl(startColor);\r\n  var [endHue, endSaturation, endLightness] = rgb_to_hsl(endColor);\r\n\r\n  // console.log(startHue, startSaturation, startLightness);\r\n  // console.log(endHue, endSaturation, endLightness);\r\n  var incrementHue = (endHue-startHue)/maxDegree;\r\n\r\n  const gradient = [];\r\n\r\n  for(let i = 0; i < maxDegree; i++){\r\n    const newHue = startHue+(incrementHue*i)%360;\r\n    const [red,green,blue] = hsl_to_rgb((startHue+incrementHue*i)%360, startSaturation,\r\n                                            startLightness)\r\n    gradient.push([Math.abs(red%256), Math.abs(green%256), Math.abs(blue%256)]);\r\n    // console.log(gradient[i]);\r\n  }\r\n  return gradient;\r\n}\r\n\r\nfunction rgb_to_hsl(rgbColor){\r\n  var red = rgbColor[0]/255;\r\n  var green = rgbColor[1]/255;\r\n  var blue = rgbColor[2]/255;\r\n  var Cmax = Math.max(...[red,green,blue]);\r\n  var Cmin = Math.min(...[red,green,blue]);\r\n  var delta = Cmax-Cmin;\r\n\r\n\r\n  var hue = calculate_hue(delta, Cmax, red, green, blue)%360;\r\n  var lightness = (Cmax+Cmin)/2;\r\n  var saturation = delta === 0? 0: delta/(1-Math.abs(2*lightness-1));\r\n\r\n  return [hue, saturation, lightness];\r\n}\r\n\r\nfunction hsl_to_rgb(hue, saturation, lightness){\r\n  const C = (1 - Math.abs(2*lightness-1))*saturation\r\n  const X = C * (1 - Math.abs(hue/60)%2 -1);\r\n  const m = lightness - C/2;\r\n  const [R_prime, G_prime, B_prime] = check_degrees(hue, C, X);\r\n  return [((R_prime+m)*255)%256, ((G_prime + m)* 255)%256, ((B_prime+m) * 255)%256];\r\n}\r\n\r\nfunction calculate_hue(delta, Cmax, red, green, blue){\r\n  if(delta === 0) return 0;\r\n  if(Cmax === red) return 60*(((green-blue)/delta)%6);\r\n  if(Cmax === green) return 60*((blue-red)/delta+2);\r\n  if(Cmax === blue) return 60*((red- green)/delta + 4);\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\" + parseInt(color[0]) + \",\" + parseInt(color[1]) + \",\" + parseInt(color[2]) +\")\";\r\n}\r\n\r\n/*\r\nInput is RGB colors in 3d array\r\n*/\r\nfunction sameColor(startColor, endColor){\r\n  if(startColor[0] === endColor[0] && startColor[1] === endColor[1] && startColor[2] === endColor[2]) return true;\r\n  return false;\r\n}\r\n\r\nfunction check_degrees(hue, C, X){\r\n  if((hue >= 0 && hue < 60) || hue == 360) return [C,X,0];\r\n  if(hue >= 60 && hue < 120 ) return [X,C,0];\r\n  if(hue >= 120 && hue < 180 ) return [0, C, X];\r\n  if(hue >= 180 && hue < 240 ) return [0, X, C];\r\n  if(hue >= 240 && hue < 300 ) return [X, 0, C];\r\n  if(hue >= 300 && hue < 360 ) return [C, 0, X];\r\n  return [0,0,0];\r\n}\r\n","import Force from \"../datatypes/Force\";\r\nimport Vertex from \"../datatypes/Vertex\";\r\nvar C= 1;\r\nvar K = 0.01; //OPTIMAL DISTANCE\r\nvar ITERATIONS = 300;\r\n\r\nexport function fruchtermanReingold3D(vertices,edges,graph_distancex, graph_distancey, iterations, settings){\r\n  const W = graph_distancex -6;\r\n  const L = graph_distancey -6;\r\n  const kIter = iterations;\r\n  ITERATIONS = kIter;\r\n  const coolingtype = settings.tempHeuristic;\r\n  const tempHeuristic = settings.tempHeuristic;\r\n  C = 1;\r\n  K = C* Math.sqrt((W)*(L)/(vertices.length));\r\n  const epsilon = settings.eps;\r\n\r\n  // console.log(settings);\r\n\r\n  let t = 1;\r\n  let animations = [];\r\n  let temperature = (1/10)*W * settings.cTemp;\r\n  let temperature_list = [];\r\n  let previousAngle = [];\r\n  let scaling_factor = [];\r\n  if(coolingtype === \"Directional\"){\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      temperature_list.push(temperature);\r\n    }\r\n  }\r\n  const initial_temperature = temperature;\r\n\r\n  while(t<kIter){\r\n    let force_list = [];\r\n    //calculate repulsive forces\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      let f = new Force(0,0,0);\r\n      for(let j = 0; j < vertices.length; j ++){\r\n        if(i!== j){\r\n          const delta = distance(vertices[i], vertices[j]);\r\n          const calcs = frepulse(vertices[i], vertices[j], delta);\r\n          // var delta = distance(vertices[i], vertices[j]);\r\n          // var unitvector = unitVector(vertices[j], vertices[i])\r\n          f.addVector(calcs);\r\n        }\r\n      }\r\n      force_list.push(f);\r\n    }\r\n    //calculate attractive forces\r\n    for(let i = 0; i < edges.length; i++){\r\n      const e = edges[i];\r\n      if(e.start === e.end) console.log(\"well fuck\");\r\n      const delta = distance(vertices[e.start], vertices[e.end]);\r\n      const calcs = fattract(vertices[e.start], vertices[e.end], delta);\r\n      const ncalcs = [-calcs[0], -calcs[1], -calcs[2]]\r\n\r\n      force_list[e.end].addVector(calcs);\r\n      force_list[e.start].addVector(ncalcs);\r\n    }\r\n    //update positions\r\n    const iter_animations = [];\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var minZ = Infinity;\r\n    var maxX = 0;\r\n    var maxY = 0;\r\n    var maxZ = 0;\r\n    var maxForce = 0;\r\n    const origin = new Vertex(0,0,0);\r\n\r\n    for(let i = 0; i < vertices.length; i++){\r\n      const unitvector = unitVector(force_list[i], origin)\r\n      const unitForce = new Force(unitvector[0], unitvector[1], unitVector[2]);\r\n      unitForce.setX(unitForce.x*Math.min(temperature, Math.abs(force_list[i].x)));\r\n      unitForce.setY(unitForce.y*Math.min(temperature, Math.abs(force_list[i].y)));\r\n      unitForce.setZ(unitForce.z*Math.min(temperature, Math.abs(force_list[i].z)));\r\n      vertices[i].add(unitForce);\r\n\r\n      //UPDATE CONVERGENCE\r\n      // if(i == 1){\r\n      //   maxForce = distance([new_x,new_y], old_vertices);\r\n      // }\r\n      // else{\r\n      //   maxForce = distance([new_x,new_y], old_vertices) > maxForce? distance([new_x,new_y], old_vertices): maxForce;\r\n      // }\r\n\r\n\r\n      minX = Math.min(minX, vertices[i].x);\r\n      minY = Math.min(minY, vertices[i].y);\r\n      minZ = Math.min(minZ, vertices[i].z);\r\n      maxX = vertices[i].x > maxX? vertices[i].x:maxX;\r\n      maxY = vertices[i].y > maxY? vertices[i].y:maxY;\r\n      maxZ = vertices[i].z > maxZ? vertices[i].z:maxZ;\r\n\r\n      iter_animations.push([vertices[i].x, vertices[i].y, vertices[i].z])\r\n    }\r\n    //update scaling factors, animations and particle temperature\r\n    scaling_factor.push([-minX,-minY, -minZ, W/(-minX+maxX), L/(-minY+maxY), L/(-minZ+maxZ)]);\r\n    animations.push(iter_animations);\r\n\r\n    if(tempHeuristic !== \"Directional\")temperature = cool(temperature, tempHeuristic, initial_temperature);\r\n    t+= 1;\r\n    // if(maxForce < epsilon) break;\r\n  }\r\n  const iter_animations = [];\r\n\r\n  for(let i = 0; i < animations.length; i++){\r\n    for(let j = 0; j < animations[i].length; j ++){\r\n      animations[i][j][0] = (animations[i][j][0] + scaling_factor[i][0])*scaling_factor[i][3];\r\n      animations[i][j][1] = (animations[i][j][1] + scaling_factor[i][1])*scaling_factor[i][4];\r\n      animations[i][j][2] = (animations[i][j][2] + scaling_factor[i][2]) * scaling_factor[i][5];\r\n    }\r\n  }\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var minZ = Infinity;\r\n  var maxX = 0;\r\n  var maxY = 0;\r\n  var maxZ = 0;\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    minZ = Math.min(vertices[i].z, minZ);\r\n    maxX = vertices[i].x > maxX? vertices[i].x:maxX;\r\n    maxY = vertices[i].y > maxY? vertices[i].y:maxY;\r\n    maxZ = vertices[i].z > maxZ? vertices[i].z:maxZ;\r\n  }\r\n  // maxX = Math.max(W, maxX);\r\n  // maxY = Math.max(L, maxY);\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    vertices[i].x = (vertices[i].x + (-minX)) * W/(-minX+maxX);\r\n    vertices[i].y = (vertices[i].y + (-minY)) * L/(-minY+maxY);\r\n    vertices[i].z = (vertices[i].z + (-minZ))* L/(-minZ+maxZ);\r\n  }\r\n  // console.log(vertices);\r\n  return [vertices, animations];\r\n}\r\n\r\nfunction frepulse(v1,v2, delta){\r\n  const unitvector = unitVector(v1,v2)\r\n\r\n  return [((Math.pow(K,2))/delta)*unitvector[0], ((Math.pow(K,2))/delta)*unitvector[1], ((Math.pow(K,2))/delta)*unitvector[2]];\r\n}\r\n\r\nfunction fattract(v1,v2,delta){\r\n  const unitvector = unitVector(v1,v2);\r\n\r\n  return [unitvector[0]*(Math.pow(delta,2))/K, unitvector[1]*(Math.pow(delta,2))/K, unitvector[2]*(Math.pow(delta,2))/K];\r\n}\r\n\r\nfunction distance(v1,v2){\r\n  // console.log(x,y);\r\n  var distX = Math.pow((v1.x - v2.x), 2);\r\n  var distY = Math.pow((v1.y - v2.y), 2);\r\n  var distZ = Math.pow((v1.z - v2.z), 2);\r\n  if(distX + distY + distZ === 0) distX = 0.00000000000000000001\r\n\r\n  return  Math.sqrt((distX + distY+ distZ));\r\n}\r\n/**\r\n* UnitVector from X to Y\r\n*/\r\nfunction unitVector(v1,v2){\r\n  const new_x = v2.x - v1.x;\r\n  const new_y = v2.y - v1.y;\r\n  const new_z = v2.z - v1.z;\r\n  const dist = distance(v1,v2);\r\n  return [new_x/dist, new_y/dist, new_z/dist];\r\n}\r\n\r\nfunction cool(t, tempHeuristic, initial_temperature){\r\n  if(tempHeuristic === \"Linear\"){\r\n    return t - initial_temperature/ITERATIONS\r\n  }\r\n  if(tempHeuristic === \"Logarithmic\"){\r\n    return 0.90*t\r\n  }\r\n  if(tempHeuristic === \"Directional\"){\r\n    return t\r\n  }\r\n  return t\r\n}\r\n","import Force from \"../datatypes/Force\";\r\n\r\nvar CREP = 20;\r\nvar CSPRING = 20;\r\nvar lx = 0;\r\nvar ly = 0;\r\n/**\r\n* Basic spring embedding algorithm\r\n*/\r\nexport function springEmbedding3D(vertices,edges,graph_distancex, graph_distancey, iterations, settings){\r\n  // relevant constants for spring embedding\r\n  const W = graph_distancex -6;\r\n  const L = graph_distancey -6;\r\n  lx = 1 + ((Math.sqrt(W)/2-1)*settings.areascaling)/100;\r\n  ly = 1 + ((Math.sqrt(L)/2-1)*settings.areascaling)/100;\r\n  const K = iterations;\r\n\r\n  const epsilon = settings.eps;\r\n  const delta = settings.delta;\r\n  CREP = settings.kr;\r\n  CSPRING = settings.ka;\r\n  const distType = settings.distanceType;\r\n\r\n  // console.log(settings);\r\n\r\n  let t = 1;\r\n  let animations = [];\r\n  let scaling_factor = [];\r\n\r\n  while(t<K){\r\n    let force_list = [];\r\n    for(let i =0; i < vertices.length; i++){\r\n      let f = new Force(0,0,0);\r\n      let vert_connected = []; //represents vertices we should not repulse later\r\n      // CALCULATE ATTRACTION FORCES\r\n      for(let j = 0; j < edges.length; j++){\r\n        if(i === edges[j].start && i !== edges[j].end){\r\n          const calcs = fattract(vertices[edges[j].start], vertices[edges[j].end], distType);\r\n          f.addVector(calcs)\r\n          vert_connected.push(edges[j].end);\r\n        }\r\n        if(i === edges[j].end && i !== edges[j].start){\r\n          const calcs = fattract(vertices[edges[j].end], vertices[edges[j].start], distType)\r\n          f.addVector(calcs)\r\n          vert_connected.push(edges[j].start);\r\n        }\r\n      }\r\n      //CALCULATE REPULSIVE FORCES\r\n      for(let j =0; j < vertices.length; j++){\r\n        if(i === j ) continue;\r\n        let connected = false;\r\n        for(let k = 0; k < vert_connected.length; k++){\r\n          if(j === vert_connected[k]) connected = true;\r\n        }\r\n        if(!connected){\r\n          const calcs = frepulse(vertices[i], vertices[j]);\r\n          f.addVector(calcs)\r\n        }\r\n      }\r\n      force_list.push(f)\r\n    }\r\n\r\n\r\n    //UPDATE POSITIONS\r\n    const iteration_animation = [];\r\n    var maxF = 0;\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var minZ = Infinity;\r\n    var maxX = 0;\r\n    var maxY = 0;\r\n    var maxZ = 0;\r\n\r\n    for(let i = 0; i < vertices.length; i++){\r\n      force_list[i].scale(delta);\r\n      vertices[i].add(force_list[i]);\r\n\r\n      //update scaling_factor\r\n      minX =  minX = Math.min(minX, vertices[i].x)\r\n      minY = Math.min(minY, vertices[i].y);\r\n      minZ = Math.min(minZ, vertices[i].z);\r\n      maxX = vertices[i].x > maxX? vertices[i].x:maxX;\r\n      maxY = vertices[i].y > maxY? vertices[i].y:maxY;\r\n      maxZ = vertices[i].z > maxZ? vertices[i].z: maxZ;\r\n      //update animations\r\n      iteration_animation.push([vertices[i].x, vertices[i].y, vertices[i].z]);\r\n    }\r\n    scaling_factor.push([-minX, -minY, -minZ, W/((-minX)+maxX), L/((-minY)+maxY), L/((-minZ)+maxZ)])\r\n\r\n\r\n    animations.push(iteration_animation);\r\n    t += 1\r\n  }\r\n  //scale animations properly without affecting computations\r\n  for(let i = 0; i < animations.length; i++){\r\n    for(let j = 0; j < animations[i].length; j ++){\r\n      animations[i][j][0] = (animations[i][j][0] + scaling_factor[i][0])*scaling_factor[i][3];\r\n      animations[i][j][1] = (animations[i][j][1] + scaling_factor[i][1])*scaling_factor[i][4];\r\n      animations[i][j][2] = (animations[i][j][2] + scaling_factor[i][2])*scaling_factor[i][5];\r\n    }\r\n  }\r\n\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var minZ = Infinity;\r\n  var maxX = 0;\r\n  var maxY = 0;\r\n  var mazZ = 0;\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    minZ = Math.min(vertices[i].z, minZ);\r\n    maxX = vertices[i].x > maxX? vertices[i].x:maxX;\r\n    maxY = vertices[i].x > maxY? vertices[i].y:maxY;\r\n    maxZ = vertices[i].z > maxZ? vertices[i].z: maxZ;\r\n  }\r\n\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    vertices[i].x = (vertices[i].x + -minX) * (W/(-minX+maxX));\r\n    vertices[i].y = (vertices[i].y + -minY) * (L/(-minY+maxY));\r\n    vertices[i].z = (vertices[i].z + -minZ) * (L/(-minZ+maxZ))\r\n  }\r\n  return [vertices, animations];\r\n}\r\n\r\n\r\n\r\n\r\nfunction frepulse(v1,v2){\r\n  var dist = distance(v2,v1);\r\n  const unitV = unitVector(v2,v1);\r\n  return [(CREP*unitV[0])/Math.sqrt(dist) , (CREP*unitV[1])/Math.sqrt(dist),\r\n                      (CREP*unitV[2])/Math.sqrt(dist)];\r\n\r\n}\r\n\r\nfunction fattract(v1,v2, distanceType){\r\n  var dist = distance(v1,v2);\r\n  const unitV = unitVector(v1,v2);\r\n\r\n  return [CSPRING* Math.log(dist/(lx)) * unitV[0],\r\n          CSPRING* Math.log(dist/(ly)) * unitV[1],\r\n          CSPRING* Math.log(dist/(ly)) * unitV[2]];\r\n}\r\n\r\nfunction distance(v1,v2){\r\n  const dist = Math.sqrt(Math.pow((v1.x - v2.x), 2) + Math.pow((v1.y - v2.y), 2) + Math.pow((v1.z-v2.z),2))\r\n  return dist === 0? 0.00000000000000000001: dist;\r\n}\r\n\r\n/**\r\n* UnitVector from X to Y\r\n*/\r\nfunction unitVector(v1,v2){\r\n  const new_x = v2.x - v1.x;\r\n  const new_y = v2.y - v1.y;\r\n  const new_z = v2.z - v1.z;\r\n  const dist = distance(v1,v2);\r\n  return [new_x/dist, new_y/dist, new_z/dist];\r\n}\r\n","import Force from \"../datatypes/Force\"\r\nvar ka = 1;\r\nvar kr = 1;\r\nvar kg = 10;\r\nvar ks = 0.1;\r\nvar tau = 0.1;\r\nvar ksmax = 10;\r\n//============================ REMEMBER TO ADD NO OVERLAP SETTING ==========================\r\nexport function forceAtlasLinLog3D(vertices,edges, graph_distancex, graph_distancey, iterations, settings ){\r\n\r\n  // Algorithm constants\r\n  const kIter = iterations;\r\n  const W = graph_distancex -6;\r\n  const L = graph_distancey -6;\r\n  // console.log(settings);\r\n  kr = settings.fr;\r\n  kg = settings.kg;\r\n  tau = settings.tau;\r\n  ksmax = settings.ksmax;\r\n\r\n\r\n  //set up loop variables\r\n  // console.log(degreeArray);\r\n  let t = 1;\r\n  let animations = [];\r\n  let scaling_factor = [];\r\n  let temperature = (1/10)*W;\r\n\r\n\r\n  let previous_forces = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    previous_forces.push(new Force(0,0,0));\r\n  }\r\n  //calculate forces\r\n  while(t< kIter){\r\n    let force_list = [];\r\n\r\n    //calculate repulsive forces\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      let f = new Force(0,0,0);\r\n      // if(t === 1)console.log(\"vertex\", i)\r\n      for(let j = 0; j < vertices.length; j ++){\r\n        if(i!== j){\r\n\r\n          const repulse_force = frepulse(vertices[i], vertices[j]);\r\n          f.addVector(repulse_force);\r\n        }\r\n      }\r\n      force_list.push(f);\r\n    }\r\n\r\n    //calculate attractive forces\r\n    for(let i = 0; i < edges.length; i ++){\r\n      const e = edges[i];\r\n      const attractive_force = fattract(vertices[e.start], vertices[e.end]);\r\n      const attractive_force_opp = [-attractive_force[0], -attractive_force[1], -attractive_force[2]];\r\n      force_list[e.start].addVector(attractive_force);\r\n      force_list[e.end].addVector(attractive_force_opp);\r\n    }\r\n\r\n\r\n    // calculate forces of gravity\r\n    if(settings.gravity === true){\r\n      // console.log(settings.gravity);\r\n      const center = (t === 1)? [W/2, L/2, L/2]: [(W/2) * 1/(scaling_factor[t-2][3]),(L/2) * 1/(scaling_factor[t-2][4]), (L/2) * 1/(scaling_factor[t-2][5])];\r\n      const center_force = new Force(center[0], center[1], center[2]);\r\n\r\n      for(let i = 0; i < vertices.length; i ++){\r\n        const gravity_force = fgravity(vertices[i], center_force);\r\n        // if(t === 1) console.log(gravity_force);\r\n        force_list[i].addVector(gravity_force)\r\n      }\r\n    }\r\n\r\n    //update positions\r\n    const iter_animations = [];\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var minZ = Infinity;\r\n    var maxX = 0;\r\n    var maxY = 0;\r\n    var maxZ = 0;\r\n    var maxForce = 0;\r\n\r\n    //update global speed\r\n    var sG = 0;\r\n    var traG = 0;\r\n    var swgG = 0;\r\n    for(let i = 0; i < force_list.length; i++){\r\n      const origin = new Force(0,0,0);\r\n      const combined_force  = new Force(force_list[i].x + previous_forces[i].x, force_list[i].y + previous_forces[i].y,\r\n                                        force_list[i].z + previous_forces[i].z);\r\n      const traN = distance(combined_force, origin)/2\r\n      traG += (vertices[i].x+1) * traN;\r\n      const direction_force = new Force(force_list[i].x - previous_forces[i].x, force_list[i].y - previous_forces[i].y,\r\n                                        force_list[i].z -previous_forces[i].z);\r\n      const swgN = distance(direction_force, origin);\r\n      swgG += (vertices[i].degree+1)*swgN;\r\n    }\r\n    sG = tau*(traG/swgG);\r\n    // console.log(\"sG\",sG);\r\n\r\n    var sN = 0;\r\n    for(let i = 0; i < vertices.length; i++){\r\n      //find direction of forces\r\n      const origin = new Force(0,0,0);\r\n      const unitvector = unitVector(origin, force_list[i]);\r\n      //calculate temperatures\r\n      const direction_force = new Force(force_list[i].x - previous_forces[i].x, force_list[i].y - previous_forces[i].y,\r\n                                            force_list[i].z - previous_forces[i].z);\r\n      const swgN = distance(direction_force, origin);\r\n      sN = Math.min((ks*sG)/(1+sG*Math.sqrt(swgN)),ksmax/distance(force_list[i], origin));\r\n      // console.log(\"sN\", sN);\r\n      vertices[i].setX(vertices[i].x + sN*force_list[i].x);\r\n      vertices[i].setY(vertices[i].y + sN*force_list[i].y);\r\n      vertices[i].setZ(vertices[i].z + sN*force_list[i].z);\r\n\r\n      //update previous forces\r\n      previous_forces[i] = force_list[i];\r\n\r\n      //constants for scaling factor\r\n      minX = Math.min(minX, vertices[i].x);\r\n      minY = Math.min(minY, vertices[i].y);\r\n      minZ = Math.min(minZ, vertices[i].z);\r\n      maxX = vertices[i].x> maxX? vertices[i].x: maxX;\r\n      maxY = vertices[i].y > maxY? vertices[i].y: maxY;\r\n      maxZ = vertices[i].z > maxZ? vertices[i].z: maxZ;\r\n      //add animations\r\n      iter_animations.push([vertices[i].x, vertices[i].y, vertices[i].z]);\r\n    }\r\n    scaling_factor.push([-minX,-minY, -minZ, W/(-minX+maxX), L/(-minY+maxY), L/(-minZ+maxZ)]);\r\n    animations.push(iter_animations);\r\n    t+=1;\r\n  }\r\n  //Scale all the animations within the frame\r\n  for(let i = 0; i < animations.length; i++){\r\n    for(let j = 0; j < animations[i].length; j ++){\r\n      animations[i][j][0] = (animations[i][j][0] + scaling_factor[i][0])*scaling_factor[i][3];\r\n      animations[i][j][1] = (animations[i][j][1] + scaling_factor[i][1])*scaling_factor[i][4];\r\n      animations[i][j][2] = (animations[i][j][2] + scaling_factor[i][2])*scaling_factor[i][5];\r\n    }\r\n  }\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var minZ = Infinity;\r\n  var maxX = 0;\r\n  var maxY = 0;\r\n  var maxZ = 0;\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    minZ = Math.min(vertices[i].z, minZ);\r\n    maxX = Math.max(vertices[i].x, maxX);\r\n    maxY = Math.max(vertices[i].y, maxY);\r\n    maxZ = Math.max(vertices[i].z, maxZ)\r\n  }\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    vertices[i].x = (vertices[i].x + (-minX)) * (W/(maxX+(-minX)));\r\n    vertices[i].y = (vertices[i].y + (-minY)) * (L/(maxY + (-minY)));\r\n    vertices[i].z = (vertices[i].z + (-minZ)) * (L/(maxZ + (-minZ)));\r\n  }\r\n\r\n  return [vertices, animations];\r\n  //Algorithm\r\n}\r\n\r\nfunction frepulse(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(y,x);\r\n  return [unitvector[0]*kr*(((x.degree+1)*(y.degree+1))/dist),\r\n            unitvector[1]*kr*(((x.degree+1)*(y.degree+1))/dist),\r\n            unitvector[2]*kr*(((x.degree+1)*(y.degree+1))/dist)];\r\n\r\n}\r\n\r\nfunction fattract(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(x,y);\r\n  return [unitvector[0] *Math.log(1+dist), unitvector[1]*Math.log(1+dist),\r\n                                        unitvector[2]*Math.log(1+dist)];\r\n}\r\n\r\nfunction fattractDissuade(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(x,y);\r\n  return [unitvector[0]*Math.log(1+dist)/(x.degree+1), unitvector[1]*Math.log(1+dist)/(x.degree+1),\r\n              unitvector[2]*Math.log(1+dist)/(x.degree+1)]\r\n}\r\n\r\n\r\n\r\nfunction fgravity(v, center){\r\n  var dist_center = distance(v,center);\r\n  var unitvector = unitVector(v,center);\r\n  return [unitvector[0]*kg*(v.degree+1)*dist_center, unitvector[1]*kg*(v.degree+1)*dist_center,\r\n                unitvector[2]*kg*(v.degree+1)*dist_center];\r\n}\r\n\r\nfunction distance(v1,v2){\r\n  var dist = Math.pow(v1.x-v2.x,2) + Math.pow((v1.y-v2.y),2) + Math.pow(v1.z-v2.z,2)\r\n  if(dist === 0) dist = 0.00000000000000000001\r\n  return  Math.sqrt(dist);\r\n}\r\n\r\n/**\r\n* UnitVector from X to Y\r\n*/\r\nfunction unitVector(v1,v2){\r\n  const new_x = v2.x - v1.x;\r\n  const new_y = v2.y - v1.y;\r\n  const new_z = v2.z - v1.z;\r\n  var dist = distance(v1,v2);\r\n  return [new_x/dist, new_y/dist, new_z/dist];\r\n}\r\n","import Force from \"../datatypes/Force\"\r\nvar ka = 1;\r\nvar kr = 1;\r\nvar kg = 10;\r\nvar ks = 0.1;\r\nvar tau = 0.1;\r\nvar ksmax = 10;\r\n//============================ REMEMBER TO ADD NO OVERLAP SETTING ==========================\r\nexport function forceAtlas23D(vertices,edges, graph_distancex, graph_distancey, iterations, settings ){\r\n\r\n  // Algorithm constants\r\n  const kIter = iterations;\r\n  const W = graph_distancex -6;\r\n  const L = graph_distancey -6;\r\n  // console.log(settings);\r\n  kr = settings.fr;\r\n  kg = settings.kg;\r\n  tau = settings.tau;\r\n  ksmax = settings.ksmax;\r\n\r\n\r\n  //set up loop variables\r\n  // console.log(degreeArray);\r\n  let t = 1;\r\n  let animations = [];\r\n  let scaling_factor = [];\r\n  let temperature = (1/10)*W;\r\n\r\n\r\n  let previous_forces = [];\r\n  for(let i = 0; i < vertices.length; i++){\r\n    previous_forces.push(new Force(0,0,0));\r\n  }\r\n  //calculate forces\r\n  while(t< kIter){\r\n    let force_list = [];\r\n\r\n    //calculate repulsive forces\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      let f = new Force(0,0,0);\r\n      // if(t === 1)console.log(\"vertex\", i)\r\n      for(let j = 0; j < vertices.length; j ++){\r\n        if(i!== j){\r\n\r\n          const repulse_force = frepulse(vertices[i], vertices[j]);\r\n          f.addVector(repulse_force);\r\n        }\r\n      }\r\n      force_list.push(f);\r\n    }\r\n\r\n    //calculate attractive forces\r\n    for(let i = 0; i < edges.length; i ++){\r\n      const e = edges[i];\r\n      const attractive_force = fattract(vertices[e.start], vertices[e.end]);\r\n      const attractive_force_opp = [-attractive_force[0], -attractive_force[1], -attractive_force[2]];\r\n      force_list[e.start].addVector(attractive_force);\r\n      force_list[e.end].addVector(attractive_force_opp);\r\n    }\r\n\r\n\r\n    // calculate forces of gravity\r\n    if(settings.gravity === true){\r\n      const center = (t === 1)? [W/2, L/2, L/2]: [(W/2) * 1/(scaling_factor[t-2][3]),(L/2) * 1/(scaling_factor[t-2][4]), (L/2) * 1/(scaling_factor[t-2][5])];\r\n      const center_force = new Force(center[0], center[1], center[2]);\r\n\r\n      for(let i = 0; i < vertices.length; i ++){\r\n        const gravity_force = fgravity(vertices[i], center_force);\r\n        force_list[i].addVector(gravity_force)\r\n      }\r\n    }\r\n\r\n    //update positions\r\n    const iter_animations = [];\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var minZ = Infinity;\r\n    var maxX = 0;\r\n    var maxY = 0;\r\n    var maxZ = 0;\r\n    var maxForce = 0;\r\n\r\n    //update global speed\r\n    var sG = 0;\r\n    var traG = 0;\r\n    var swgG = 0;\r\n    for(let i = 0; i < force_list.length; i++){\r\n      const origin = new Force(0,0,0);\r\n      const combined_force  = new Force(force_list[i].x + previous_forces[i].x, force_list[i].y + previous_forces[i].y,\r\n                                        force_list[i].z + previous_forces[i].z);\r\n      const traN = distance(combined_force, origin)/2\r\n      traG += (vertices[i].x+1) * traN;\r\n      const direction_force = new Force(force_list[i].x - previous_forces[i].x, force_list[i].y - previous_forces[i].y,\r\n                                        force_list[i].z -previous_forces[i].z);\r\n      const swgN = distance(direction_force, origin);\r\n      swgG += (vertices[i].degree+1)*swgN;\r\n    }\r\n    sG = tau*(traG/swgG);\r\n    // console.log(\"sG\",sG);\r\n\r\n    var sN = 0;\r\n    for(let i = 0; i < vertices.length; i++){\r\n      //find direction of forces\r\n      const origin = new Force(0,0,0);\r\n      const unitvector = unitVector(origin, force_list[i]);\r\n      //calculate temperatures\r\n      const direction_force = new Force(force_list[i].x - previous_forces[i].x, force_list[i].y - previous_forces[i].y,\r\n                                            force_list[i].z - previous_forces[i].z);\r\n      const swgN = distance(direction_force, origin);\r\n      sN = Math.min((ks*sG)/(1+sG*Math.sqrt(swgN)),ksmax/distance(force_list[i], origin));\r\n      // console.log(\"sN\", sN);\r\n      vertices[i].setX(vertices[i].x + sN*force_list[i].x);\r\n      vertices[i].setY(vertices[i].y + sN*force_list[i].y);\r\n      vertices[i].setZ(vertices[i].z + sN*force_list[i].z);\r\n\r\n      //update previous forces\r\n      previous_forces[i] = force_list[i];\r\n\r\n      //constants for scaling factor\r\n      minX = Math.min(minX, vertices[i].x);\r\n      minY = Math.min(minY, vertices[i].y);\r\n      minZ = Math.min(minZ, vertices[i].z);\r\n      maxX = vertices[i].x> maxX? vertices[i].x: maxX;\r\n      maxY = vertices[i].y > maxY? vertices[i].y: maxY;\r\n      maxZ = vertices[i].z > maxZ? vertices[i].z: maxZ;\r\n      //add animations\r\n      iter_animations.push([vertices[i].x, vertices[i].y, vertices[i].z]);\r\n    }\r\n    scaling_factor.push([-minX,-minY, -minZ, W/(-minX+maxX), L/(-minY+maxY), L/(-minZ+maxZ)]);\r\n    animations.push(iter_animations);\r\n    t+=1;\r\n  }\r\n  //Scale all the animations within the frame\r\n  for(let i = 0; i < animations.length; i++){\r\n    for(let j = 0; j < animations[i].length; j ++){\r\n      animations[i][j][0] = (animations[i][j][0] + scaling_factor[i][0])*scaling_factor[i][3];\r\n      animations[i][j][1] = (animations[i][j][1] + scaling_factor[i][1])*scaling_factor[i][4];\r\n      animations[i][j][2] = (animations[i][j][2] + scaling_factor[i][2])*scaling_factor[i][5];\r\n    }\r\n  }\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var minZ = Infinity;\r\n  var maxX = 0;\r\n  var maxY = 0;\r\n  var maxZ = 0;\r\n  for(let i = 0; i < vertices.length; i ++){\r\n    minX = Math.min(vertices[i].x, minX);\r\n    minY = Math.min(vertices[i].y, minY);\r\n    minZ = Math.min(vertices[i].z, minZ);\r\n    maxX = Math.max(vertices[i].x, maxX);\r\n    maxY = Math.max(vertices[i].y, maxY);\r\n    maxZ = Math.max(vertices[i].z, maxZ)\r\n  }\r\n  for(let i = 0; i <vertices.length; i ++){\r\n    vertices[i].x = (vertices[i].x + (-minX)) * (W/(maxX+(-minX)));\r\n    vertices[i].y = (vertices[i].y + (-minY)) * (L/(maxY + (-minY)));\r\n    vertices[i].z = (vertices[i].z + (-minZ)) * (L/(maxZ + (-minZ)));\r\n  }\r\n\r\n  return [vertices, animations];\r\n  //Algorithm\r\n}\r\n\r\nfunction frepulse(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(y,x);\r\n  return [unitvector[0]*kr*(((x.degree+1)*(y.degree+1))/dist),\r\n            unitvector[1]*kr*(((x.degree+1)*(y.degree+1))/dist),\r\n            unitvector[2]*kr*(((x.degree+1)*(y.degree+1))/dist)];\r\n\r\n}\r\n\r\nfunction fattract(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(x,y);\r\n  return [unitvector[0] *dist, unitvector[1]*dist,\r\n                                        unitvector[2]*dist];\r\n}\r\n\r\nfunction fattractDissuade(x,y){\r\n  var dist = distance(x,y);\r\n  const unitvector = unitVector(x,y);\r\n  return [unitvector[0]*dist/(x.degree+1), unitvector[1]*dist/(x.degree+1),\r\n              unitvector[2]*dist/(x.degree+1)]\r\n}\r\n\r\n\r\n\r\nfunction fgravity(v, center){\r\n  var dist_center = distance(v,center);\r\n  var unitvector = unitVector(v,center);\r\n  return [unitvector[0]*kg*(v.degree+1)*dist_center, unitvector[1]*kg*(v.degree+1)*dist_center,\r\n                unitvector[2]*kg*(v.degree+1)*dist_center];\r\n}\r\n\r\nfunction distance(v1,v2){\r\n  var dist = Math.pow(v1.x-v2.x,2) + Math.pow((v1.y-v2.y),2) + Math.pow(v1.z-v2.z,2)\r\n  if(dist === 0) dist = 0.00000000000000000001\r\n  return  Math.sqrt(dist);\r\n}\r\n\r\n/**\r\n* UnitVector from X to Y\r\n*/\r\nfunction unitVector(v1,v2){\r\n  const new_x = v2.x - v1.x;\r\n  const new_y = v2.y - v1.y;\r\n  const new_z = v2.z - v1.z;\r\n  var dist = distance(v1,v2);\r\n  return [new_x/dist, new_y/dist, new_z/dist];\r\n}\r\n","import React from \"react\";\r\nimport Vertex from \"./datatypes/Vertex\";\r\nimport Edge from \"./datatypes/Edge\";\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport {createRandomNetwork3D} from \"./networkgeneration/createRandomNetwork3D\";\r\nimport {fruchtermanReingold3D} from \"./NetworkAlgorithms/FruchtermanReingold3D\";\r\nimport {springEmbedding3D} from \"./NetworkAlgorithms/springEmbedding3D\";\r\nimport {forceAtlasLinLog3D} from \"./NetworkAlgorithms/forceAtlasLinLog-3D\";\r\nimport {forceAtlas23D} from \"./NetworkAlgorithms/forceAtlas2-3D\";\r\nimport {kruskal} from \"./MSTAlgorithms/kruskal\";\r\nimport {prim} from \"./MSTAlgorithms/prims\";\r\nimport {opt2} from \"./TSP/opt2\";\r\nimport {opt2Annealing} from \"./TSP/opt2Annealing\";\r\nimport {opt3} from \"./TSP/opt3\";\r\nimport {GreedyColoring} from \"./Coloring/GreedyColoring\";\r\nimport {misraGries} from \"./Coloring/misraGries\";\r\nimport {spectralDrawing} from \"./Spectral/spectralDrawing\";\r\n\r\nimport \"./Network3D.css\";\r\n\r\nvar MAX_TIMEOUT = 30; //seconds\r\n\r\nasync function waitAnimateNetwork(that,startIndex, endIndex, animations,func){\r\n  if(animations !== null) await that.setState({currentAnimations: animations});\r\n  await that.setState({currentAnimationIndex: startIndex, animationIndex: endIndex, paused: false});\r\n  // console.log(\"start\",startIndex,\"end\", endIndex,\"animations\", animations);\r\n  if(that.state.group === \"layout\") that.animateNetwork();\r\n  if(that.state.group === \"coloring\") that.animateColoring();\r\n  if(that.state.group === \"TSP\") that.animateTSP()\r\n  // if(that.state.group === \"coloring\") continue;\r\n  // if(that.state.group === \"TSP\") continue;\r\n}\r\n\r\nclass NetworkVisualizer3D extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      height: 0,\r\n      width: 0,\r\n      depth: 0,\r\n      scene : null,\r\n      camera : null,\r\n      renderer: null,\r\n      vertices: [],\r\n      edges: [],\r\n      spheres : [],\r\n      lines: [],\r\n      algoType: \"spring\",\r\n      randomType: \"random\",\r\n      iterations: 100,\r\n      maxtimeouts: 0,\r\n      dragging: false,\r\n      previousMouseX : 0,\r\n      previousMouseY: 0,\r\n      algoType: \"spring\",\r\n      randomType: \"random\",\r\n      TSP: false,\r\n      cameraChanged: false,\r\n      currentAnimations: [],\r\n      currentAnimationIndex: 0,\r\n      animationIndex: 0,\r\n      paused: true,\r\n      group: \"layout\",\r\n    }\r\n    this.app = this.props.app;\r\n    this.canvas = React.createRef();\r\n  }\r\n\r\n  componentDidMount(){\r\n    const w = window.innerHeight*0.55;\r\n    const h = window.innerHeight*0.55;\r\n    const d = window.innerHeight*0.55; //depth === 'z'- axis\r\n    this.canvas.current.height = h;\r\n    this.canvas.current.width = w;\r\n\r\n    var renderer = new THREE.WebGLRenderer({canvas: this.canvas.current, alpha:true});\r\n    renderer.setSize(w, h);\r\n    var scene = new THREE.Scene();\r\n    var camera = new THREE.PerspectiveCamera(75, w/h, 0.1, 1000);\r\n    var pointLight = new THREE.PointLight( 0xffffff , 1);\r\n    pointLight.position.set(1,1,2);\r\n    camera.add(pointLight)\r\n    camera.position.z = 1.7*d;\r\n    camera.position.x = w/2;\r\n    camera.position.y = h/2;\r\n    scene.add(camera);\r\n    renderer.render(scene, camera);\r\n\r\n    const [vertices,edges] = createRandomNetwork3D(w, h,d, this.app.state.numV,\r\n      this.app.state.numE, this.app.state.connected, this.state.randomType,\r\n      [this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue],\r\n      [this.app.state.endRed, this.app.state.endGreen, this.app.state.endBlue],\r\n      this.app.state.degreesize, this.app.state.minsize, this.app.state.maxsize);\r\n\r\n    const spheres = [];\r\n    //displaying initial_vertices\r\n    for(let i = 0; i< vertices.length; i++){\r\n      const color = vertices[i].color;\r\n\r\n      //make a sphere\r\n      var geometry = new THREE.SphereGeometry(vertices[i].size,8,8);\r\n      var material = new THREE.MeshLambertMaterial(new THREE.Color(vertices[i].color));\r\n      var sphere = new THREE.Mesh(geometry, material);\r\n      const v = vertices[i]\r\n      sphere.position.set(v.x, v.y, v.z);\r\n      spheres.push(sphere);\r\n      scene.add(sphere);\r\n    }\r\n\r\n    const lines = [];\r\n    //displaying intial edges\r\n    for(let j = 0; j < edges.length; j++){\r\n        var material = new THREE.LineBasicMaterial({color : 0xa9a9a9});\r\n        material.opacity = 0.1;\r\n        var points = [];\r\n        const e = edges[j];\r\n        const v = vertices;\r\n        points.push(spheres[e.start].position);\r\n        points.push(spheres[e.end].position);\r\n        var geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n\r\n\r\n        var line = new THREE.Line(geometry, material);\r\n        scene.add(line);\r\n        lines.push(line);\r\n    }\r\n\r\n    renderer.render(scene, camera);\r\n\r\n\r\n    this.setState({\r\n      width: w,\r\n      height: h,\r\n      depth: d,\r\n      scene: scene,\r\n      camera: camera,\r\n      renderer: renderer,\r\n      vertices: vertices,\r\n      edges: edges,\r\n      spheres: spheres,\r\n      lines: lines,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount(){\r\n      var id = this.state.maxtimeouts;\r\n      while(id){\r\n        clearInterval(id);\r\n        id --;\r\n      }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    for(let i = 0; i< this.state.vertices.length; i++){\r\n      const v = this.state.vertices[i];\r\n      this.state.spheres[i].position.set(v.x, v.y, v.z);\r\n      // this.state.spheres[i].\r\n      this.state.spheres[i].material.color = new THREE.Color(this.state.vertices[i].color)\r\n    }\r\n\r\n\r\n    for(let j = 0; j< this.state.edges.length; j++){\r\n      const e = this.state.edges[j];\r\n      const v = this.state.vertices;\r\n\r\n      var pos = this.state.lines[j].geometry.attributes.position.array;\r\n      pos[0] = v[e.start].x;\r\n      pos[1] = v[e.start].y;\r\n      pos[2] = v[e.start].z;\r\n      pos[3] = v[e.end].x;\r\n      pos[4] = v[e.end].y;\r\n      pos[5] = v[e.end].z;\r\n      this.state.lines[j].geometry.attributes.position.needsUpdate = true;\r\n      this.state.lines[j].material.color = new THREE.Color(this.state.edges[j].color);\r\n    }\r\n\r\n    this.state.renderer.render(this.state.scene, this.state.camera);\r\n  }\r\n\r\n  generateForceDirectedLayout(){\r\n    const values = springEmbedding3D(this.state.vertices, this.state.edges,\r\n        this.state.width, this.state.height, this.state.iterations, this.app.state.settings.spring);\r\n    const final_vertices = values[0];\r\n    const animations = values[1];\r\n    // console.log(animations);\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateReingold(){\r\n    const values = fruchtermanReingold3D(this.state.vertices, this.state.edges, this.state.width,\r\n        this.state.height, this.state.iterations, this.app.state.settings.fruchterman);\r\n\r\n    const final_vertices = values[0];\r\n    const animations = values[1];\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateKamadaKawai(){\r\n\r\n  }\r\n\r\n  generateForceAtlas2(){\r\n    const [final_vertices, animations] = forceAtlas23D(this.state.vertices, this.state.edges,\r\n                this.state.width, this.state.height, this.state.iterations, this.app.state.settings.forceatlas2)\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateForceAtlasLinLog(){\r\n    const values = forceAtlasLinLog3D(this.state.vertices, this.state.edges,\r\n                this.state.width, this.state.height, this.state.iterations, this.app.state.settings.forceatlaslinlog);\r\n    const animations = values[1];\r\n    // console.log(animations);\r\n    const final_vertices = values[0];\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateHall(){\r\n\r\n  }\r\n\r\n  generateSpectralDrawing(){\r\n    const [eigenvectors, animations] = spectralDrawing(this.state.vertices,\r\n      this.state.edges,this.state.width, this.state.height, this.app.state.dimension);\r\n      waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateRadialFlowDirected(){\r\n\r\n  }\r\n\r\n  generateKruskal(){\r\n    const [animations, sorted_edges] = kruskal(this.state.vertices, this.state.edges, 3,\r\n      [this.app.state.settings.kruskal.red, this.app.state.settings.kruskal.green,\r\n        this.app.state.settings.kruskal.blue]);\r\n    const that = this;\r\n    waitSetEdges(that, sorted_edges, animations);\r\n  }\r\n\r\n  generatePrim(){\r\n    const animations = prim(this.state.vertices, this.state.edges, 3,\r\n      [this.app.state.settings.prim.red, this.app.state.settings.prim.green,\r\n      this.app.state.settings.prim.blue]);\r\n    waitAnimateNetwork(this,0,animations.length,animations);\r\n  }\r\n\r\n  generate2Opt(){\r\n    const animations = [];\r\n    this.app.setState({running:true});\r\n    const selected_color = [this.app.state.settings.opt2.red, this.app.state.settings.opt2.green,\r\n                      this.app.state.settings.opt2.blue];\r\n    var edges = this.state.edges;\r\n    var better_solution = false;\r\n    for(let i = 0; i < (this.app.state.settings.opt2.timeout*1000)/this.app.state.animationSpeed; i++){\r\n      [edges, better_solution]= opt2(this.state.vertices,\r\n        edges, this.app.state.dimension, selected_color);\r\n      animations.push(edges);\r\n    }\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generate2OptAnnealing(){\r\n    const animations = [];\r\n    this.app.setState({running:true});\r\n    var current_temperature = this.app.state.settings.opt2annealing.temperature;\r\n    const max_temperature = current_temperature;\r\n    var temp = current_temperature;\r\n    for(let i = 0; i < (this.app.state.settings.opt2annealing.timeout*1000)/this.app.state.animationSpeed; i++){\r\n      temp = 0.992*temp;\r\n    }\r\n    var min_temperature = temp;\r\n    // console.log(\"max\", max_temperature, \"min\", min_temperature);\r\n\r\n    var edges = this.state.edges;\r\n    var better_solution = false;\r\n    for(let i = 0; i < (this.app.state.settings.opt2annealing.timeout*1000)/this.app.state.animationSpeed; i++){\r\n      [edges, better_solution] = opt2Annealing(this.state.vertices,\r\n          edges, this.app.state.dimension, this.app.state.settings.opt2annealing.startColor,\r\n          this.app.state.settings.opt2annealing.endColor, current_temperature,\r\n          min_temperature, max_temperature,\r\n          this.app.state.settings.opt2annealing.acceptance);\r\n      animations.push(edges);\r\n      current_temperature = 0.992*current_temperature;\r\n    }\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generate3Opt(){\r\n    const animations = [];\r\n    this.app.setState({running:true});\r\n    const selected_color = [this.app.state.settings.opt3.red, this.app.state.settings.opt3.green,\r\n                      this.app.state.settings.opt3.blue];\r\n    var edges = this.state.edges;\r\n    var better_solution = false;\r\n    for(let i = 0; i < (this.app.state.settings.opt3.timeout*1000)/this.app.state.animationSpeed; i++){\r\n      [edges, better_solution]= opt3(this.state.vertices,\r\n        edges, this.app.state.dimension, selected_color);\r\n      animations.push(edges);\r\n    }\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  generateGreedyVertex(){\r\n    const [vertices, animations] = GreedyColoring(this.state.vertices, this.state.edges, this.app.state.dimension, [255,255,0], [0,0,255])\r\n    waitAnimateNetwork(this,0,animations.length,animations);\r\n  }\r\n\r\n  generateMisraGries(){\r\n    // console.log(\"generate misra gries\");\r\n    const animations = misraGries(this.state.vertices, this.state.edges, [255,0,0], [0,255,0]);\r\n    waitAnimateNetwork(this, 0, animations.length, animations);\r\n  }\r\n\r\n  runAlgorithm(){\r\n    if(this.app.state.running === false){\r\n      if(this.state.algoType === \"spring\") this.generateForceDirectedLayout();\r\n      if(this.state.algoType === \"fruchtermanReingold\") this.generateReingold();\r\n      if(this.state.algoType === \"kamadaKawai\") this.generateKamadaKawai();\r\n      if(this.state.algoType === \"forceAtlas2\") this.generateForceAtlas2();\r\n      if(this.state.algoType === \"forceatlaslinlog\") this.generateForceAtlasLinLog();\r\n      if(this.state.algoType === \"hall\") this.generateHall();\r\n      if(this.state.algoType === \"spectralDrawing\") this.generateSpectralDrawing();\r\n      if(this.state.algoType === \"radialFlowDirected\") this.generateRadialFlowDirected();\r\n      if(this.state.algoType === \"kruskal\") this.generateKruskal();\r\n      if(this.state.algoType === \"prim\") this.generatePrim();\r\n      if(this.state.algoType === \"2opt\") this.generate2Opt();\r\n      if(this.state.algoType === \"2optannealing\") this.generate2OptAnnealing();\r\n      if(this.state.algoType === \"3opt\") this.generate3Opt();\r\n      if(this.state.algoType === \"greedyvertex\") this.generateGreedyVertex();\r\n      if(this.state.algoType === \"misra\") this.generateMisraGries();\r\n    }\r\n    else{\r\n      waitAnimateNetwork(this, this.state.currentAnimationIndex, this.state.currentAnimations.length-1, null);\r\n    }\r\n\r\n  }\r\n\r\n  animateNetwork(){\r\n    let x = 0;\r\n    this.app.setState({running:true});\r\n    const start = this.state.currentAnimationIndex;\r\n    const end = this.state.animationIndex;\r\n    for(let k = start; k < end; k++){\r\n\r\n      x = setTimeout(() => {\r\n        const vertices = this.state.vertices;\r\n        for(let i = 0; i <vertices.length; i++){\r\n          vertices[i].setVector(this.state.currentAnimations[k][i]);\r\n        }\r\n        this.setState({vertices: vertices, currentAnimationIndex: this.state.currentAnimationIndex+1});\r\n        if(k === end-1) this.setState({paused: true, currentAnimationIndex: end});\r\n        // console.log(\"animating\")\r\n      }, (k-start) * this.app.state.animationSpeed)\r\n    }\r\n    this.setState({maxtimeouts: x});\r\n  }\r\n\r\n  animateColoring(){\r\n    let x = 0;\r\n    this.app.setState({running:true});\r\n    // console.log(\"animating\");\r\n    const start = this.state.currentAnimationIndex;\r\n    const end = this.state.animationIndex;\r\n\r\n    for(let k =start; k < end; k++){\r\n      x = setTimeout(() => {\r\n        const vertices = this.state.vertices;\r\n        const edges= this.state.edges;\r\n        const animations = this.state.currentAnimations;\r\n\r\n        this.setState({vertices: animations[k].vertices, edges:animations[k].edges, currentAnimationIndex: this.state.currentAnimationIndex + 1});\r\n        // console.log(\"animating\")\r\n        if(k === end-1){\r\n          // console.log(\"pausing\")\r\n          this.setState({paused: true,currentAnimationIndex: end});\r\n\r\n          // console.log(final_vertices);\r\n        }\r\n      }, (k-start) * this.app.state.animationSpeed)\r\n    }\r\n    this.setState({maxtimeouts: x});\r\n  }\r\n\r\n  animateTSP(func){\r\n    let x = 0;\r\n    this.app.setState({running:true});\r\n    // console.log(this.app.state.running)\r\n    const start = this.state.currentAnimationIndex;\r\n    const end = this.state.animationIndex;\r\n    for(let k =start; k < end; k++){\r\n      x = setTimeout(() => {\r\n        const vertices = this.state.vertices;\r\n        const edges= this.state.edges;\r\n        const animations = this.state.currentAnimations;\r\n\r\n        this.setState({edges: animations[k], currentAnimationIndex: this.state.currentAnimationIndex + 1});\r\n        // console.log(\"animating\")\r\n        if(k === end-1){\r\n          // console.log(\"pausing\")\r\n          this.setState({paused: true,currentAnimationIndex: end});\r\n\r\n          // console.log(final_vertices);\r\n        }\r\n      }, (k-start) * this.app.state.animationSpeed)\r\n    }\r\n\r\n    this.setState({maxtimeouts: x});\r\n  }\r\n\r\n  resetNetwork(){\r\n    var renderer = new THREE.WebGLRenderer({canvas: this.canvas.current, alpha:true});\r\n    renderer.setSize(this.state.width, this.state.height);\r\n    var scene = new THREE.Scene();\r\n    var camera = new THREE.PerspectiveCamera(75, this.state.width/this.state.height, 0.1, 1000);\r\n    var pointLight = new THREE.PointLight( 0xffffff , 1);\r\n    pointLight.position.set(1,1,2);\r\n    camera.add(pointLight)\r\n    camera.position.z = 1.7*this.state.depth;\r\n    camera.position.x = this.state.width/2;\r\n    camera.position.y = this.state.height/2;\r\n    scene.add(camera);\r\n    renderer.render(scene, camera);\r\n\r\n    const [vertices,edges] = createRandomNetwork3D(this.state.width,this.state.height,\r\n      this.state.depth, this.app.state.numV, this.app.state.numE, this.app.state.connected,\r\n            this.state.randomType,\r\n            [this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue],\r\n            [this.app.state.endRed, this.app.state.endGreen, this.app.state.endBlue],\r\n            this.app.state.degreesize, this.app.state.minsize, this.app.state.maxsize);\r\n    const spheres = [];\r\n    //displaying initial_vertices\r\n    for(let i = 0; i< vertices.length; i++){\r\n      const color = vertices[i].color;\r\n\r\n      //make a sphere\r\n      var geometry = new THREE.SphereGeometry(vertices[i].size,8,8);\r\n      var material = new THREE.MeshLambertMaterial(new THREE.Color(vertices[i].color));\r\n      var sphere = new THREE.Mesh(geometry, material);\r\n      const v = vertices[i]\r\n      sphere.position.set(v.x, v.y, v.z);\r\n      spheres.push(sphere);\r\n      scene.add(sphere);\r\n    }\r\n\r\n    const lines = [];\r\n    //displaying intial edges\r\n    for(let j = 0; j < edges.length; j++){\r\n        var material = new THREE.LineBasicMaterial({color : 0xa9a9a9});\r\n        material.opacity = 0.1;\r\n        var points = [];\r\n        const e = edges[j];\r\n        const v = vertices;\r\n        points.push(spheres[e.start].position);\r\n        points.push(spheres[e.end].position);\r\n        var geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n\r\n\r\n        var line = new THREE.Line(geometry, material);\r\n        scene.add(line);\r\n        lines.push(line);\r\n    }\r\n    renderer.render(scene,camera);\r\n\r\n    this.setState({\r\n      vertices: vertices,\r\n      edges: edges,\r\n      scene: scene,\r\n      camera: camera,\r\n      renderer: renderer,\r\n      spheres: spheres,\r\n      lines: lines,\r\n    })\r\n\r\n    this.app.setState({numV: vertices.length, numE: edges.length});\r\n  }\r\n\r\n  zoomCamera(e){\r\n    const delta = Math.sign(e.deltaY);\r\n    this.state.camera.position.z += 10*delta;\r\n    this.state.renderer.render(this.state.scene, this.state.camera);\r\n    if(this.state.cameraChanged === false) this.setState({cameraChanged: true})\r\n  }\r\n\r\n  resetCamera(){\r\n    this.state.camera.position.z = this.state.depth * 1.7;\r\n    this.state.camera.position.x = this.state.width/2;\r\n    this.state.camera.position.y = this.state.height/2;\r\n    this.state.renderer.render(this.state.scene, this.state.camera);\r\n    this.setState({cameraChanged:false})\r\n  }\r\n\r\n  startDrag(e){\r\n    e.preventDefault();\r\n    this.state.previousMouseX = e.clientX;\r\n    this.state.previousMouseY = e.clientY;\r\n    this.state.dragging = true;\r\n  }\r\n\r\n  endDrag(e){\r\n    e.preventDefault();\r\n    this.state.dragging = false;\r\n  }\r\n\r\n  rotateCamera(e){\r\n    if(this.state.dragging){\r\n      const deltaX = e.clientX - this.state.previousMouseX;\r\n      const deltaY = e.clientY - this.state.previousMouseY;\r\n      this.state.previousMouseX = e.clientX;\r\n      this.state.previousMouseY = e.clientY;\r\n      this.state.camera.position.y += deltaY\r\n      this.state.camera.position.x += -deltaX\r\n      this.state.renderer.render(this.state.scene, this.state.camera);\r\n      if(this.state.cameraChanged === false) this.setState({cameraChanged:true})\r\n    }\r\n  }\r\n\r\n  setAlgoType(v){\r\n    // this.attribute.current.setLayout(v)\r\n    this.setState({algoType: v});\r\n    if(v === \"2opt\" || v === \"3opt\" ||\r\n        v === \"2optannealing\" || v === \"3optannealing\"){\r\n          this.setState({group:\"TSP\"});\r\n          if(this.state.randomType !== \"cycle\") this.setRandomizedType(\"cycle\");\r\n        }\r\n    else if(v === \"spring\" || v === \"fruchterman\" || v === \"forceAtlas2\"\r\n                      || v === \"forceatlaslinlog\" || v === \"spectralDrawing\"\r\n                    || v === \"hall\" || v === \"schwarz\"){\r\n        this.setState({group:\"layout\"});\r\n      }\r\n    else if(v === \"kruskal\" || v === \"prim\" || v === \"greedyvertex\" ||\r\n                                        v === \"misra\"){\r\n        this.setState({group:\"coloring\"});\r\n    }\r\n  }\r\n\r\n  setRandomizedType(v){\r\n    const that = this;\r\n    waitSetRandomizedType(that, v);\r\n  }\r\n\r\n  clearAnimations(){\r\n    var id = this.state.maxtimeouts;\r\n    while(id){\r\n      clearInterval(id);\r\n      id --;\r\n    }\r\n  }\r\n\r\n  cancelAnimation(){\r\n    this.setState({currentAnimations: [], paused: true});\r\n    this.clearAnimations();\r\n    this.app.setState({running: false});\r\n  }\r\n\r\n  pauseAnimation(){\r\n    this.setState({paused:true});\r\n    this.clearAnimations();\r\n    // console.log(this.state.currentAnimationIndex);\r\n  }\r\n\r\n  resetColoring(){\r\n    const shouldRecolor = !(sameColor([this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue],\r\n                              [this.app.state.endRed, this.app.state.endGreen, this.app.state.endBlue]));\r\n    if(shouldRecolor === true){\r\n      const new_vertices = this.state.vertices.slice();\r\n      const max_degree = find_max_degree(this.state.vertices);\r\n      var gradient = createColorGradient([this.app.state.startRed, this.app.state.startGreen,\r\n                                          this.app.state.startBlue], [this.app.state.endRed,\r\n                                          this.app.state.endGreen, this.app.state.endBlue], max_degree);\r\n      for(let i = 0; i < new_vertices.length; i++){\r\n        new_vertices[i].color = assign_color(new_vertices[i].degree, max_degree, gradient);\r\n      }\r\n      const new_edges = [];\r\n      for(let j = 0; j < this.state.edges.length; j++){\r\n        const e = new Edge(this.state.edges[j].start, this.state.edges[j].end);\r\n        e.setColor(\"rgb(211,211,211)\");\r\n        new_edges.push(e);\r\n      }\r\n      this.setState({vertices: new_vertices, edges: new_edges});\r\n    }\r\n    else{\r\n      const new_vertices = this.state.vertices.slice();\r\n      const color = rgb_to_str([this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue]);\r\n      for(let i = 0; i < new_vertices.length; i ++){\r\n        new_vertices[i].color = color;\r\n      }\r\n      const new_edges = [];\r\n      for(let j = 0; j < this.state.edges.length; j++){\r\n        const e = new Edge(this.state.edges[j].start, this.state.edges[j].end);\r\n        e.setColor(\"rgb(211,211,211)\");\r\n        new_edges.push(e);\r\n      }\r\n      this.setState({vertices: new_vertices, edges: new_edges});\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n  }\r\n\r\n  updateVertexSize(){\r\n    if(this.app.state.degreesize === false){\r\n      const new_size = 5;\r\n      const new_vertices = this.state.vertices.slice();\r\n      for(let i = 0; i < new_vertices.length; i++){\r\n        const old_size = new_vertices[i].size;\r\n        this.state.spheres[i].scale.x = new_size/old_size;\r\n        this.state.spheres[i].scale.y = new_size/old_size;\r\n        this.state.spheres[i].scale.z = new_size/old_size;\r\n      }\r\n      const new_spheres = [];\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n    else{\r\n      const max_degree = find_max_degree(this.state.vertices);\r\n      const new_vertices = this.state.vertices.slice();\r\n      for(let i = 0; i < new_vertices.length; i ++){\r\n        new_vertices[i].size = Math.floor(assign_size(new_vertices[i].degree,\r\n          max_degree, this.app.state.minsize, this.app.state.maxsize)+2);\r\n        this.state.spheres[i].scale.x = new_vertices[i].size/5;\r\n        this.state.spheres[i].scale.y = new_vertices[i].size/5;\r\n        this.state.spheres[i].scale.z = new_vertices[i].size/5;\r\n      }\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n  }\r\n\r\n  updateColoring(){\r\n    const shouldRecolor = !(sameColor([this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue],\r\n                              [this.app.state.endRed, this.app.state.endGreen, this.app.state.endBlue]));\r\n    if(shouldRecolor === true){\r\n      const new_vertices = this.state.vertices.slice();\r\n      const max_degree = find_max_degree(this.state.vertices);\r\n      var gradient = createColorGradient([this.app.state.startRed, this.app.state.startGreen,\r\n                                          this.app.state.startBlue], [this.app.state.endRed,\r\n                                          this.app.state.endGreen, this.app.state.endBlue], max_degree);\r\n      for(let i = 0; i < new_vertices.length; i++){\r\n        new_vertices[i].color = assign_color(new_vertices[i].degree, max_degree, gradient);\r\n      }\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n    else{\r\n      const new_vertices = this.state.vertices.slice();\r\n      const color = rgb_to_str([this.app.state.startRed, this.app.state.startGreen, this.app.state.startBlue]);\r\n      for(let i = 0; i < new_vertices.length; i ++){\r\n        new_vertices[i].color = color;\r\n      }\r\n      this.setState({vertices: new_vertices});\r\n    }\r\n  }\r\n\r\n  skipFrame(){\r\n    this.clearAnimations();\r\n    const animations_index = Math.min(this.state.currentAnimationIndex + 1,\r\n                                      this.state.currentAnimations.length-1);\r\n    waitAnimateNetwork(this, animations_index, animations_index+1, null);\r\n  }\r\n\r\n  rewindFrame(){\r\n    this.clearAnimations();\r\n    const animations_index = Math.max(this.state.currentAnimationIndex -2, 0);\r\n    waitAnimateNetwork(this, animations_index, animations_index+1, null);\r\n  }\r\n\r\n  skipForward(){\r\n    this.clearAnimations();\r\n    const animations_index = Math.min(this.state.currentAnimations.length-1,\r\n        this.state.currentAnimationIndex + Math.floor(1000/this.app.state.animationSpeed));\r\n    const end_index = this.state.paused === true? animations_index+1:\r\n                              this.state.currentAnimations.length;\r\n    waitAnimateNetwork(this, animations_index, end_index, null);\r\n  }\r\n\r\n  skipBackward(){\r\n    this.clearAnimations();\r\n    const animations_index = Math.max(0,\r\n        this.state.currentAnimationIndex - Math.floor(1000/this.app.state.animationSpeed));\r\n    const end_index = this.state.paused === true? animations_index+1:\r\n                            this.state.currentAnimations.length-1;\r\n    waitAnimateNetwork(this, animations_index, end_index, null);\r\n  }\r\n\r\n  skipToBeginning(){\r\n    this.clearAnimations();\r\n    const animations_index = 0\r\n    this.setState({currentAnimationIndex:0})\r\n    waitAnimateNetwork(this, 0, 1,null);\r\n  }\r\n  skipToEnd(){\r\n    this.clearAnimations();\r\n    const animations_index = this.state.currentAnimations.length-1;\r\n    waitAnimateNetwork(this, animations_index, animations_index+1, null)\r\n  }\r\n\r\n  openNetworkSettings(){\r\n    waitOpenNetworkSettings(this);\r\n  }\r\n\r\n  openAlgorithmSettings(){\r\n    waitOpenAlgorithmSettings(this);\r\n  }\r\n\r\n  saveAsCSV(){\r\n    let csvContent = \"data:text/csv;charset=utf-8,\";\r\n    const vertices = this.state.vertices;\r\n    const edges = this.state.edges;\r\n\r\n    for(let i = 0; i < vertices.length; i ++){\r\n      csvContent += vertices[i].toCSV();\r\n    }\r\n    for(let i = 0; i < edges.length; i++){\r\n      csvContent += (edges[i].toCSV());\r\n    }\r\n    var link = document.createElement('a');\r\n    link.href = csvContent;\r\n    link.download = 'Network3d.csv';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n\r\n  }\r\n\r\n  saveAs(extension){\r\n    const canvas = this.canvas.current;\r\n    const image = canvas.toDataURL(\"network3d/\"+extension);\r\n    var link = document.createElement('a');\r\n    link.href = image;\r\n    link.download = 'Network.'+extension;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  render(){\r\n    return <div>\r\n              <canvas style = {{marginTop: this.props.height*1/20+this.props.height/40}}\r\n              className = \"canvas3d\"\r\n              ref = {this.canvas}\r\n              onMouseLeave = {(e) => this.endDrag(e)}\r\n              onWheel = {(e) => this.zoomCamera(e)}\r\n              onMouseDown = {(e) => this.startDrag(e)}\r\n              onMouseUp = {(e) => this.endDrag(e)}\r\n              onMouseMove = {(e) => this.rotateCamera(e)}>\r\n              </canvas>\r\n              <br></br>\r\n              <div className = \"animationButtons\">\r\n              <button className = \"FirstFrameB\" title = \"Skip to algorithm start\"\r\n              disabled = {this.app.state.running === false || this.state.currentAnimationIndex === 1}\r\n              style = {{height:Math.min(this.state.width/10,100),\r\n                width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                onClick = {() => this.skipToBeginning()}></button>\r\n              <button className = \"FastBackB\" title = \"Rewind algorithm 1 second\"\r\n              disabled = {this.app.state.running === false || this.state.currentAnimationIndex === 1}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                  onClick = {() => this.skipBackward()}></button>\r\n              <button className = \"PreviousFrameB\" title = \"Previous frame\"\r\n              disabled = {this.app.state.running === false || this.state.currentAnimationIndex === 1}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                  onClick = {() => this.rewindFrame()}></button>\r\n              <button className = \"StartB\" hidden = {this.state.paused === false} title = \"Run algorithm\"\r\n              disabled = {(this.state.currentAnimationIndex === this.state.currentAnimations.length)\r\n              && this.state.currentAnimations.length !== 0}\r\n              onClick={() => this.runAlgorithm()}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n              <button className = \"PauseB\" hidden = {this.state.paused === true} title = \"Pause Algorithm\"\r\n              onClick = {() => this.pauseAnimation()}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                   width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n              <button className = \"StopB\"\r\n              title = \"Clear algorithm\"\r\n              disabled = {this.app.state.running === false}\r\n              onClick = {() => this.cancelAnimation()}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n              <button className = \"NextFrameB\"\r\n              title = \"Next Frame\"\r\n              disabled = {this.app.state.running === false\r\n                          || this.state.currentAnimationIndex === this.state.currentAnimations.length}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                  onClick = {() => this.skipFrame()}></button>\r\n              <button className = \"FastForwardB\"\r\n              title = \"Skip forward 1 second\"\r\n              disabled = {this.app.state.running === false\r\n                          || this.state.currentAnimationIndex === this.state.currentAnimations.length}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                  onClick = {() => this.skipForward()}></button>\r\n              <button className = \"LastFrameB\"\r\n              title = \"Skip to algorithm termination\"\r\n              disabled = {this.app.state.running === false\r\n                          || this.state.currentAnimationIndex === this.state.currentAnimations.length}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}\r\n                  onClick = {() => this.skipToEnd()}></button>\r\n              <button className= \"CameraB\"\r\n              title = \"Reset camera\"\r\n              disabled = {this.state.offsetX === 0 && this.state.offsetY === 0 && this.state.scaleFactor === 1}\r\n              onClick = {() => this.resetCamera()}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n              <button className = \"ResetColoringB\"\r\n              title = \"Reset Coloring\"\r\n              disabled = {this.app.state.running === true}\r\n              onClick = {() => this.resetColoring()}\r\n                style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}></button>\r\n              </div>\r\n              <br></br>\r\n              <div className = \"selectContainer\">\r\n                <div className = \"selectalgorow\">\r\n                <select className = \"selectalgo\"\r\n                onChange = {(event) => this.setAlgoType(event.target.value)}\r\n                style = {{width: (this.state.height*8)/10}}>\r\n                  <optgroup label = \"Force Directed Algorithms\">\r\n                  <option value = \"spring\"> Basic Spring Embedding </option>\r\n                  <option value = \"fruchtermanReingold\"> Fruchterman-Reingold </option>\r\n                  <option value = \"kamadaKawai\" disabled = {true} hidden = {true}> Kamada-Kawai </option>\r\n                  <option value = \"forceAtlas2\"> Force Atlas 2 </option>\r\n                  <option value = \"forceatlaslinlog\"> Force Atlas 2 (LinLog) </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Spectral Layout Algorithms\">\r\n                  <option value = \"spectralDrawing\"> Generalized Eigenvector (Koren)</option>\r\n                  <option value = \"hall\" hidden = {true}> Hall's algorithm </option>\r\n                  <option value = \"schwarz\" disabled = {true}> Schwarz Based Method</option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Custom Algorithms\" hidden = {true}>\r\n                    <option value = \"radialFlowDirected\" disabled = {true}>  Radial Flow Directed </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Minimum Spanning Trees\">\r\n                    <option value =\"kruskal\"> Kruskral's Algorithm</option>\r\n                    <option value = \"prim\"> Prim's Algorithm </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"TSP\">\r\n                    <option value = \"2opt\"> 2-Opt </option>\r\n                    <option value = \"3opt\"> 3-Opt </option>\r\n                    <option value = \"2optannealing\"> 2-Opt Simulated Annealing </option>\r\n                    <option value = \"3optannealing\" disabled = {true} hidden = {true}> 3-Opt Simulated Annealing </option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Edge Coloring Algorithms\">\r\n                    <option value = \"misra\"> Misra-Gries Algorithm (Fan Rotation)</option>\r\n                  </optgroup>\r\n                  <optgroup label = \"Vertex Coloring Algorithms\">\r\n                    <option value = \"greedyvertex\"> Greedy Coloring </option>\r\n                  </optgroup>\r\n                </select>\r\n                <div className = \"dropdown\">\r\n                  <button className = \"saveB\"\r\n                  disabled = {this.app.state.running === true && this.state.paused === false}\r\n                  title = \"Save as\"\r\n                  style = {{height:Math.min(this.state.width/10,100),\r\n                  width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}>\r\n                  </button>\r\n                  <div className = \"dropdown-content\">\r\n                    <a className = \"aFile\" onClick = {() => this.saveAsCSV()}>.csv</a>\r\n                    {/*\r\n                    <a className = \"aFile\" onClick = {() => this.saveAs(\"png\")} hidden ={true}>.png</a>\r\n                    <a className = \"aFile\" onClick = {() => this.saveAs(\"jpg\")} hidden = {true}>.jpg</a>\r\n                    */}\r\n\r\n                  </div>\r\n                </div>\r\n                <button className = \"AlgoB\"\r\n                title = \"Algorithm Settings\"\r\n                onClick = {() => this.openAlgorithmSettings()}\r\n                disabled = {this.app.state.running === true}\r\n                  style = {{height:Math.min(this.state.width/10,100),\r\n                    width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}>\r\n                </button>\r\n                </div>\r\n                <br></br>\r\n                <div className = \"selectalgorow\" value = {this.state.randomType}>\r\n                <select className = \"selectalgo\"\r\n                style = {{width: (this.state.height*8)/10}}\r\n                disabled = {this.app.state.running === true}\r\n                onChange = {(event) => this.setRandomizedType(event.target.value)}\r\n                value = {this.state.randomType}>\r\n                  <option value = \"random\" disabled = {this.state.TSP === true}> Random </option>\r\n                  <option value = \"randomcircle\" disabled = {this.state.TSP === true}> Random Sphere </option>\r\n                  <option value = \"cycle\"> Random Hamiltonian Cycle </option>\r\n                  <option value = \"randomclustering\" disabled = {true}> Random Clustering </option>\r\n                </select>\r\n                <button className = \"resetB\"\r\n                onClick = {() => this.resetNetwork()}\r\n                title = \"New random network\"\r\n                disabled = {this.app.state.running === true}\r\n                  style = {{height:Math.min(this.state.width/10,100),\r\n                    width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}>\r\n                    </button>\r\n                <button className = \"generalB\"\r\n                title = \"Network Settings\"\r\n                onClick = {() => this.openNetworkSettings()}\r\n                disabled = {this.app.state.running === true}\r\n                  style = {{height:Math.min(this.state.width/10,100),\r\n                    width: Math.min(this.state.width/10,100), backgroundSize: 'cover'}}>\r\n                    </button>\r\n                </div>\r\n\r\n              </div>\r\n          </div>\r\n  }\r\n\r\n}\r\n\r\nexport default NetworkVisualizer3D;\r\n\r\nasync function waitSetRandomizedType(that,v){\r\n  await that.setState({randomType: v});\r\n  that.resetNetwork();\r\n}\r\n\r\nasync function animateEdges(that, edges){\r\n  await that.setState({edges: edges});\r\n}\r\n\r\nfunction find_max_degree(vertices){\r\n  var max_degree = -Infinity;\r\n  for(let i = 0; i < vertices.length; i++){\r\n    max_degree = Math.max(vertices[i].degree, max_degree);\r\n  }\r\n  return max_degree;\r\n}\r\n\r\nfunction assign_size(degree, max_degree, minsize, maxsize){\r\n  //min degree is 1 or 0\r\n  return minsize +(maxsize - minsize)*(degree/max_degree)\r\n}\r\n\r\nfunction sameColor(startColor, endColor){\r\n  if(startColor[0] === endColor[0] && startColor[1] === endColor[1] && startColor[2] === endColor[2]) return true;\r\n  return false;\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\" + parseInt(color[0]) + \",\" + parseInt(color[1]) + \",\" + parseInt(color[2]) +\")\";\r\n}\r\n\r\nfunction createColorGradient(startColor, endColor, maxDegree){\r\n  // console.log(\"inside color gradient\", startColor, endColor, maxDegree);\r\n  var [startHue, startSaturation, startLightness] = rgb_to_hsl(startColor);\r\n  var [endHue, endSaturation, endLightness] = rgb_to_hsl(endColor);\r\n\r\n  // console.log(startHue, startSaturation, startLightness);\r\n  // console.log(endHue, endSaturation, endLightness);\r\n  var incrementHue = (endHue-startHue)/maxDegree;\r\n\r\n  const gradient = [];\r\n\r\n  for(let i = 0; i < maxDegree; i++){\r\n    const newHue = startHue+(incrementHue*i)%360;\r\n    const [red,green,blue] = hsl_to_rgb((startHue+incrementHue*i)%360, startSaturation,\r\n                                            startLightness)\r\n    gradient.push([Math.abs(red%256), Math.abs(green%256), Math.abs(blue%256)]);\r\n    // console.log(gradient[i]);\r\n  }\r\n  return gradient;\r\n}\r\n\r\nfunction rgb_to_hsl(rgbColor){\r\n  var red = rgbColor[0]/255;\r\n  var green = rgbColor[1]/255;\r\n  var blue = rgbColor[2]/255;\r\n  var Cmax = Math.max(...[red,green,blue]);\r\n  var Cmin = Math.min(...[red,green,blue]);\r\n  var delta = Cmax-Cmin;\r\n\r\n\r\n  var hue = calculate_hue(delta, Cmax, red, green, blue)%360;\r\n  var lightness = (Cmax+Cmin)/2;\r\n  var saturation = delta === 0? 0: delta/(1-Math.abs(2*lightness-1));\r\n\r\n  return [hue, saturation, lightness];\r\n}\r\n\r\nfunction hsl_to_rgb(hue, saturation, lightness){\r\n  const C = (1 - Math.abs(2*lightness-1))*saturation\r\n  const X = C * (1 - Math.abs(hue/60)%2 -1);\r\n  const m = lightness - C/2;\r\n  const [R_prime, G_prime, B_prime] = check_degrees(hue, C, X);\r\n  return [((R_prime+m)*255)%256, ((G_prime + m)* 255)%256, ((B_prime+m) * 255)%256];\r\n}\r\n\r\nfunction calculate_hue(delta, Cmax, red, green, blue){\r\n  if(delta === 0) return 0;\r\n  if(Cmax === red) return 60*(((green-blue)/delta)%6);\r\n  if(Cmax === green) return 60*((blue-red)/delta+2);\r\n  if(Cmax === blue) return 60*((red- green)/delta + 4);\r\n}\r\n\r\nfunction check_degrees(hue, C, X){\r\n  if((hue >= 0 && hue < 60) || hue == 360) return [C,X,0];\r\n  if(hue >= 60 && hue < 120 ) return [X,C,0];\r\n  if(hue >= 120 && hue < 180 ) return [0, C, X];\r\n  if(hue >= 180 && hue < 240 ) return [0, X, C];\r\n  if(hue >= 240 && hue < 300 ) return [X, 0, C];\r\n  if(hue >= 300 && hue < 360 ) return [C, 0, X];\r\n  return [0,0,0];\r\n}\r\n\r\nfunction assign_color(degree, max_degree, gradient){\r\n\r\n  var selection = gradient[Math.floor((degree/max_degree) * (gradient.length-1))]\r\n\r\n  return rgb_to_str(selection)\r\n}\r\n\r\nasync function waitSetEdges(that, sorted_edges,animations){\r\n  await that.setState({edges: sorted_edges});\r\n  waitAnimateNetwork(that, 0, animations.length,animations)\r\n}\r\n\r\nasync function waitOpenNetworkSettings(that){\r\n  await that.app.navbar.current.openSettings();\r\n  that.app.navbar.current.settings.current.generalsettings.current.setOpen(true);\r\n}\r\n\r\nasync function waitOpenAlgorithmSettings(that){\r\n  await that.app.navbar.current.openSettings();\r\n  that.app.navbar.current.settings.current.algorithmsettings.current.setOpen(true);\r\n}\r\n","import React from \"react\";\r\nimport Vertex from \"./datatypes/Vertex\";\r\nimport Edge from \"./datatypes/Edge\";\r\nimport ConfirmationWindow from \"./ConfirmationWindow\";\r\n\r\nimport \"./NetworkCustom.css\";\r\n\r\nconst VERTEX_SIZE = 5;\r\nconst VERTEX_COLOR = \"rgb(0,255,255)\";\r\nconst SELECTED_COLOR = \"rgb(255,0,255)\";\r\n\r\nclass NetworkCustomVisualizer extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      height: 0,\r\n      width: 0,\r\n      gridConstant: 10,\r\n      gridX: 0,\r\n      gridY: 0,\r\n      mouseX: 0,\r\n      mouseY: 0,\r\n      previousMouseX: 0,\r\n      previousMouseY: 0,\r\n      dragging: false,\r\n      edgeStart: [null,null],\r\n      edgeStartIndex: 0,\r\n      mouseLeave: true,\r\n      vertex_list: [],\r\n      edge_list: [],\r\n      vertices: {},\r\n      edges: {},\r\n      operationType: \"newVertex\",\r\n      operationsBuffer: [],\r\n      operationsBufferIndex: -1,\r\n      selected_vertices: null,\r\n      box: null,\r\n      startBoxVertices: null,\r\n    }\r\n    this.app = this.props.app;\r\n    this.canvas = React.createRef();\r\n    this.confirmClear = React.createRef();\r\n  }\r\n\r\n  componentDidMount(){\r\n    const w = window.innerHeight * 0.55;\r\n    const h = window.innerHeight * 0.55;\r\n\r\n    const c = this.state.gridConstant;\r\n    const gridX = w/c;\r\n    const gridY = h/c;\r\n    const vertices = {}\r\n    for(let i = 0; i < c; i++){\r\n      // const x = Math.floor(Math.round((gridX*i+ Number.EPSILON) * 100) / 100);\r\n      for(let j = 0; j < c; j++){\r\n        // const y = Math.floor(Math.round((gridY*j+ Number.EPSILON) * 100) / 100);\r\n        vertices[[i,j]] = [];\r\n      }\r\n    }\r\n    this.setState({height: h, width: w, vertices: vertices, gridX: gridX, gridY: gridY});\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    this.canvas.current.width = this.state.width;\r\n    this.canvas.current.height = this.state.height;\r\n\r\n    const ctx = this.canvas.current.getContext(\"2d\");\r\n    ctx.scale(this.state.scale, this.state.scale);\r\n    ctx.clearRect(0,0,this.state.width, this.state.height);\r\n    for(let i = 0; i < this.state.vertex_list.length; i++){\r\n      const v = this.state.vertex_list[i];\r\n      ctx.beginPath();\r\n      ctx.fillStyle = v.color;\r\n      ctx.arc(v.x,v.y, v.size, 0, Math.PI*2);\r\n      ctx.fill();\r\n      ctx.closePath();\r\n    }\r\n\r\n\r\n    // DEBUGGING ONLY: draw grid\r\n    // for(let i = 1; i < this.state.gridConstant; i++){\r\n    //   ctx.beginPath();\r\n    //   ctx.moveTo(i*this.state.gridX, 0);\r\n    //   ctx.lineTo(i*this.state.gridX, this.state.height);\r\n    //   ctx.stroke();\r\n    //   ctx.closePath();\r\n    // }\r\n    // for(let i = 1; i < this.state.gridConstant; i++){\r\n    //   ctx.beginPath();\r\n    //   ctx.moveTo(0, this.state.gridY*i);\r\n    //   ctx.lineTo(this.state.width, this.state.gridY*i);\r\n    //   ctx.stroke();\r\n    //   ctx.closePath();\r\n    // }\r\n\r\n    for(let i = 0; i < this.state.edge_list.length; i++){\r\n      // console.log(\"edge\", key);\r\n      const e = this.state.edge_list[i];\r\n      const v1 = this.state.vertex_list[e[0]];\r\n      const v2 = this.state.vertex_list[e[1]];\r\n      // console.log(startX, startY, endX, endY)\r\n      ctx.beginPath();\r\n      ctx.fillStyle = \"rgb(0,0,0)\";\r\n      ctx.moveTo(v1.x, v1.y);\r\n      ctx.lineTo(v2.x, v2.y);\r\n      ctx.globalAlpha = 0.3;\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n    }\r\n\r\n    if(this.state.operationType === \"newVertex\" && this.state.mouseLeave === false){\r\n      ctx.beginPath();\r\n      ctx.fillStyle = rgb_to_str(this.app.state.startRed,this.app.state.startGreen,\r\n                                    this.app.state.startBlue);\r\n      ctx.globalAlpha= 0.7;\r\n      ctx.arc(this.state.mouseX, this.state.mouseY, VERTEX_SIZE, 0, 2*Math.PI);\r\n      ctx.fill();\r\n      ctx.closePath();\r\n    }\r\n    if(this.state.operationType === \"ConnectEdge\" && this.state.dragging === true){\r\n      if(this.state.edgeStart[0] !== null && this.state.edgeStart[1] !== null){\r\n        ctx.beginPath();\r\n        ctx.globalAlpha = 0.2;\r\n        ctx.moveTo(this.state.edgeStart[0], this.state.edgeStart[1])\r\n        ctx.lineTo(this.state.mouseX, this.state.mouseY);\r\n        ctx.strokeStyle = \"rgb(0,0,0)\";\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n      }\r\n    }\r\n    if(this.state.box !== null){\r\n      ctx.beginPath();\r\n      ctx.lineWidth = 2;\r\n      ctx.setLineDash([5, 15]);\r\n      ctx.moveTo(this.state.box[0], this.state.box[1]);\r\n      ctx.lineTo(this.state.box[2], this.state.box[1]);\r\n      ctx.moveTo(this.state.box[2], this.state.box[1]);\r\n      ctx.lineTo(this.state.box[2], this.state.box[3]);\r\n      ctx.moveTo(this.state.box[2], this.state.box[3]);\r\n      ctx.lineTo(this.state.box[0], this.state.box[3]);\r\n      ctx.moveTo(this.state.box[0], this.state.box[3]);\r\n      ctx.lineTo(this.state.box[0], this.state.box[1]);\r\n      // ctx.rect(this.state.box[0], this.state.box[1], this.state.box[2], this.state.box[3]);\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n    }\r\n  }\r\n\r\n  updateCursorPostion(e){\r\n    const x = this.state.mouseX;\r\n    const y = this.state.mouseY;\r\n    const prevX = this.state.previousX;\r\n    const prevY = this.state.previousY;\r\n    const vertices = this.state.vertices;\r\n    const edge = this.state.edges;\r\n    const edgeStartIndex = this.state.edgeStartIndex;\r\n    const startX = this.state.edgeStart[0];\r\n    const startY = this.state.edgeStart[1];\r\n    const rect = this.canvas.current.getBoundingClientRect(x,y);\r\n    const box = this.state.box;\r\n    // console.log(this.state.edgeStart);\r\n    if(this.state.operationType === \"ConnectEdge\" && this.state.dragging === true) {\r\n      this.tryConnectEdge(startX, startY, edgeStartIndex, x, y, vertices);\r\n    }\r\n    if(this.state.operationType === \"SelectMove\" && this.state.dragging === true){\r\n      this.createBox(x,y, startX, startY, box, prevX, prevY);\r\n    }\r\n\r\n    const xPos =  e.clientX -rect.left;\r\n    const yPos =  e.clientY - rect.top;\r\n\r\n    this.setState({mouseX: xPos,mouseY:yPos, previousX: x, previousY:y, mouseLeave: false});\r\n\r\n  }\r\n\r\n  setOperationType(v){\r\n    // console.log(this.state.vertices);\r\n    if(this.state.selected_vertices !== null){\r\n      for(let i = 0; i < this.state.selected_vertices.length; i++){\r\n        this.state.selected_vertices[i].vertex.color = VERTEX_COLOR;\r\n      }\r\n    }\r\n    this.setState({operationType: v, box:null, selected_vertices: null, edgeStart: [null, null]})\r\n  }\r\n\r\n  processClickOutcome(e){\r\n    if(this.state.operationType === \"newVertex\") this.placeVertex(e);\r\n  }\r\n\r\n  processDragOutcome(e){\r\n    this.setState({dragging:true});\r\n\r\n  }\r\n\r\n  placeVertex(e){\r\n    if(this.state.vertex_list.length >= 200){\r\n      alert(\"Maximum number of vertices (200) exceeded\");\r\n      return\r\n    }\r\n    const rect = this.canvas.current.getBoundingClientRect();\r\n    const vertices = this.state.vertices;\r\n    const vertex_list = this.state.vertex_list;\r\n    const x = e.clientX -rect.left;\r\n    const y = e.clientY - rect.top\r\n    const [vertexX, vertexY] = this.getGrid(x, y)\r\n\r\n    /* TODO CHECK if another vertex is too closed*/\r\n    var tooClose = false;\r\n    for(let i = 0; i < vertices[[vertexX,vertexY]].length; i++){\r\n      const v = this.state.vertex_list[vertices[[vertexX,vertexY]][i]];\r\n      if(distance(v.x,v.y,x, y) < (VERTEX_SIZE+VERTEX_SIZE)*(VERTEX_SIZE+VERTEX_SIZE)){\r\n        tooClose = true;\r\n      }\r\n    }\r\n    if(tooClose === false){\r\n      const v = new Vertex(x, y);\r\n      v.size = VERTEX_SIZE;\r\n      v.color = VERTEX_COLOR;\r\n      var details = {}\r\n      vertex_list.push(v)\r\n      vertices[[vertexX, vertexY]].push(vertex_list.length-1);\r\n      details.vertex = v.copy_vertex();\r\n      details.vertexIndex = vertex_list.length-1;\r\n      details.grid = [vertexX, vertexY];\r\n      details.gridIndex = [vertices[[vertexX, vertexY]]].length-1;\r\n      this.addActionToBuffer(\"vertex\", details);\r\n      this.setState({vertices:vertices, vertex_list: vertex_list});\r\n    }\r\n  }\r\n\r\n  tryConnectEdge(edge_startX, edge_startY, edgeStartIndex, x, y, vertices){\r\n    // console.log(\"connecting\");\r\n    // console.log(\"input\", x, y, vertices, edge_start, edge_end);\r\n    if(edge_startX === null && edge_startY === null){\r\n      const [new_x,new_y] = this.getGrid(x,y);\r\n      // console.log(new_x, new_y);\r\n      for(let i = 0; i < vertices[[new_x,new_y]].length; i++){\r\n        const v = this.state.vertex_list[vertices[[new_x,new_y]][i]];\r\n        if(distance(v.x,v.y,x, y) < (VERTEX_SIZE+2)*(VERTEX_SIZE+2)){\r\n          this.setState({edgeStart: [v.x,v.y], edgeStartIndex: vertices[[new_x,new_y]][i]});\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    else{\r\n      const [new_x,new_y] = this.getGrid(x,y);\r\n      // console.log(vertices[[new_x, new_y]]);\r\n      // console.log(new_x, new_y);\r\n      for(let i = 0; i < vertices[[new_x,new_y]].length; i++){\r\n        const v = this.state.vertex_list[vertices[[new_x,new_y]][i]];\r\n        // console.log(v);\r\n        if(distance(v.x,v.y,x, y) < (VERTEX_SIZE+2)*(VERTEX_SIZE+2)){\r\n          // console.log(\"VERTEX SPOTTED!\");\r\n          const edges = this.state.edges;\r\n          const edge_list = this.state.edge_list;\r\n          const [new_edges, new_edge_list] = this.addEdge(edges,\r\n                    edge_list, this.state.edgeStartIndex, vertices[[new_x,new_y]][i]);\r\n          this.setState({edgeStart: [v.x,v.y],\r\n            edgeStartIndex: vertices[[new_x, new_y]][i],edges: new_edges,\r\n                                                  edge_list: new_edge_list});\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  addEdge(edges, edge_list, startVertexIndex, endVertexIndex){\r\n\r\n    if(edges[[startVertexIndex,endVertexIndex]] === undefined &&\r\n      edges[[endVertexIndex, startVertexIndex]] === undefined &&\r\n                    startVertexIndex !== endVertexIndex){\r\n      // console.log(\"successful connection\");\r\n      if(edge_list.length > 199){\r\n        alert(\"Maximum number of edges(600) exceeded\");\r\n        return [edges,edge_list];\r\n      }\r\n      edges[[startVertexIndex, endVertexIndex]] = true;\r\n      edge_list.push([startVertexIndex, endVertexIndex]);\r\n      const details = {};\r\n      details.grid = [startVertexIndex, endVertexIndex];\r\n      details.edge = [startVertexIndex, endVertexIndex];\r\n      details.index = edge_list.length-1;\r\n      this.addActionToBuffer(\"edge\", details);\r\n    }\r\n    return [edges, edge_list];\r\n  }\r\n\r\n  createBox(x,y, startX,startY, box, previousX, previousY){\r\n    if(startX === null && startY === null){\r\n      if(box === null){\r\n        const selected_vertices = this.state.selected_vertices;\r\n        if(selected_vertices !== null){\r\n          for(let i = 0; i < selected_vertices.length; i++){\r\n            selected_vertices[i].vertex.color = VERTEX_COLOR;\r\n          }\r\n        }\r\n      this.setState({edgeStart: [x,y], selected_vertices: null});\r\n      }\r\n      else{\r\n        if(Math.min(box[0], box[2]) < x && x < Math.max(box[0], box[2]) &&\r\n          Math.min(box[1], box[3])< y && y<Math.max(box[1], box[3])){\r\n            var deltaX = x - previousX;\r\n            var deltaY = y - previousY;\r\n            const selected_vertices = this.state.selected_vertices;\r\n            if(box[0]+deltaX<0 || box[2]+deltaX > this.state.width) deltaX = 0;\r\n            if(box[1]+deltaY<0 || box[3]+deltaY > this.state.height) deltaY = 0;\r\n            const vertices = this.state.vertices;\r\n            this.updateSelectedVertices(vertices, selected_vertices, deltaX, deltaY);\r\n            this.setState({box: [box[0]+deltaX, box[1]+deltaY, box[2]+deltaX, box[3]+deltaY]});\r\n          }\r\n          else{\r\n            this.setState({box:null});\r\n          }\r\n      }\r\n    }\r\n    else{\r\n      // console.log(startX, startY, x, y);\r\n      this.setState({box: [Math.min(startX,x), Math.min(startY,y), Math.max(x,startX), Math.max(y,startY)]});\r\n    }\r\n  }\r\n\r\n  updateSelectedVertices(vertices,selected_vertices, dx, dy){\r\n    var new_vertices = vertices;\r\n    for(let i = 0; i < selected_vertices.length; i++){\r\n      selected_vertices[i].vertex.x += dx;\r\n      selected_vertices[i].vertex.y += dy;\r\n      const new_grid = this.getGrid(selected_vertices[i].vertex.x,\r\n                                    selected_vertices[i].vertex.y);\r\n\r\n      if(new_grid[0] !== selected_vertices[i].grid[0] || new_grid[1]\r\n        !== selected_vertices[i].grid[1]){\r\n          new_vertices = this.updateVertexGrids(vertices,selected_vertices[i], new_grid);\r\n        };\r\n    }\r\n    this.setState({vertices: new_vertices});\r\n  }\r\n\r\n  updateVertexGrids(vertices,selected_vertex, new_grid){\r\n    const old_grid = selected_vertex.grid;\r\n    // console.log(\"updating vertex grids from\", old_grid, \"to\", new_grid);\r\n    const index_value = vertices[old_grid].indexOf(selected_vertex.index);\r\n    // console.log(\"element to remove\", selected_vertex.index);\r\n    vertices[old_grid].splice(index_value,1);\r\n    // console.log(\"vertices[old+grid]\",vertices[old_grid]);\r\n    vertices[new_grid].push(selected_vertex.index);\r\n    // console.log(\"vertices[new_grid]\",vertices[new_grid]);\r\n    selected_vertex.grid = new_grid;\r\n\r\n    return vertices;\r\n  }\r\n\r\n\r\n  clearDragOutcome(){\r\n    this.setState({dragging:false, edgeStart: [null,null], edgeStartIndex: null});\r\n    const box = this.state.box;\r\n    const selected_vertices = this.state.selected_vertices;\r\n    if(box !== null &&  selected_vertices === null){\r\n      this.selectVertices(box);\r\n    }\r\n    else if(box !==null){\r\n      const selected_vertices = this.state.selected_vertices;\r\n      const selected_vertices_copy = [];\r\n      for(let i = 0; i < selected_vertices.length; i ++){\r\n        const new_details = {}\r\n        new_details.vertex = selected_vertices[i].vertex.copy_vertex();\r\n        new_details.vertex.color = VERTEX_COLOR;\r\n        new_details.grid = selected_vertices[i].grid;\r\n        new_details.index = selected_vertices[i].index;\r\n        selected_vertices_copy.push(new_details);\r\n      }\r\n      const box_select = {}\r\n      const startBox = this.state.startBoxVertices;\r\n      // console.log(\"assert\", startBox !== null);\r\n      box_select.start = startBox;\r\n      box_select.end = selected_vertices_copy;\r\n      const is_different_box = this.isDifferentBox(startBox, selected_vertices_copy);\r\n      if(is_different_box === true) this.addActionToBuffer(\"box\", box_select);\r\n      this.setState({startBoxVertices: null});\r\n    }\r\n  }\r\n\r\n  isDifferentBox(start, end){\r\n    if(start === undefined || end === undefined ||\r\n        start === null || end === null) return false;\r\n    if(start.length === 0 || end.length === 0) return false;\r\n\r\n    if(start[0].vertex.x !== end[0].vertex.x ||\r\n              start[0].vertex.y !== end[0].vertex.y) return true;\r\n    return false;\r\n  }\r\n\r\n  getGrid(x,y){\r\n    const gridX = this.state.gridX;\r\n    const gridY = this.state.gridY;\r\n\r\n    const new_x = Math.floor(x/gridX);\r\n    const new_y = Math.floor(y/gridY);\r\n    return [Math.min(Math.max(0,new_x), this.state.gridConstant-1),\r\n      Math.min(Math.max(new_y,0),this.state.gridConstant-1)];\r\n  }\r\n\r\n  getListGrid(x0, y0, x1, y1){\r\n    const startGrid = this.getGrid(x0,y0);\r\n    const endGrid = this.getGrid(x1,y1);\r\n    // console.log(\"startGrid\", startGrid);\r\n    // console.log(\"endGrid\", endGrid);\r\n    if(startGrid[0] === endGrid[0] && startGrid[1] === endGrid[1]) return [startGrid];\r\n    else if(startGrid[0] === endGrid[0]){\r\n      const res = [];\r\n      for(let i = startGrid[1]; i <= endGrid[1]; i++){\r\n        res.push([startGrid[0], i])\r\n      }\r\n      return res;\r\n    }\r\n    else if(startGrid[1] === endGrid[1]){\r\n      const res = [];\r\n      for(let j = startGrid[0]; j <= endGrid[0]; j++){\r\n        res.push([j, startGrid[1]]);\r\n      }\r\n      return res;\r\n    }\r\n    else{\r\n      const res = [];\r\n      for(let i = startGrid[1]; i <= endGrid[1]; i++){\r\n        for(let j = startGrid[0]; j <= endGrid[0]; j++){\r\n          res.push([j, i]);\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  selectVertices(box){\r\n    var x0 = Math.min(box[0], box[2]);\r\n    var y0 = Math.min(box[1], box[3]);\r\n    var x1 = Math.max(box[0], box[2]);\r\n    var y1 = Math.max(box[1], box[3]);\r\n\r\n    // console.log(\"coordinates\", x0,y0,x1,y1);\r\n    const boxesToCheck = this.getListGrid(x0,y0,x1,y1);\r\n    // console.log(\"boxes\", boxesToCheck);\r\n    const selected_vertices = this.unPackVertexFromGrid(boxesToCheck, x0, y0, x1,y1);\r\n    // console.log(\"selected_vertices\", selected_vertices);\r\n    const selected_vertices_copy = [];\r\n    for(let i = 0; i < selected_vertices.length; i++){\r\n      const new_details = {}\r\n      new_details.vertex = selected_vertices[i].vertex.copy_vertex();\r\n      new_details.grid = selected_vertices[i].grid;\r\n      new_details.index = selected_vertices[i].index;\r\n      selected_vertices_copy.push(new_details);\r\n    }\r\n    for(let i = 0; i < selected_vertices.length; i++){\r\n      selected_vertices[i].vertex.color = SELECTED_COLOR;\r\n    }\r\n    this.setState({selected_vertices: selected_vertices, startBoxVertices: selected_vertices_copy});\r\n  }\r\n\r\n  unPackVertexFromGrid(box_array, x0, y0, x1, y1){\r\n    const selected_vertices = [];\r\n    // console.log(this.state.vertices);\r\n    for(let i = 0; i < box_array.length; i++){\r\n      var index_list = this.state.vertices[box_array[i]];\r\n      for(let j = 0; j < index_list.length; j++){\r\n        const v = this.state.vertex_list[index_list[j]]\r\n        if(v.x >= x0 && v.y >= y0 && v.x <=x1 && v.y <= y1)selected_vertices.push({vertex: v,\r\n                                      grid: box_array[i], index: index_list[j]});\r\n      }\r\n    }\r\n    return selected_vertices;\r\n  }\r\n\r\n  /*\r\n  The following accpetable {types:details} pairs are\r\n    vertex :\r\n    edge :\r\n    box :\r\n  */\r\n  addActionToBuffer(type, details){\r\n    var buffer = this.state.operationsBuffer;\r\n    var bufferIndex = this.state.operationsBufferIndex;\r\n    if(bufferIndex === buffer.length-1){\r\n      buffer.push({type:type, details: details});\r\n      bufferIndex++;\r\n      // console.log(\"buffer\", buffer);\r\n      // console.log(\"bufferIndex\", bufferIndex);\r\n      this.setState({operationsBuffer: buffer, operationsBufferIndex: bufferIndex});\r\n      // console.log(buffer);\r\n    }\r\n    else{\r\n      // console.log(\"Not at buffer end\", buffer);\r\n      // console.log(bufferIndex)\r\n      const new_buffer =[]\r\n      for(let i = 0; i < bufferIndex+1; i++){\r\n        new_buffer.push(buffer[i]);\r\n      }\r\n      // console.log(\"spliced buffer\", new_buffer)\r\n      // console.log(new_buffer);\r\n      new_buffer.push({type: type, details: details});\r\n      // console.log(new_buffer);\r\n      bufferIndex ++;\r\n      // console.log(\"assert\", bufferIndex === new_buffer.length-1);\r\n      this.setState({operationsBuffer: new_buffer, operationsBufferIndex: bufferIndex});\r\n      // console.log(new_buffer);\r\n    }\r\n  }\r\n\r\n  undoActionFromBuffer(){\r\n    this.setOperationType(\"undo\");\r\n    var bufferIndex = this.state.operationsBufferIndex;\r\n    const buffer = this.state.operationsBuffer;\r\n    // console.log(\"buffer\", buffer, \"index\", bufferIndex);\r\n    if(buffer[bufferIndex].type === \"vertex\"){\r\n      const vertex_list = this.state.vertex_list;\r\n      const vertices = this.state.vertices;\r\n      vertex_list.splice(buffer[bufferIndex].details.vertexIndex, 1);\r\n      vertices[buffer[bufferIndex].details.grid].splice(buffer[bufferIndex].gridIndex,1);\r\n      bufferIndex --;\r\n      this.setState({vertex_list: vertex_list, vertices: vertices, operationsBufferIndex: bufferIndex});\r\n    }\r\n    else if(buffer[bufferIndex].type === \"edge\"){\r\n      const edge_list = this.state.edge_list;\r\n      const edges = this.state.edges;\r\n      edge_list.splice(buffer[bufferIndex].details.index,1);\r\n      edges[buffer[bufferIndex].details.grid] = undefined;\r\n      bufferIndex --;\r\n      this.setState({edge_list: edge_list, edges: edges, operationsBufferIndex: bufferIndex});\r\n    }\r\n    else if(buffer[bufferIndex].type === \"box\"){\r\n      const startBox = buffer[bufferIndex].details.start;\r\n      const endBox = buffer[bufferIndex].details.end;\r\n      const vertices = this.state.vertices;\r\n      const vertex_list = this.state.vertex_list;\r\n\r\n      for(let i = 0; i < endBox.length; i++){\r\n        const index_value = vertices[endBox[i].grid].indexOf(endBox[i].index);\r\n        vertices[endBox[i].grid].splice(index_value,1);\r\n        vertices[startBox[i].grid].push(endBox[i].index);\r\n        vertex_list[endBox[i].index] = startBox[i].vertex;\r\n      }\r\n      bufferIndex --;\r\n      this.setState({vertices: vertices, vertex_list: vertex_list, operationsBufferIndex: bufferIndex});\r\n    }\r\n\r\n  }\r\n\r\n  redoActionFromBuffer(){\r\n    this.setOperationType(\"redo\")\r\n    var bufferIndex = this.state.operationsBufferIndex;\r\n    const buffer = this.state.operationsBuffer;\r\n    // console.log(\"buffer\", buffer, \"index\", bufferIndex);\r\n    if(buffer[bufferIndex+1].type === \"vertex\"){\r\n      bufferIndex ++;\r\n      const vertex_list = this.state.vertex_list;\r\n      const vertices = this.state.vertices;\r\n      vertex_list.push(buffer[bufferIndex].details.vertex);\r\n      vertices[buffer[bufferIndex].details.grid].push(vertex_list.length-1);\r\n      this.setState({vertex_list: vertex_list, vertices: vertices, operationsBufferIndex: bufferIndex});\r\n    }\r\n    else if(buffer[bufferIndex+1].type === \"edge\"){\r\n      bufferIndex ++;\r\n      const edge_list = this.state.edge_list;\r\n      const edges = this.state.edges;\r\n      edge_list.push(buffer[bufferIndex].details.edge);\r\n      edges[buffer[bufferIndex].details.grid] = true;\r\n      this.setState({edge_list: edge_list, edges: edges, operationsBufferIndex: bufferIndex});\r\n    }\r\n    else if(buffer[bufferIndex+1].type === \"box\"){\r\n      const startBox = buffer[bufferIndex+1].details.start;\r\n      const endBox = buffer[bufferIndex+1].details.end;\r\n      const vertices = this.state.vertices;\r\n      const vertex_list = this.state.vertex_list;\r\n      for(let i = 0; i < startBox.length; i++){\r\n        const index_value = vertices[startBox[i].grid].indexOf(startBox[i].index);\r\n        vertices[startBox[i].grid].splice(index_value, 1);\r\n        vertices[endBox[i].grid].push(startBox[i].index);\r\n        vertex_list[startBox[i].index]= endBox[i].vertex;\r\n      }\r\n      bufferIndex++;\r\n      this.setState({vertices: vertices, vertex_list: vertex_list, operationsBufferIndex: bufferIndex});\r\n    }\r\n  }\r\n\r\n  processMouseLeave(){\r\n    this.setState({mouseLeave:true});\r\n    this.clearDragOutcome();\r\n  }\r\n\r\n  saveAsCSV(){\r\n    let csvContent = \"data:text/csv;charset=utf-8,\";\r\n    const vertex_list = this.state.vertex_list;\r\n    const edge_list = this.state.edge_list;\r\n    //update degrees appropriately\r\n    for(let i = 0 ; i < vertex_list.length; i ++){\r\n      vertex_list[i].degree = 0;\r\n    }\r\n    for(let i = 0; i < edge_list.length; i++){\r\n      vertex_list[edge_list[i][0]].degree ++;\r\n      vertex_list[edge_list[i][1]].degree ++;\r\n    }\r\n\r\n    for(let i = 0; i < vertex_list.length; i ++){\r\n      csvContent += vertex_list[i].toCSV();\r\n    }\r\n    for(let i = 0; i < edge_list.length; i++){\r\n      const edge = new Edge(edge_list[i][0], edge_list[i][1], \"rgb(0,0,0)\",1)\r\n      edge.alpha = 0.1;\r\n      csvContent += (edge.toCSV());\r\n    }\r\n    var link = document.createElement('a');\r\n    link.href = csvContent;\r\n    link.download = 'Network.csv';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n\r\n  }\r\n\r\n  saveAs(extension){\r\n    const canvas = this.canvas.current;\r\n    const image = canvas.toDataURL(\"network/\"+extension);\r\n    var link = document.createElement('a');\r\n    link.href = image;\r\n    link.download = 'Network.'+extension;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n\r\n\r\n  }\r\n\r\n\r\n  render(){\r\n    const num_b = 7;\r\n    return <div>\r\n            <ConfirmationWindow\r\n            ref = {this.confirmClear}\r\n            parent={this}\r\n            trigger ={clearNetwork}\r\n            msg = {\"Any unsaved changes will be lost.\"}/>\r\n            <canvas style = {{marginTop: this.props.height*1/20+this.props.height/40}}\r\n            onClick = {(e) => this.processClickOutcome(e)}\r\n            onMouseMove = {(e) => this.updateCursorPostion(e)}\r\n            onMouseLeave = {() => this.processMouseLeave()}\r\n            onMouseDown = {(e) => this.processDragOutcome(e)}\r\n            onMouseUp = {() => this.clearDragOutcome()}\r\n            className = \"networkCanvas\"\r\n            ref = {this.canvas}>\r\n            </canvas>\r\n            <br></br>\r\n            <div className = \"animationsButtons\">\r\n            <button className = \"placeB\"\r\n            disabled = {this.state.operationType === \"newVertex\"}\r\n            title = \"Place Vertices\"\r\n            onClick = {() => this.setOperationType(\"newVertex\")}\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n              width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n             </button>\r\n            <button className = \"connectB\"\r\n            disabled = {this.state.operationType === \"ConnectEdge\"}\r\n            title = \"Connect Vertices\"\r\n            onClick = {() => this.setOperationType(\"ConnectEdge\")}\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n              width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n             </button>\r\n            <button className = \"selectB\"\r\n            disabled = {this.state.operationType === \"SelectMove\"}\r\n            title = \"Select & Move Area\"\r\n            onClick = {() => this.setOperationType(\"SelectMove\")}\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n              width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n             </button>\r\n             {/*\r\n            <button className = \"moveB\"\r\n            title = \"Move Frame\"\r\n            disabled = {this.state.operationType === \"moveCamera\"}\r\n            onClick = {() => this.setOperationType(\"moveCamera\")}\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n              width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n            </button>\r\n            <button className = \"CameraB\"\r\n            title = \"Reset Camera\"\r\n            onClick = {() => this.resetCamera()}\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n            width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n            </button> */}\r\n            <button className = \"clearB\"\r\n            title = \"Clear Frame\"\r\n            onClick = {() => this.confirmClear.current.setOpen(true)}\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n              width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n            </button>\r\n            {/*\r\n            <button className = \"settingsB\"\r\n            title = \"Graphical settings\"\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n              width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n            </button>\r\n            */}\r\n            <button className = \"undoB\"\r\n            onClick = {() => this.undoActionFromBuffer()}\r\n            disabled = {this.state.operationsBufferIndex === -1}\r\n            title = \"Undo\"\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n              width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n            </button>\r\n            <button className = \"redoB\"\r\n            onClick = {() => this.redoActionFromBuffer()}\r\n            disabled = {this.state.operationsBuffer.length-1 === this.state.operationsBufferIndex}\r\n            title = \"Redo\"\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n            width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n            </button>\r\n            <div className = \"dropdown\">\r\n              <button className = \"saveB\"\r\n              title = \"Save as\"\r\n              style = {{height:Math.min(this.state.width/num_b,100),\r\n              width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n              </button>\r\n              <div className = \"dropdown-content\">\r\n                <a className = \"aFile\" onClick = {() => this.saveAsCSV()}>.csv</a>\r\n                <a className = \"aFile\" onClick = {() => this.saveAs(\"png\")}>.png</a>\r\n                <a className = \"aFile\" onClick = {() => this.saveAs(\"jpg\")}>.jpg</a>\r\n              </div>\r\n            </div>\r\n            {/*\r\n            <button className = \"uploadB\"\r\n            disabled = {true}\r\n            title = \"Upload\"\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n            width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n            </button>\r\n            <button className = \"exportB\"\r\n            title = \"Export to Network Viusalizer\"\r\n            style = {{height:Math.min(this.state.width/num_b,100),\r\n            width: Math.min(this.state.width/num_b,100), backgroundSize: 'cover'}}>\r\n            </button>\r\n            */}\r\n            </div>\r\n\r\n            <br></br>\r\n           </div>\r\n  }\r\n}\r\n\r\nfunction clearNetwork(that){\r\n  const vertices = {};\r\n  const c = that.state.gridConstant;\r\n  for(let i = 0; i < c; i++){\r\n    for(let j = 0; j < c; j++){\r\n      vertices[[i,j]] = [];\r\n    }\r\n  }\r\n  that.setState({vertices: vertices, edges: {}, edgeStart: [null,null], box:null,\r\n  selected_vertices: null, vertex_list: [], edge_list: [], operationsBuffer: [],\r\n    operationsBufferIndex:-1});\r\n}\r\n\r\nfunction distance(x1,x2,y1,y2){\r\n  return Math.pow(x1-y1,2) + Math.pow(x2-y2, 2);\r\n}\r\n\r\nfunction rgb_to_str(color){\r\n  return \"rgb(\"+color[0]+\",\" + color[1]+\",\"+color[2]+\")\";\r\n}\r\n\r\n\r\n\r\nexport default NetworkCustomVisualizer;\r\n","import React from 'react';\nimport './App.css';\nimport NetworkVisualizer from \"./Network\";\nimport NetworkNavBar from \"./Settings/NetworkNavBar\";\nimport NetworkVisualizer3D from \"./Network3D\";\nimport NetworkCustomVisualizer from \"./NetworkCustom\";\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      running:false,\n      animationSpeed: 50,\n      numV: 120,\n      numE: 300,\n      connected: \"True\",\n      maxE: 600,\n      minE: 20,\n      height: 0,\n      width: 0,\n      settings: {\n        spring: {ka: 2, kr: 1, eps: 0.5,\n                delta: 0.1, areascaling: 0,\n                distanceType: 1},\n        fruchterman: {cTemp: 1,\n                tempHeuristic: \"Logarithmic\", eps: 0.5},\n        forceatlas2: {fr: 10, gravity: false,\n                      gravityType: \"Normal\", kg: 10,\n                      tau: 0.1, ksmax: 10,\n                      overlappingNodes: true},\n        forceatlaslinlog: {fr: 10, gravity: false,\n                      gravityType: \"Normal\", kg: 10,\n                      tau: 0.1, ksmax: 10,\n                      overlappingNodes: true},\n        kruskal: {red: 255,\n                  green: 0,\n                  blue: 0},\n        prim: {red:255,\n               green: 0,\n               blue: 0},\n        opt2:{\n          timeout: 30,\n          red:255,\n          green: 0,\n          blue: 0,\n        },\n        opt2annealing:{\n          timeout: 30,\n          temperature: 100,\n          acceptance: 0.0001,\n          startColor: [255,0,0],\n          endColor: [0,0,255],\n        },\n        opt3:{\n          timeout: 30,\n          red:255,\n          green: 0,\n          blue: 0,\n        },\n        greedy:{\n          startRed: 0,\n          startGreen: 255,\n          startBlue: 0,\n          endRed: 255,\n          endGreen: 0,\n          endBlue: 0,\n        }\n      },\n\n\n      dimension: 2,\n      degreesize: false,\n      minsize: 3,\n      maxsize: 10,\n      startRed: 0,\n      startGreen: 255,\n      startBlue: 255,\n      endRed: 0,\n      endGreen: 255,\n      endBlue: 255,\n      filter: \"\",\n      filtering: false,\n    }\n    this.network = React.createRef();\n    this.network3d = React.createRef();\n    this.customnetwork = React.createRef();\n    this.navbar = React.createRef();\n    \n  }\n\n  componentDidMount(){\n    const w = window.innerWidth;\n    const h = window.innerHeight;\n    this.setState({height: h, width: w});\n  }\n\n  render() {\n    let network;\n    if(this.state.dimension === 2){\n      network = <NetworkVisualizer height = {this.state.height}\n      ref = {this.network} app = {this}/>\n    }\n    else if(this.state.dimension === 3){\n      network = <NetworkVisualizer3D\n      height = {this.state.height}\n      ref = {this.network3d} app = {this}/>\n    }\n    else if(this.state.dimension === \"Custom\"){\n      network = <NetworkCustomVisualizer height = {this.state.height}\n      ref = {this.customnetwork} app = {this}></NetworkCustomVisualizer>\n    }\n\n    return (\n      <div className=\"App\">\n        <div className = \"AppElements\">\n          <NetworkNavBar height = {this.state.height}\n          ref = {this.navbar} app = {this}/>\n          {network}\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}